"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4859],{8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var r=n(6540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},8677:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"functions-docs/function-docs/library-functions","title":"Function Libraries","description":"The following library functions can be imported for additional functionality:","source":"@site/docs/functions-docs/function-docs/library-functions.md","sourceDirName":"functions-docs/function-docs","slug":"/functions-docs/function-docs/library-functions","permalink":"/sqrl/docs/functions-docs/function-docs/library-functions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"System Functions","permalink":"/sqrl/docs/functions-docs/function-docs/system-functions"},"next":{"title":"\ud83e\udde0 Streaming Concepts","permalink":"/sqrl/docs/concepts"}}');var i=n(4848),s=n(8453);const o={},d="Function Libraries",c={},l=[{value:"Math",id:"math",level:2},{value:"OpenAI",id:"openai",level:2}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"function-libraries",children:"Function Libraries"})}),"\n",(0,i.jsx)(t.p,{children:"The following library functions can be imported for additional functionality:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"#math",children:"Advanced Math"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"#openai",children:"OpenAI"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"math",children:"Math"}),"\n",(0,i.jsxs)(t.p,{children:["Functions for advanced mathematics under the ",(0,i.jsx)(t.code,{children:"math"})," package."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Function Name"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Description"})})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"cbrt(double)"})}),(0,i.jsxs)(t.td,{children:["Calculates the cube root of a number. For example, ",(0,i.jsx)(t.code,{children:"cbrt(27.0)"})," returns ",(0,i.jsx)(t.code,{children:"3.0"}),", which is the cube root of 27.0."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"copy_sign(double, double)"})}),(0,i.jsxs)(t.td,{children:["Returns the first argument with the sign of the second argument. For example, ",(0,i.jsx)(t.code,{children:"copy_sign(2.0, -3.0)"})," returns ",(0,i.jsx)(t.code,{children:"-2.0"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"expm1(double)"})}),(0,i.jsxs)(t.td,{children:["Calculates e^x - 1 with better precision for small values. For example, ",(0,i.jsx)(t.code,{children:"expm1(0.0)"})," returns ",(0,i.jsx)(t.code,{children:"0.0"}),", as ",(0,i.jsx)(t.code,{children:"e^0 - 1 = 0"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"hypot(double, double)"})}),(0,i.jsxs)(t.td,{children:["Computes sqrt(x\xb2 + y\xb2) without intermediate overflow or underflow. For example, ",(0,i.jsx)(t.code,{children:"hypot(3.0, 4.0)"})," returns ",(0,i.jsx)(t.code,{children:"5.0"}),", which is the hypotenuse of a 3-4-5 triangle."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"log1p(double)"})}),(0,i.jsxs)(t.td,{children:["Computes the natural logarithm of 1 + x (log(1 + x)) accurately for small x. For example, ",(0,i.jsx)(t.code,{children:"log1p(0.0)"})," returns ",(0,i.jsx)(t.code,{children:"0.0"})," as ",(0,i.jsx)(t.code,{children:"log(1 + 0) = 0"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"next_after(double, double)"})}),(0,i.jsxs)(t.td,{children:["Returns the next floating-point number towards the direction of the second argument. For example, ",(0,i.jsx)(t.code,{children:"next_after(1.0, 2.0)"})," returns the next representable number after 1.0."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"scalb(double, bigint)"})}),(0,i.jsxs)(t.td,{children:["Multiplies a floating-point number by 2 raised to the power of an integer. For example, ",(0,i.jsx)(t.code,{children:"scalb(1.0, 3)"})," returns ",(0,i.jsx)(t.code,{children:"8.0"})," as ",(0,i.jsx)(t.code,{children:"1.0 * 2^3 = 8.0"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"ulp(double)"})}),(0,i.jsxs)(t.td,{children:["Returns the size of the unit in the last place (ULP) of the argument. For example, ",(0,i.jsx)(t.code,{children:"ulp(1.0)"})," returns the ULP of 1.0."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"binomial_distribution(bigint, double, bigint)"})}),(0,i.jsxs)(t.td,{children:["Calculates the probability of obtaining a number of successes in a fixed number of trials for a binomial distribution. For example, ",(0,i.jsx)(t.code,{children:"binomial_distribution(10, 0.5, 5)"})," returns the probability of 5 successes out of 10 trials with a 50% success rate."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"exponential_distribution(double, double)"})}),(0,i.jsxs)(t.td,{children:["Evaluates the probability density or cumulative distribution of an exponential distribution. For example, ",(0,i.jsx)(t.code,{children:"exponential_distribution(1.0, 2.0)"})," returns the exponential distribution's probability for a given rate and time."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"normal_distribution(double, double, double)"})}),(0,i.jsxs)(t.td,{children:["Evaluates the cumulative distribution function for a normal (Gaussian) distribution. For example, ",(0,i.jsx)(t.code,{children:"normal_distribution(0.0, 1.0, 1.0)"})," returns the probability for a standard normal distribution with mean 0 and standard deviation 1."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"poisson_distribution(double, bigint)"})}),(0,i.jsxs)(t.td,{children:["Evaluates the probability mass function of a Poisson-distributed random variable. For example, ",(0,i.jsx)(t.code,{children:"poisson_distribution(1.0, 5)"})," returns the probability of observing 5 events when the average event rate is 1.0."]})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"openai",children:"OpenAI"}),"\n",(0,i.jsxs)(t.p,{children:["OpenAI API function under the ",(0,i.jsx)(t.code,{children:"openai"})," package."]}),"\n",(0,i.jsx)(t.p,{children:"You can use these UDFs in your SQRL scripts to perform tasks such as text completion, extraction, and embedding, leveraging the power of OpenAI models."}),"\n",(0,i.jsxs)(t.p,{children:["For each function it is required to set the ",(0,i.jsx)(t.code,{children:"OPENAI_API_KEY"})," environment variable with your OpenAI API key."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Function Name"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Description"})})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"completions(String prompt, String model_name)"})}),(0,i.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model. For example, ",(0,i.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o')"})," returns a possible response to the prompt."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"completions(String prompt, String model_name, Integer maxOutputTokens)"})}),(0,i.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model, with an upper limit on the number of output tokens.                                             For example, ",(0,i.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o', 100)"})," returns a possible response to the prompt, limited to 100 characters."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"completions(String prompt, String model_name, Integer maxOutputTokens, Double temperature)"})}),(0,i.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model, with an upper limit on the number of output tokens and a specified temperature. For example, ",(0,i.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o', 100, 0.5)"})," returns a possible response to the prompt, limited to 100 characters and weighted by a temperature of 0.5."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"completions(String prompt, String model_name, Integer maxOutputTokens, Double temperature, Double topP)"})}),(0,i.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model, with an upper limit on the number of output tokens, a specified temperature, and a specified top-p value. For example, ",(0,i.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o', 100, 0.5, 0.9)"})," returns a possible response to the prompt, limited to 100 characters, weighted by a temperature of 0.5, and with a top-p value of 0.9."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"extract_json(String prompt, String model_name)"})}),(0,i.jsxs)(t.td,{children:["Extracts JSON data from the given prompt using the specified OpenAI model. For example, ",(0,i.jsx)(t.code,{children:"extract_json('What is AI?', 'gpt-4o')"})," returns any relevant JSON data for the prompt."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"extract_json(String prompt, String model_name, Double temperature)"})}),(0,i.jsxs)(t.td,{children:["Extracts JSON data from the given prompt using the specified OpenAI model and a specified temperature. For example,                                                             ",(0,i.jsx)(t.code,{children:"extract_json('What is AI?', 'gpt-4o', 0.5)"})," returns any relevant JSON data for the prompt, weighted by a temperature of 0.5."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"extract_json(String prompt, String model_name, Double temperature, Double topP)"})}),(0,i.jsxs)(t.td,{children:["Extracts JSON data from the given prompt using the specified OpenAI model, with a specified temperature and top-p value.                                                                                                                                                                                       For example, ",(0,i.jsx)(t.code,{children:"extract_json('What is AI?', 'gpt-4o', 0.5, 0.9)"})," returns any relevant JSON data for the prompt, weighted by a temperature of 0.5 and with a top-p value of 0.9."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"vector_embedd(String text, String model_name)"})}),(0,i.jsxs)(t.td,{children:["Embeds the given text into a vector using the specified OpenAI model. For example, ",(0,i.jsx)(t.code,{children:"vector_embedd('What is AI?', 'text-embedding-ada-002')"})," returns a vector representation of the text."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);