"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4630],{7004:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"functions-library-generated","title":"Library Functions","description":"DataSQRL provides extended library functions that can be imported into your SQRL scripts. These functions offer specialized capabilities for mathematical operations, data processing, AI integration, and external system connectivity.","source":"@site/docs/functions-library-generated.md","sourceDirName":".","slug":"/functions-library-generated","permalink":"/docs/functions-library-generated","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"System Functions","permalink":"/docs/functions-system-generated"},"next":{"title":"\ud83d\udee0\ufe0f Compiler","permalink":"/docs/compiler"}}');var r=n(4848),s=n(8453);const d={},o="Library Functions",c={},l=[{value:"Math Functions",id:"math-functions",level:2},{value:"Iceberg Functions",id:"iceberg-functions",level:2},{value:"Openai Functions",id:"openai-functions",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"library-functions",children:"Library Functions"})}),"\n",(0,r.jsx)(t.p,{children:"DataSQRL provides extended library functions that can be imported into your SQRL scripts. These functions offer specialized capabilities for mathematical operations, data processing, AI integration, and external system connectivity."}),"\n",(0,r.jsxs)(t.p,{children:["Library functions must be imported into the SQRL script via one of the following ",(0,r.jsx)(t.code,{children:"IMPORT"})," statements:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"IMPORT library-name.*; --imports all functions in the library\nIMPORT library-name.function-name; --imports a single function by name\nIMPORT library-name.function-name AS myName; --imports a single function under a given name\n"})}),"\n",(0,r.jsx)(t.h2,{id:"math-functions",children:"Math Functions"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Function"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Import"}),(0,r.jsx)(t.th,{children:"Requirements"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"cbrt(double)"})}),(0,r.jsxs)(t.td,{children:["Calculates the cube root of a number. For example, ",(0,r.jsx)(t.code,{children:"cbrt(27.0)"})," returns ",(0,r.jsx)(t.code,{children:"3.0"}),", which is the cube root of 27.0."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.cbrt;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"copy_sign(double, double)"})}),(0,r.jsxs)(t.td,{children:["Returns the first argument with the sign of the second argument. For example, ",(0,r.jsx)(t.code,{children:"copy_sign(2.0, -3.0)"})," returns ",(0,r.jsx)(t.code,{children:"-2.0"}),"."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.copy_sign;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"expm1(double)"})}),(0,r.jsxs)(t.td,{children:["Calculates e^x - 1 with better precision for small values. For example, ",(0,r.jsx)(t.code,{children:"expm1(0.0)"})," returns ",(0,r.jsx)(t.code,{children:"0.0"}),", as ",(0,r.jsx)(t.code,{children:"e^0 - 1 = 0"}),"."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.expm1;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"hypot(double, double)"})}),(0,r.jsxs)(t.td,{children:["Computes sqrt(x\xb2 + y\xb2) without intermediate overflow or underflow. For example, ",(0,r.jsx)(t.code,{children:"hypot(3.0, 4.0)"})," returns ",(0,r.jsx)(t.code,{children:"5.0"}),", which is the hypotenuse of a 3-4-5 triangle."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.hypot;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"log1p(double)"})}),(0,r.jsxs)(t.td,{children:["Computes the natural logarithm of 1 + x (log(1 + x)) accurately for small x. For example, ",(0,r.jsx)(t.code,{children:"log1p(0.0)"})," returns ",(0,r.jsx)(t.code,{children:"0.0"})," as ",(0,r.jsx)(t.code,{children:"log(1 + 0) = 0"}),"."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.log1p;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"next_after(double, double)"})}),(0,r.jsxs)(t.td,{children:["Returns the next floating-point number towards the direction of the second argument. For example, ",(0,r.jsx)(t.code,{children:"next_after(1.0, 2.0)"})," returns the next representable number after 1.0."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.next_after;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"scalb(double, bigint)"})}),(0,r.jsxs)(t.td,{children:["Multiplies a floating-point number by 2 raised to the power of an integer. For example, ",(0,r.jsx)(t.code,{children:"scalb(1.0, 3)"})," returns ",(0,r.jsx)(t.code,{children:"8.0"})," as ",(0,r.jsx)(t.code,{children:"1.0 * 2^3 = 8.0"}),"."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.scalb;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"ulp(double)"})}),(0,r.jsxs)(t.td,{children:["Returns the size of the unit in the last place (ULP) of the argument. For example, ",(0,r.jsx)(t.code,{children:"ulp(1.0)"})," returns the ULP of 1.0."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.ulp;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"binomial_distribution(bigint, double, bigint)"})}),(0,r.jsxs)(t.td,{children:["Calculates the probability of obtaining a number of successes in a fixed number of trials for a binomial distribution. For example, ",(0,r.jsx)(t.code,{children:"binomial_distribution(10, 0.5, 5)"})," returns the probability of 5 successes out of 10 trials with a 50% success rate."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.binomial_distribution;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"exponential_distribution(double, double)"})}),(0,r.jsxs)(t.td,{children:["Evaluates the probability density or cumulative distribution of an exponential distribution. For example, ",(0,r.jsx)(t.code,{children:"exponential_distribution(1.0, 2.0)"})," returns the exponential distribution's probability for a given rate and time."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.exponential_distribution;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"normal_distribution(double, double, double)"})}),(0,r.jsxs)(t.td,{children:["Evaluates the cumulative distribution function for a normal (Gaussian) distribution. For example, ",(0,r.jsx)(t.code,{children:"normal_distribution(0.0, 1.0, 1.0)"})," returns the probability for a standard normal distribution with mean 0 and standard deviation 1."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.normal_distribution;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"poisson_distribution(double, bigint)"})}),(0,r.jsxs)(t.td,{children:["Evaluates the probability mass function of a Poisson-distributed random variable. For example, ",(0,r.jsx)(t.code,{children:"poisson_distribution(1.0, 5)"})," returns the probability of observing 5 events when the average event rate is 1.0."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT math.poisson_distribution;"})}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"iceberg-functions",children:"Iceberg Functions"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Function"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Import"}),(0,r.jsx)(t.th,{children:"Requirements"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"read_partition_sizes(String warehouse, String catalogType, String catalogName, String databaseName, String tableName)"})}),(0,r.jsx)(t.td,{children:"Calculates the total size on disk in bytes for each partition in an Iceberg table."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT iceberg.read_partition_sizes;"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"delete_duplicated_data(String warehouse, String catalogType, String catalogName, String databaseName, String tableName, Long maxTimeBucket, Map[Map[String, String], Integer] partitionSet)"})}),(0,r.jsx)(t.td,{children:"Deletes duplicated data from an Iceberg table based on partition specifications and time bucket constraints."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT iceberg.delete_duplicated_data;"})}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"openai-functions",children:"Openai Functions"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Function"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Import"}),(0,r.jsx)(t.th,{children:"Requirements"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"completions(String prompt, String model_name)"})}),(0,r.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model. For example, ",(0,r.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o')"})," returns a possible response to the prompt."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.completions;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"completions(String prompt, String model_name, Integer maxOutputTokens)"})}),(0,r.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model, with an upper limit on the number of output tokens. For example, ",(0,r.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o', 100)"})," returns a possible response to the prompt, limited to 100 characters."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.completions;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"completions(String prompt, String model_name, Integer maxOutputTokens, Double temperature)"})}),(0,r.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model, with an upper limit on the number of output tokens and a specified temperature. For example, ",(0,r.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o', 100, 0.5)"})," returns a possible response to the prompt, limited to 100 characters and weighted by a temperature of 0.5."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.completions;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"completions(String prompt, String model_name, Integer maxOutputTokens, Double temperature, Double topP)"})}),(0,r.jsxs)(t.td,{children:["Generates a completion for the given prompt using the specified OpenAI model, with an upper limit on the number of output tokens, a specified temperature, and a specified top-p value. For example, ",(0,r.jsx)(t.code,{children:"completions('What is AI?', 'gpt-4o', 100, 0.5, 0.9)"})," returns a possible response to the prompt, limited to 100 characters, weighted by a temperature of 0.5, and with a top-p value of 0.9."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.completions;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"extract_json(String prompt, String model_name)"})}),(0,r.jsxs)(t.td,{children:["Extracts JSON data from the given prompt using the specified OpenAI model. For example, ",(0,r.jsx)(t.code,{children:"extract_json('What is AI?', 'gpt-4o')"})," returns any relevant JSON data for the prompt."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.extract_json;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"extract_json(String prompt, String model_name, Double temperature)"})}),(0,r.jsxs)(t.td,{children:["Extracts JSON data from the given prompt using the specified OpenAI model and a specified temperature. For example, ",(0,r.jsx)(t.code,{children:"extract_json('What is AI?', 'gpt-4o', 0.5)"})," returns any relevant JSON data for the prompt, weighted by a temperature of 0.5."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.extract_json;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"extract_json(String prompt, String model_name, Double temperature, Double topP)"})}),(0,r.jsxs)(t.td,{children:["Extracts JSON data from the given prompt using the specified OpenAI model, with a specified temperature and top-p value. For example, ",(0,r.jsx)(t.code,{children:"extract_json('What is AI?', 'gpt-4o', 0.5, 0.9)"})," returns any relevant JSON data for the prompt, weighted by a temperature of 0.5 and with a top-p value of 0.9."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.extract_json;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"vector_embed(String text, String model_name)"})}),(0,r.jsxs)(t.td,{children:["Embeds the given text into a vector using the specified OpenAI model. For example, ",(0,r.jsx)(t.code,{children:"vector_embed('What is AI?', 'text-embedding-ada-002')"})," returns a vector representation of the text."]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"IMPORT openai.vector_embed;"})}),(0,r.jsx)(t.td,{children:"Set OPENAI_API_KEY environment variable"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(6540);const r={},s=i.createContext(r);function d(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);