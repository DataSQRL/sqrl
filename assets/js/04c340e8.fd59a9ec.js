"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6554],{4186:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var i=n(4752),a=n(4848),o=n(8453),r=n(9030);const s={slug:"temporal-join",title:"Why Temporal Join is Stream Processing\u2019s Superpower",authors:["matthias"],tags:["Join","Flink","DataSQRL"]},l=void 0,c={authorsImageUrls:[void 0]},m=[];function p(e){const t={a:"a",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n,{children:[(0,a.jsx)("meta",{property:"og:image",content:(0,r.Ay)("img/blog/temporal_join.png")}),(0,a.jsx)("meta",{name:"twitter:image",content:(0,r.Ay)("img/blog/temporal_join.png")})]}),"\n",(0,a.jsx)(t.p,{children:"Stream processing technologies like Apache Flink introduce a new type of data transformation that\u2019s very powerful: the temporal join. Temporal joins add context to data streams while being efficient and fast to execute."}),"\n",(0,a.jsx)("img",{src:(0,r.Ay)("/img/blog/temporal_join.svg"),alt:"Temporal Join >",width:"30%"}),"\n",(0,a.jsx)(t.p,{children:"This article introduces the temporal join, compares it to the traditional inner join, explains when to use it, and why it is a secret superpower."}),"\n",(0,a.jsx)(t.p,{children:"Table of Contents:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"#review",children:"The Join: A Quick Review"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"#tempjoin",children:"The Temporal Join: Linking Stream and State"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"#tempinner",children:"Temporal Join vs Inner Join"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"#efficient",children:"Why Temporal Joins are Fast and Efficient"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"#easy",children:"Temporal Joins Made Easy to Use"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"#summary",children:"Summary"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},4752:e=>{e.exports=JSON.parse('{"permalink":"/sqrl/blog/temporal-join","source":"@site/blog/2025-03-03-temporal-join/index.mdx","title":"Why Temporal Join is Stream Processing\u2019s Superpower","description":"Stream processing technologies like Apache Flink introduce a new type of data transformation that\u2019s very powerful: the temporal join. Temporal joins add context to data streams while being efficient and fast to execute.","date":"2025-03-03T00:00:00.000Z","tags":[{"inline":true,"label":"Join","permalink":"/sqrl/blog/tags/join"},{"inline":true,"label":"Flink","permalink":"/sqrl/blog/tags/flink"},{"inline":true,"label":"DataSQRL","permalink":"/sqrl/blog/tags/data-sqrl"}],"readingTime":8.33,"hasTruncateMarker":true,"authors":[{"name":"Matthias Broecheler","title":"CEO of DataSQRL","url":"https://github.com/mbroecheler","page":{"permalink":"/sqrl/blog/authors/matthias"},"socials":{"linkedin":"https://www.linkedin.com/in/matthiasbroecheler/","github":"https://github.com/mbroecheler","newsletter":"https://www.matthiasb.com"},"imageURL":"/sqrl/img/headshots/matthias1.png","key":"matthias"}],"frontMatter":{"slug":"temporal-join","title":"Why Temporal Join is Stream Processing\u2019s Superpower","authors":["matthias"],"tags":["Join","Flink","DataSQRL"]},"unlisted":false,"prevItem":{"title":"DataSQRL 0.6 Release: The Streaming Data Framework","permalink":"/sqrl/blog/datasqrl-0.6"}}')},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(6540);const a={},o=i.createContext(a);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);