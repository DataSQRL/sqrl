"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3873],{8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>t});var r=s(6540);const d={},c=r.createContext(d);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(c.Provider,{value:n},e.children)}},8730:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"configuration","title":"DataSQRL Configuration (package.json file)","description":"DataSQRL projects are configured with one or more JSON files.","source":"@site/docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/docs/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd0c Source & Sink Connectors","permalink":"/docs/connectors"},"next":{"title":"Functions","permalink":"/docs/functions"}}');var d=s(4848),c=s(8453);const i={},t="DataSQRL Configuration (package.json file)",l={},o=[{value:"Top-Level Keys",id:"top-level-keys",level:2},{value:"Engines (<code>engines</code>)",id:"engines-engines",level:2},{value:"Flink (<code>flink</code>)",id:"flink-flink",level:3},{value:"Kafka (<code>kafka</code>)",id:"kafka-kafka",level:3},{value:"Vert.x (<code>vertx</code>)",id:"vertx-vertx",level:3},{value:"Postgres (<code>postgres</code>)",id:"postgres-postgres",level:3},{value:"Iceberg (<code>iceberg</code>)",id:"iceberg-iceberg",level:3},{value:"Snowflake (<code>snowflake</code>)",id:"snowflake-snowflake",level:3},{value:"Connectors (<code>connectors</code>)",id:"connectors-connectors",level:2},{value:"Compiler (<code>compiler</code>)",id:"compiler-compiler",level:2},{value:"Dependencies (<code>dependencies</code>)",id:"dependencies-dependencies",level:2},{value:"Discovery (<code>discovery</code>)",id:"discovery-discovery",level:2},{value:"Script (<code>script</code>)",id:"script-script",level:2},{value:"Package Metadata (<code>package</code>)",id:"package-metadata-package",level:2},{value:"Test-Runner (<code>test-runner</code>)",id:"test-runner-test-runner",level:2},{value:"Template &amp; Environment Variables",id:"template--environment-variables",level:2},{value:"Default Configuration",id:"default-configuration",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsxs)(n.h1,{id:"datasqrl-configuration-packagejson-file",children:["DataSQRL Configuration (",(0,d.jsx)(n.code,{children:"package.json"})," file)"]})}),"\n",(0,d.jsxs)(n.p,{children:["DataSQRL projects are configured with one or more ",(0,d.jsx)(n.strong,{children:"JSON"})," files.",(0,d.jsx)(n.br,{}),"\n","Unless a file is passed explicitly to ",(0,d.jsx)(n.code,{children:"datasqrl compile -c ..."}),", the compiler looks for a ",(0,d.jsx)(n.code,{children:"package.json"}),"\nin the working directory; if none is found the ",(0,d.jsx)(n.strong,{children:"built-in default"})," (shown ",(0,d.jsx)(n.a,{href:"#default-configuration",children:"here"}),") is applied."]}),"\n",(0,d.jsxs)(n.p,{children:["Multiple files can be provided; they are merged ",(0,d.jsx)(n.strong,{children:"in order"})," \u2013 latter files override earlier ones, objects are ",(0,d.jsx)(n.em,{children:"deep-merged"}),", and array values are replaced wholesale."]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"top-level-keys",children:"Top-Level Keys"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Purpose"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"version"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"1"})}),(0,d.jsxs)(n.td,{children:["Configuration schema version \u2013 must be ",(0,d.jsx)(n.code,{children:"1"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"enabled-engines"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string[]"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'["vertx","postgres","kafka","flink"]'})}),(0,d.jsx)(n.td,{children:"Ordered list of engines that form the runtime pipeline."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"engines"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:"\u2013"}),(0,d.jsx)(n.td,{children:"Engine specific configuration (see below)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"connectors"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#connectors-connectors",children:"see defaults"})}),(0,d.jsx)(n.td,{children:"External system connectors configuration (see below)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"compiler"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#compiler-compiler",children:"see defaults"})}),(0,d.jsx)(n.td,{children:"Controls compilation, logging, and generated artifacts."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"dependencies"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"{}"})}),(0,d.jsxs)(n.td,{children:["Aliases for packages that can be ",(0,d.jsx)(n.code,{children:"IMPORT"}),"-ed from SQRL."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"discovery"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"{}"})}),(0,d.jsx)(n.td,{children:"Rules for automatic table discovery when importing data files."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"script"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:"\u2013"}),(0,d.jsx)(n.td,{children:"Points to the main SQRL script and GraphQL schema."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"package"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:"\u2013"}),(0,d.jsx)(n.td,{children:"Optional metadata (name, description, etc.) for publishing."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"test-runner"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"object"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#test-runner-test-runner",children:"see defaults"})}),(0,d.jsx)(n.td,{children:"Integration test execution settings (see below)."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"engines-engines",children:["Engines (",(0,d.jsx)(n.code,{children:"engines"}),")"]}),"\n",(0,d.jsxs)(n.p,{children:["Each sub-key below ",(0,d.jsx)(n.code,{children:"engines"})," must match one of the IDs in ",(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"enabled-engines"})}),"."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json5",children:'{\n  "engines": {\n    "<engine-id>": {\n      "type": "<engine-id>", // optional; inferred from key if omitted\n      "config": { /*...*/ }  // engine-specific knobs (Flink SQL options, etc.)\n    }\n  }\n}\n'})}),"\n",(0,d.jsxs)(n.h3,{id:"flink-flink",children:["Flink (",(0,d.jsx)(n.code,{children:"flink"}),")"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Notes"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"config"})}),(0,d.jsx)(n.td,{children:"object"}),(0,d.jsx)(n.td,{children:"see below"}),(0,d.jsxs)(n.td,{children:["Copied verbatim into the generated Flink SQL job (e.g. ",(0,d.jsx)(n.code,{children:'"table.exec.source.idle-timeout": "5 s"'}),")."]})]})})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "config": {\n    "execution.runtime-mode": "STREAMING",\n    "execution.target": "local",\n    "execution.attached": true,\n    "rest.address": "localhost",\n    "rest.port": 8081,\n    "state.backend.type": "rocksdb",\n    "table.exec.resource.default-parallelism": 1,\n    "taskmanager.memory.network.max": "800m"\n  }\n}\n'})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Built-in connector templates"}),(0,d.jsx)(n.br,{}),"\n",(0,d.jsx)(n.code,{children:"postgres"}),", ",(0,d.jsx)(n.code,{children:"postgres_log-source"}),", ",(0,d.jsx)(n.code,{children:"postgres_log-sink"}),",",(0,d.jsx)(n.br,{}),"\n",(0,d.jsx)(n.code,{children:"kafka"}),", ",(0,d.jsx)(n.code,{children:"kafka-keyed"}),", ",(0,d.jsx)(n.code,{children:"kafka-upsert"}),",",(0,d.jsx)(n.br,{}),"\n",(0,d.jsx)(n.code,{children:"iceberg"}),", ",(0,d.jsx)(n.code,{children:"localfile"}),", ",(0,d.jsx)(n.code,{children:"print"}),"."]}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"kafka-kafka",children:["Kafka (",(0,d.jsx)(n.code,{children:"kafka"}),")"]}),"\n",(0,d.jsxs)(n.p,{children:["The default configuration only declares the engine; topic definitions are injected at ",(0,d.jsx)(n.strong,{children:"plan"})," time.",(0,d.jsx)(n.br,{}),"\n","Additional keys (e.g. ",(0,d.jsx)(n.code,{children:"bootstrap.servers"}),") may be added under ",(0,d.jsx)(n.code,{children:"config"}),"."]}),"\n",(0,d.jsxs)(n.h3,{id:"vertx-vertx",children:["Vert.x (",(0,d.jsx)(n.code,{children:"vertx"}),")"]}),"\n",(0,d.jsxs)(n.p,{children:["A GraphQL server that routes queries to the backing database/log engines.",(0,d.jsx)(n.br,{}),"\n","No mandatory keys; connection pools are generated from the overall plan."]}),"\n",(0,d.jsxs)(n.h3,{id:"postgres-postgres",children:["Postgres (",(0,d.jsx)(n.code,{children:"postgres"}),")"]}),"\n",(0,d.jsx)(n.p,{children:"No mandatory keys. Physical DDL (tables, indexes, views) is produced automatically."}),"\n",(0,d.jsxs)(n.h3,{id:"iceberg-iceberg",children:["Iceberg (",(0,d.jsx)(n.code,{children:"iceberg"}),")"]}),"\n",(0,d.jsxs)(n.p,{children:["Used as a ",(0,d.jsx)(n.em,{children:"table-format"})," engine together with a query engine such as Flink or Snowflake."]}),"\n",(0,d.jsxs)(n.h3,{id:"snowflake-snowflake",children:["Snowflake (",(0,d.jsx)(n.code,{children:"snowflake"}),")"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"schema-type"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"aws-glue"'})}),(0,d.jsx)(n.td,{children:"\u2013"}),(0,d.jsx)(n.td,{children:"External catalog implementation."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"catalog-name"})}),(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"\u2013"}),(0,d.jsx)(n.td,{children:"Glue catalog."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"external-volume"})}),(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"\u2013"}),(0,d.jsx)(n.td,{children:"Snowflake external volume name."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"url"})}),(0,d.jsx)(n.td,{children:"string"}),(0,d.jsx)(n.td,{children:"\u2013"}),(0,d.jsx)(n.td,{children:"Full JDBC URL including auth params."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"connectors-connectors",children:["Connectors (",(0,d.jsx)(n.code,{children:"connectors"}),")"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json5",children:'{\n  "connectors": {\n    "postgres": { "connector": "jdbc-sqrl",  /*...*/ },\n    "kafka-mutation": { "connector" : "kafka", /*...*/ },\n    "kafka": { "connector" : "kafka", /*...*/ },\n    "localfile": { "connector": "filesystem", /*...*/ },\n    "iceberg": { "connector": "iceberg", /*...*/ },\n    "postgres_log-source": { "connector": "postgres-cdc", /*...*/ },\n    "postgres_log-sink": { "connector": "jdbc-sqrl", /*...*/ },\n    "print": { "connector": "print", /*...*/ }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"compiler-compiler",children:["Compiler (",(0,d.jsx)(n.code,{children:"compiler"}),")"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json5",children:'{\n  "compiler": {\n    "logger": "print",             // "print" | any configured log engine | "none"\n    "extended-scalar-types": true, // expose extended scalar types in generated GraphQL\n    "compile-flink-plan": true,    // compile Flink physical plans where supported\n    "cost-model": "DEFAULT",       // cost model to use for DAG optimization\n\n    "explain": {                   // artifacts in build/pipeline_*.*\n      "text":     true,\n      "sql":      false,\n      "logical":  true,\n      "physical": false,\n      "sorted":   true,            // deterministic ordering (mostly for tests)\n      "visual":   true\n    }\n  }\n}\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"dependencies-dependencies",children:["Dependencies (",(0,d.jsx)(n.code,{children:"dependencies"}),")"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json",children:'{\n  "dependencies": {\n    "my-alias": {\n      "folder": "folder-name"\n    }\n  }\n}\n'})}),"\n",(0,d.jsxs)(n.p,{children:["If only ",(0,d.jsx)(n.code,{children:"folder"})," is given the dependency key (",(0,d.jsx)(n.code,{children:"my-alias"})," in the above example) acts as a ",(0,d.jsx)(n.strong,{children:"local folder alias"}),"."]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"discovery-discovery",children:["Discovery (",(0,d.jsx)(n.code,{children:"discovery"}),")"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Purpose"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"pattern"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string (regex)"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"null"})}),(0,d.jsxs)(n.td,{children:["Filters which external tables are automatically exposed in ",(0,d.jsx)(n.code,{children:"IMPORT \u2026"})," statements. Example: ",(0,d.jsx)(n.code,{children:'"^public\\\\..*"'})]})]})})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"script-script",children:["Script (",(0,d.jsx)(n.code,{children:"script"}),")"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"main"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string"})}),(0,d.jsxs)(n.td,{children:["Path to the main ",(0,d.jsx)(n.code,{children:".sqrl"})," file."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"graphql"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string"})}),(0,d.jsxs)(n.td,{children:["Optional GraphQL schema file (defaults to ",(0,d.jsx)(n.code,{children:"schema.graphqls"}),")."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"operations"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string[]"})}),(0,d.jsx)(n.td,{children:"Optional GraphQL operation definitions."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"package-metadata-package",children:["Package Metadata (",(0,d.jsx)(n.code,{children:"package"}),")"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Required"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"yes"})}),(0,d.jsxs)(n.td,{children:["Reverse-DNS style identifier (",(0,d.jsx)(n.code,{children:"org.project.module"}),")."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"description"})}),(0,d.jsx)(n.td,{children:"no"}),(0,d.jsx)(n.td,{children:"Short summary."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"license"})}),(0,d.jsx)(n.td,{children:"no"}),(0,d.jsx)(n.td,{children:"SPDX license id or free-text."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"homepage"})}),(0,d.jsx)(n.td,{children:"no"}),(0,d.jsx)(n.td,{children:"Web site."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"documentation"})}),(0,d.jsx)(n.td,{children:"no"}),(0,d.jsx)(n.td,{children:"Docs link."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"topics"})}),(0,d.jsx)(n.td,{children:"no"}),(0,d.jsx)(n.td,{children:"String array of tags/keywords."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"test-runner-test-runner",children:["Test-Runner (",(0,d.jsx)(n.code,{children:"test-runner"}),")"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Key"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Meaning"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"snapshot-folder"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"./snapshots"})}),(0,d.jsx)(n.td,{children:"Snapshots output directory."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"test-folder"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"./tests"})}),(0,d.jsx)(n.td,{children:"Tests output directory."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"delay-sec"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"30"})}),(0,d.jsxs)(n.td,{children:["Wait between data-load and snapshot. Set ",(0,d.jsx)(n.code,{children:"-1"})," to disable."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"mutation-delay-sec"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"0"})}),(0,d.jsx)(n.td,{children:"Pause(s) between mutation queries."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"required-checkpoints"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"0"})}),(0,d.jsxs)(n.td,{children:["Minimum completed Flink checkpoints before assertions run (requires ",(0,d.jsx)(n.code,{children:"delay-sec = -1"}),")."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"create-topics"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"string[]"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Kafka topics to create before tests start."})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"template--environment-variables",children:"Template & Environment Variables"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Environment variables"})," use ",(0,d.jsx)(n.code,{children:"${VAR_NAME}"})," \u2014 resolved by the DataSQRL launcher at runtime.",(0,d.jsx)(n.br,{}),"\n","Example: ",(0,d.jsx)(n.code,{children:"${JDBC_PASSWORD}"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"SQRL variables"})," use ",(0,d.jsx)(n.code,{children:"${sqrl:<identifier>}"})," and are filled automatically by the compiler, mostly inside connector templates.",(0,d.jsx)(n.br,{}),"\n","Common identifiers include ",(0,d.jsx)(n.code,{children:"table-name"}),", ",(0,d.jsx)(n.code,{children:"original-table-name"}),", ",(0,d.jsx)(n.code,{children:"filename"}),", ",(0,d.jsx)(n.code,{children:"format"}),", and ",(0,d.jsx)(n.code,{children:"kafka-key"}),"."]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["Unresolved ",(0,d.jsx)(n.code,{children:"${sqrl:*}"})," placeholders raise a validation error."]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,d.jsxs)(n.p,{children:["The built-in fallback (excerpt - full version ",(0,d.jsx)(n.a,{href:"https://raw.githubusercontent.com/DataSQRL/sqrl/refs/heads/main/sqrl-planner/src/main/resources/default-package.json",children:"here"}),"):"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-json5",children:'{\n  "version": 1,\n  "enabled-engines": ["vertx", "postgres", "kafka", "flink"],\n  "engines": {\n    "flink": {\n      "config": {\n        "execution.runtime-mode": "STREAMING",\n        "execution.target": "local",\n        "execution.attached": true,\n        "rest.address": "localhost",\n        "rest.port": 8081,\n        "state.backend.type": "rocksdb",\n        "table.exec.resource.default-parallelism": 1,\n        "taskmanager.memory.network.max": "800m"\n      }\n    },\n    "snowflake": {\n      "schema-type": "aws-glue",\n      "catalog-name": "${SNOWFLAKE_CATALOG_NAME}",\n      "external-volume": "${SNOWFLAKE_EXTERNAL_VOLUME}",\n      "url": "jdbc:snowflake://${SNOWFLAKE_ID}.snowflakecomputing.com/?..."\n    }\n  },\n  "compiler": {\n    "logger": "print",\n    "extended-scalar-types": true,\n    "compile-flink-plan": true,\n    "cost-model": "DEFAULT",\n    "explain": {\n      "text": true,\n      "sql": false,\n      "logical": true,\n      "physical": false,\n      "sorted": true,\n      "visual": true\n    }\n  },\n  "connectors": {\n    "postgres": { "connector": "jdbc-sqrl",  /*...*/ },\n    "kafka-mutation": { "connector" : "kafka", /*...*/ },\n    "kafka": { "connector" : "kafka", /*...*/ },\n    "localfile": { "connector": "filesystem", /*...*/ },\n    "iceberg": { "connector": "iceberg", /*...*/ },\n    "postgres_log-source": { "connector": "postgres-cdc", /*...*/ },\n    "postgres_log-sink": { "connector": "jdbc-sqrl", /*...*/ },\n    "print": { "connector": "print", /*...*/ }\n  },\n  "test-runner": {\n    "snapshot-folder": "./snapshots",\n    "test-folder": "./tests",\n    "delay-sec": 30,\n    "mutation-delay-sec": 0,\n    "required-checkpoints": 0\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}}}]);