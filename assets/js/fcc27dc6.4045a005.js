"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4347],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}},8811:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"configuration-engine/postgres","title":"PostgreSQL Engine Configuration","description":"PostgreSQL is a realtime database that stores the materialized views and tables generated by your DataSQRL pipeline for low-latency querying.","source":"@site/docs/configuration-engine/postgres.md","sourceDirName":"configuration-engine","slug":"/configuration-engine/postgres","permalink":"/docs/configuration-engine/postgres","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Vert.x Engine","permalink":"/docs/configuration-engine/vertx"},"next":{"title":"Iceberg Engine","permalink":"/docs/configuration-engine/iceberg"}}');var s=i(4848),t=i(8453);const o={},l="PostgreSQL Engine Configuration",a={},d=[{value:"Configuration Options",id:"configuration-options",level:2},{value:"Basic Configuration",id:"basic-configuration",level:2},{value:"Deployment Configuration",id:"deployment-configuration",level:2},{value:"Instance Size Options",id:"instance-size-options",level:3},{value:"Deployment Example",id:"deployment-example",level:3},{value:"Usage Notes",id:"usage-notes",level:2},{value:"Internal Environment Variables",id:"internal-environment-variables",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"postgresql-engine-configuration",children:"PostgreSQL Engine Configuration"})}),"\n",(0,s.jsx)(n.p,{children:"PostgreSQL is a realtime database that stores the materialized views and tables generated by your DataSQRL pipeline for low-latency querying."}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(n.p,{children:"No mandatory configuration keys are required. Physical DDL (tables, indexes, views) is produced automatically by the DataSQRL compiler."}),"\n",(0,s.jsx)(n.h2,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "engines": {\n    "postgres": {\n      "config": {\n        // Optional PostgreSQL-specific settings\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"deployment-configuration",children:"Deployment Configuration"}),"\n",(0,s.jsx)(n.p,{children:"PostgreSQL supports deployment-specific configuration for database scaling and high availability:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Key"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"instance-size"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"string"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Database instance size for compute and memory"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"replica-count"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"integer"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Number of read replicas (minimum: 0, maximum varies)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"instance-size-options",children:"Instance Size Options"}),"\n",(0,s.jsxs)(n.p,{children:["Available ",(0,s.jsx)(n.code,{children:"instance-size"})," options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dev"})," - Development/testing size with minimal resources"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"small"})," - Small production workloads"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"medium"})," - Medium production workloads"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"large"})," - Large production workloads"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"xlarge"})," - Extra large production workloads"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"deployment-example",children:"Deployment Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "engines": {\n    "postgres": {\n      "deployment": {\n        "instance-size": "large",\n        "replica-count": 2\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Database schema is automatically generated from your SQRL script"}),"\n",(0,s.jsx)(n.li,{children:"Tables, indexes, and views are created based on the compiled data pipeline"}),"\n",(0,s.jsx)(n.li,{children:"Connection parameters are typically provided via environment variables"}),"\n",(0,s.jsx)(n.li,{children:"The engine handles both real-time data ingestion and query serving"}),"\n",(0,s.jsx)(n.li,{children:"Optimized for low-latency reads of materialized data"}),"\n",(0,s.jsx)(n.li,{children:"Read replicas improve query performance and provide redundancy"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"internal-environment-variables",children:"Internal Environment Variables"}),"\n",(0,s.jsxs)(n.p,{children:["When running pipelines with the DataSQRL ",(0,s.jsx)(n.code,{children:"run"})," command, the following environment variables are used\nin the configuration:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_VERSION"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_HOST"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_PORT"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_DATABASE"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_AUTHORITY"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_JDBC_URL"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_USERNAME"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"POSTGRES_PASSWORD"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);