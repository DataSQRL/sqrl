"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5312],{110:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var i=n(1941),s=n(4848),a=n(8453);const o={slug:"flinksql-extensions",title:"Defining Data Interfaces with FlinkSQL",authors:["matthias"],tags:["Join","Flink","DataSQRL"]},r="Defining Data Interfaces with FlinkSQL",l={authorsImageUrls:[void 0]},c=[{value:"Building Data APIs with FlinkSQL",id:"building-data-apis-with-flinksql",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n,{children:[(0,s.jsx)("meta",{property:"og:image",content:"/img/blog/flinksql_extension_api.png"}),(0,s.jsx)("meta",{name:"twitter:image",content:"/img/blog/flinksql_extension_api.png"})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://nightlies.apache.org/flink/flink-docs-release-1.19/docs/dev/table/sql/overview/",children:"FlinkSQL"})," is an amazing innovation in data processing: it packages the power of realtime stream processing within the simplicity of SQL.\nThat means you can start with the SQL you know and introduce stream processing constructs as you need them."]}),"\n",(0,s.jsx)("img",{src:"/img/blog/flinksql_extension_api.png",alt:"FlinkSQL API Extension >",width:"40%"}),"\n",(0,s.jsx)(t.p,{children:"FlinkSQL adds the ability to process data incrementally to the classic set-based semantics of SQL. In addition, FlinkSQL supports source and sink connectors making it easy to ingest data from and move data to other systems. That's a powerful combination which covers a lot of data processing use cases."}),"\n",(0,s.jsx)(t.p,{children:"In fact, it only takes a few extensions to FlinkSQL to build entire data applications. Let's see how that works."}),"\n",(0,s.jsx)(t.h2,{id:"building-data-apis-with-flinksql",children:"Building Data APIs with FlinkSQL"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE UserTokens (\nuserid BIGINT NOT NULL,\ntokens BIGINT NOT NULL,\nrequest_time TIMESTAMP_LTZ(3) NOT NULL METADATA FROM 'timestamp'\n);\n\n/*+query_by_all(userid) */\nTotalUserTokens := SELECT userid, sum(tokens) as total_tokens,\ncount(tokens) as total_requests\nFROM UserTokens GROUP BY userid;\n\nUserTokensByTime(userid BIGINT NOT NULL, fromTime TIMESTAMP NOT NULL, toTime TIMESTAMP NOT NULL):=\n                SELECT * FROM UserTokens WHERE userid = :userid,\n                request_time >= :fromTime AND request_time < :toTime ORDER BY request_time DESC;\n\nUsageAlert := SUBSCRIBE SELECT * FROM UserTokens WHERE tokens > 100000;\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This script defines a sequence of tables. We introduce ",(0,s.jsx)(t.code,{children:":="})," as syntactic sugar for the verbose ",(0,s.jsx)(t.code,{children:"CREATE TEMPORARY VIEW"})," syntax."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"UserTokens"})," table does not have a configured connector, which mean we treat it as an API mutation endpoint connected to Flink via a Kafka topic that captures the events. This makes it easy to build APIs that capture user activity, transactions, or other types of events."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1941:e=>{e.exports=JSON.parse('{"permalink":"/blog/flinksql-extensions","source":"@site/blog/2025-05-09-flink-sql-extensions.md","title":"Defining Data Interfaces with FlinkSQL","description":"FlinkSQL is an amazing innovation in data processing: it packages the power of realtime stream processing within the simplicity of SQL.","date":"2025-05-09T00:00:00.000Z","tags":[{"inline":true,"label":"Join","permalink":"/blog/tags/join"},{"inline":true,"label":"Flink","permalink":"/blog/tags/flink"},{"inline":true,"label":"DataSQRL","permalink":"/blog/tags/data-sqrl"}],"readingTime":3.44,"hasTruncateMarker":true,"authors":[{"name":"Matthias Broecheler","title":"CEO of DataSQRL","url":"https://github.com/mbroecheler","page":{"permalink":"/blog/authors/matthias"},"socials":{"linkedin":"https://www.linkedin.com/in/matthiasbroecheler/","github":"https://github.com/mbroecheler","newsletter":"https://www.matthiasb.com"},"imageURL":"/img/headshots/matthias1.png","key":"matthias"}],"frontMatter":{"slug":"flinksql-extensions","title":"Defining Data Interfaces with FlinkSQL","authors":["matthias"],"tags":["Join","Flink","DataSQRL"]},"unlisted":false,"prevItem":{"title":"Flink SQL Runner: Run Flink SQL Without JARs or Glue Code","permalink":"/blog/flinkrunner-announcement"},"nextItem":{"title":"DataSQRL 0.6 Release: The Streaming Data Framework","permalink":"/blog/datasqrl-0.6-release"}}')},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);