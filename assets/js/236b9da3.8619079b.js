"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9433],{5159:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"howto/project-structure","title":"Project Structure","description":"A DataSQRL project is structured as follows where  is the project name.","source":"@site/docs/howto/project-structure.md","sourceDirName":"howto","slug":"/howto/project-structure","permalink":"/docs/howto/project-structure","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcd8 How To","permalink":"/docs/category/-how-to"},"next":{"title":"Enriching Data Streams","permalink":"/docs/howto/stream-enrichment"}}');var o=n(4848),s=n(8453);const i={},a="Project Structure",c={},d=[];function h(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"project-structure",children:"Project Structure"})}),"\n",(0,o.jsxs)(t.p,{children:["A DataSQRL project is structured as follows where ",(0,o.jsx)(t.code,{children:"{name}"})," is the project name."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"\u251c\u2500\u2500 {name}.sqrl # Contains the main data processing logic\n\u251c\u2500\u2500 {name}-[run/test/prod]-package.json # Configuration files for running locally, testing, and deploying the project\n\u251c\u2500\u2500 {name}-connectors/ # Contains source and sink table definitions, shared connector logic, schemas, and data files\n\u2502   \u2514\u2500\u2500 sources-[run/test/prod].sqrl # Contains the source table definitions, split by variant or environment\n\u251c\u2500\u2500 snapshots/ # Contains the snapshot data for tests\n\u2502   \u2514\u2500\u2500 {name}/ # One directory per project\n\u251c\u2500\u2500 {name}-api/ # Contains the API schema and operation definitions for the project\n\u2502   \u251c\u2500\u2500 schema.v1.graphqls # GraphQL schema definition\n\u2502   \u251c\u2500\u2500 tests/ # Contains GraphQL test queries as .graphql files\n\u2502   \u2514\u2500\u2500 operations-v1/ # Contains any operation definitions as .graphql files\n\u2514\u2500\u2500 README.md # Explain the project(s) and structure\n"})}),"\n",(0,o.jsxs)(t.p,{children:["A project has one or more ",(0,o.jsx)(t.code,{children:"package.json"})," configuration files to configure the compiled pipeline for different environments: running locally, testing, and one or more deployment environments. The targeted environment is used in the name, e.g. ",(0,o.jsx)(t.code,{children:"run"}),", ",(0,o.jsx)(t.code,{children:"test"}),", ",(0,o.jsx)(t.code,{children:"qa"}),", ",(0,o.jsx)(t.code,{children:"prod"}),", etc."]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"package.json"})," file is the authoritative source that defines the main SQRL script and (optional) GraphQL schema and operations. It also configures snapshot and test directories. Always consult the ",(0,o.jsx)(t.code,{children:"package.json"})," files for the relative file paths to the project source files."]}),"\n",(0,o.jsx)(t.p,{children:"For advanced project or when multiple projects share one directory, the structure may include:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"\u251c\u2500\u2500 [shared/authentication]-package.json # Config file that is shared across projects\n\u251c\u2500\u2500 tests/ # Folder that contains test code to separate it from the main logic\n\u2502   \u2514\u2500\u2500 {test-name}.sqrl # This file is included inline in the main script\n\u251c\u2500\u2500 functions/ # User defined functions\n\u2514\u2500\u2500 shared.sqrl # SQRL script that's shared across projects\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(6540);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);