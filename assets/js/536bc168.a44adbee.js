"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8629],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(6540);const a={},o=r.createContext(a);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:n},e.children)}},9937:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"configuration-default","title":"Default DataSQRL package.json Configuration","description":"The following is the default configuration file that user provided configuration files are merged on top of. It provides the default values for all configuration options.","source":"@site/docs/configuration-default.md","sourceDirName":".","slug":"/configuration-default","permalink":"/docs/configuration-default","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Snowflake Engine","permalink":"/docs/configuration-engine/snowflake"},"next":{"title":"Functions","permalink":"/docs/functions"}}');var a=t(4848),o=t(8453);const i={},s="Default DataSQRL package.json Configuration",l={},c=[{value:"Connector Template Variables",id:"connector-template-variables",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"SQRL Variables",id:"sqrl-variables",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsxs)(n.h1,{id:"default-datasqrl-packagejson-configuration",children:["Default DataSQRL ",(0,a.jsx)(n.code,{children:"package.json"})," Configuration"]})}),"\n",(0,a.jsxs)(n.p,{children:["The following is the ",(0,a.jsx)(n.a,{href:"https://raw.githubusercontent.com/DataSQRL/sqrl/refs/heads/main/sqrl-planner/src/main/resources/default-package.json",children:"default configuration file"})," that user provided configuration files are merged on top of. It provides the default values for all configuration options."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "version": "1",\n  "enabled-engines": ["vertx", "postgres", "kafka", "flink"],\n  "compiler": {\n    "logger": "print",\n    "extended-scalar-types": true,\n    "compile-flink-plan": true,\n    "cost-model": "DEFAULT",\n    "explain": {\n      "text": true,\n      "sql": false,\n      "logical": true,\n      "physical": false,\n      "sorted": true,\n      "visual": true\n    },\n    "api": {\n      "protocols": ["GRAPHQL", "REST", "MCP"],\n      "endpoints": "FULL",\n      "add-prefix": true,\n      "max-result-depth": 3,\n      "default-limit": 10\n    }\n  },\n  "engines": {\n    "flink": {\n      "config": {\n        "execution.runtime-mode": "STREAMING",\n        "execution.target": "local",\n        "execution.attached": true,\n        "rest.address": "localhost",\n        "rest.port": 8081,\n        "state.backend.type": "rocksdb",\n        "table.exec.resource.default-parallelism": 1,\n        "taskmanager.memory.network.max": "800m"\n      }\n    },\n    "duckdb": {\n      "url": "jdbc:duckdb:"\n    }\n  },\n  "connectors": {\n    "kafka-mutation": {\n      "connector": "kafka",\n      "format": "flexible-json",\n      "flexible-json.timestamp-format.standard": "ISO-8601",\n      "properties.bootstrap.servers": "${KAFKA_BOOTSTRAP_SERVERS}",\n      "properties.group.id": "${KAFKA_GROUP_ID}",\n      "properties.auto.offset.reset": "earliest",\n      "topic": "${sqrl:table-name}"\n    },\n    "kafka": {\n      "connector": "kafka",\n      "format": "flexible-json",\n      "flexible-json.timestamp-format.standard": "ISO-8601",\n      "properties.bootstrap.servers": "${KAFKA_BOOTSTRAP_SERVERS}",\n      "properties.group.id": "${KAFKA_GROUP_ID}",\n      "topic": "${sqrl:table-name}"\n    },\n    "iceberg": {\n      "connector": "iceberg",\n      "catalog-table": "${sqrl:table-name}",\n      "warehouse": "iceberg-data",\n      "catalog-type": "hadoop",\n      "catalog-name": "mycatalog"\n    },\n    "postgres": {\n      "connector": "jdbc-sqrl",\n      "username": "${POSTGRES_USERNAME}",\n      "password": "${POSTGRES_PASSWORD}",\n      "url": "jdbc:postgresql://${POSTGRES_AUTHORITY}",\n      "driver": "org.postgresql.Driver",\n      "table-name": "${sqrl:table-name}"\n    },\n    "print": {\n      "connector": "print",\n      "print-identifier": "${sqrl:table-name}"\n    }\n  },\n  "test-runner": {\n    "snapshot-folder": "./snapshots",\n    "test-folder": "./tests",\n    "delay-sec": 30,\n    "mutation-delay-sec": 0,\n    "required-checkpoints": 0\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"connector-template-variables",children:"Connector Template Variables"}),"\n",(0,a.jsxs)(n.p,{children:["The connector templates configured under ",(0,a.jsx)(n.code,{children:"connectors"})," can use environment variables and SQRL-specific variables for dynamic configuration."]}),"\n",(0,a.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,a.jsxs)(n.p,{children:["You can reference environment variables using the ",(0,a.jsx)(n.code,{children:"${VAR_NAME}"})," placeholder syntax, for example ",(0,a.jsx)(n.code,{children:"${POSTGRES_PASSWORD}"}),".\nAt runtime, these placeholders are automatically resolved using the environment variables defined in the system or deployment environment."]}),"\n",(0,a.jsx)(n.p,{children:"This can help decouple security credentials or add flexibility across different deployment environments."}),"\n",(0,a.jsx)(n.h3,{id:"sqrl-variables",children:"SQRL Variables"}),"\n",(0,a.jsxs)(n.p,{children:["SQRL-specific variables start with a ",(0,a.jsx)(n.code,{children:"sqrl:"})," prefix and are used for templating inside connector configuration options.\nThe proper syntax look like ",(0,a.jsx)(n.code,{children:"${sqrl:<identifier>}"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Supported identifiers include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"table-name"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"original-table-name"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"filename"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"format"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"kafka-key"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These are typically used within connector templates to inject table-specific or context-aware configuration values."}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsxs)(n.p,{children:["Unresolved ",(0,a.jsx)(n.code,{children:"${sqrl:*}"})," placeholders raise a validation error."]})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);