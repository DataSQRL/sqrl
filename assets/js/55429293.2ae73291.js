"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9390],{7928:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"stdlib-docs/CLAUDE","title":"CLAUDE.md","description":"This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.","source":"@site/docs/stdlib-docs/CLAUDE.md","sourceDirName":"stdlib-docs","slug":"/stdlib-docs/CLAUDE","permalink":"/docs/stdlib-docs/CLAUDE","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var l=i(4848),r=i(8453);const t={},c="CLAUDE.md",o={},d=[{value:"Project Overview",id:"project-overview",level:2},{value:"Module Structure",id:"module-structure",level:2},{value:"Common Commands",id:"common-commands",level:2},{value:"Building and Testing",id:"building-and-testing",level:3},{value:"Running the Application",id:"running-the-application",level:3},{value:"Technology Stack",id:"technology-stack",level:2},{value:"Development Notes",id:"development-notes",level:2},{value:"Code Style",id:"code-style",level:3},{value:"Testing",id:"testing",level:3},{value:"Flink Version Support",id:"flink-version-support",level:3},{value:"Architecture",id:"architecture",level:3},{value:"Key Classes",id:"key-classes",level:3},{value:"Adding New Modules",id:"adding-new-modules",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"claudemd",children:"CLAUDE.md"})}),"\n",(0,l.jsx)(n.p,{children:"This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository."}),"\n",(0,l.jsx)(n.h2,{id:"project-overview",children:"Project Overview"}),"\n",(0,l.jsx)(n.p,{children:"This is a multi-module Maven project for the Flink SQL Runner - a tool and library ecosystem for running Apache Flink SQL applications. The project is structured as a parent POM with multiple modules providing different functionality."}),"\n",(0,l.jsx)(n.h2,{id:"module-structure",children:"Module Structure"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"flink-sql-runner/"})," - Main CLI application and Docker image"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"connectors/"})," - Custom Flink connectors (kafka-safe, postgresql)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"formats/"})," - Custom data formats (flexible-csv, flexible-json)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"types/"})," - Custom data types (json-type, vector-type)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"stdlib/"})," - Standard library modules with system functions (json, math, text, vector, openai)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"testing/"})," - Testing utilities and sample UDF projects"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"common-commands",children:"Common Commands"}),"\n",(0,l.jsx)(n.h3,{id:"building-and-testing",children:"Building and Testing"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Full build with all checks\nmvn clean install -Pci,flink-1.19\n\n# Fast build (skips tests, formatting, license checks)\nmvn clean install -Pfast\n\n# Run tests only\nmvn test\n\n# Run integration tests\nmvn verify\n\n# Code formatting check\nmvn spotless:check\n\n# Apply code formatting\nmvn spotless:apply\n\n# License header check\nmvn license:check\n\n# Apply license headers\nmvn license:format\n"})}),"\n",(0,l.jsx)(n.h3,{id:"running-the-application",children:"Running the Application"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Run SQL file\njava -jar flink-sql-runner/target/flink-sql-runner.jar --sqlfile script.sql\n\n# Run compiled plan\njava -jar flink-sql-runner/target/flink-sql-runner.jar --planfile plan.json\n\n# With custom configuration\njava -jar flink-sql-runner/target/flink-sql-runner.jar --sqlfile script.sql --config-dir config/\n\n# With UDF path\njava -jar flink-sql-runner/target/flink-sql-runner.jar --sqlfile script.sql --udfpath /path/to/udfs\n"})}),"\n",(0,l.jsx)(n.h2,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Java 11"})," - Base language version"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Apache Flink 1.19.2"})," - Stream processing framework (configurable via profiles)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Maven"})," - Build system"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Lombok"})," - Code generation"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"PicoCLI"})," - Command line interface"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"JUnit 5"})," - Testing framework"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Testcontainers"})," - Integration testing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Docker"})," - Containerization"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"development-notes",children:"Development Notes"}),"\n",(0,l.jsx)(n.h3,{id:"code-style",children:"Code Style"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Uses Google Java Format for code formatting"}),"\n",(0,l.jsx)(n.li,{children:"Enforced via Spotless Maven plugin"}),"\n",(0,l.jsx)(n.li,{children:"License headers are automatically managed"}),"\n",(0,l.jsx)(n.li,{children:"Separate formatting rules for Flink-specific code (AOSP style)"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Unit tests: ",(0,l.jsx)(n.code,{children:"mvn test"})]}),"\n",(0,l.jsxs)(n.li,{children:["Integration tests: ",(0,l.jsx)(n.code,{children:"mvn verify"})," (includes failsafe plugin)"]}),"\n",(0,l.jsx)(n.li,{children:"Test coverage enforced at 70% minimum via JaCoCo"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"flink-version-support",children:"Flink Version Support"}),"\n",(0,l.jsx)(n.p,{children:"Multiple Flink versions supported via Maven profiles:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"flink-1.19"})," (default)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"flink-1.20"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"flink-2.0"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,l.jsxs)(n.p,{children:["The main application (",(0,l.jsx)(n.code,{children:"CliRunner"}),") processes command-line arguments and delegates to ",(0,l.jsx)(n.code,{children:"BaseRunner"})," which:"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Initializes Flink configuration"}),"\n",(0,l.jsx)(n.li,{children:"Resolves environment variables in SQL/JSON files"}),"\n",(0,l.jsxs)(n.li,{children:["Creates ",(0,l.jsx)(n.code,{children:"SqlExecutor"})," to run SQL scripts or compiled plans"]}),"\n",(0,l.jsx)(n.li,{children:"Handles UDF loading and system function registration"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"key-classes",children:"Key Classes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"CliRunner"})," - Main entry point and CLI argument processing"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"BaseRunner"})," - Core execution logic and configuration"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"SqlExecutor"})," - Flink SQL script and plan execution"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"EnvVarResolver"})," - Environment variable substitution in configs"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"adding-new-modules",children:"Adding New Modules"}),"\n",(0,l.jsx)(n.p,{children:"New modules should:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Follow the existing directory structure"}),"\n",(0,l.jsxs)(n.li,{children:["Include proper Maven coordinates under ",(0,l.jsx)(n.code,{children:"com.datasqrl.flinkrunner"})]}),"\n",(0,l.jsx)(n.li,{children:"Add to parent POM modules section"}),"\n",(0,l.jsx)(n.li,{children:"Include common dependencies from parent (Lombok, JUnit, etc.)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);