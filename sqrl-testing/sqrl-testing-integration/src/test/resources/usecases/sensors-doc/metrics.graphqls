"A slightly refined version of RFC-3339 compliant DateTime Scalar"
scalar DateTime

"A 64-bit signed integer"
scalar Long

type Mutation {
  SensorReading(event: SensorReadingInput!): SensorReadingResultOutput!
}

type Query {
  SensorMaxTempLastMin(limit: Int = 10, offset: Int = 0): [SensorMaxTempLastMin!]
  "Analyzes the sensor readings for the given sensor with average and max temperatures."
  SensorAnalysisById(sensorid: Int!, limit: Int = 10, offset: Int = 0): [SensorAnalysis!]
  "Returns the most recent sensor readings for the given sensor"
  SensorReadingById(sensorid: Int!, limit: Int = 10, offset: Int = 0): [SensorReading!]
}

type SensorAnalysis {
  sensorid: Int!
  avg_temperatures: Float!
  max_temperature: Float!
}

type SensorMaxTempLastMin {
  sensorid: Int!
  endOfMin: DateTime!
  avg_temperature: Float!
}

type SensorReading {
  uuid: String!
  sensorid: Int!
  temperature: Float!
  event_time: DateTime
}

input SensorReadingInput {
  sensorid: Int!
  temperature: Float!
}

type SensorReadingResultOutput {
  uuid: String!
  sensorid: Int!
  temperature: Float!
  event_time: DateTime
}

type Subscription {
  HighTempAlert: SensorReading
}

enum _McpMethodType {
  NONE
  TOOL
  RESOURCE
}

enum _RestMethodType {
  NONE
  GET
  POST
}

directive @api(mcp: _McpMethodType, rest: _RestMethodType, uri: String) on QUERY | MUTATION | FIELD_DEFINITION
