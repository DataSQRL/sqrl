/*+no_query */
CREATE TABLE SensorReading (
    uuid STRING NOT NULL METADATA FROM 'uuid',
    sensorid INT NOT NULL,
    temperature FLOAT NOT NULL,
    event_time TIMESTAMP_LTZ(3) METADATA FROM 'timestamp'
);
/**
  Returns the most recent sensor readings for the given sensor
 */
SensorReadingById(sensorid INT NOT NULL):= SELECT * FROM SensorReading
                                              WHERE sensorid = :sensorid ORDER BY event_time DESC;

HighTempAlert := SUBSCRIBE SELECT * FROM SensorReading WHERE temperature > 50;

_SensorMaxTempLastMinWindow := SELECT sensorid, window_time as endOfMin,
                                      AVG(temperature) AS avg_temperature
                     FROM TABLE(HOP(TABLE SensorReading, DESCRIPTOR(event_time), INTERVAL '10' SECONDS, INTERVAL '1' MINUTES))
                     GROUP BY sensorid, window_start, window_end, window_time;

SensorMaxTempLastMin := DISTINCT _SensorMaxTempLastMinWindow ON sensorid ORDER BY endOfMin DESC;

/*+no_query */
SensorAnalysis := SELECT sensorid, AVG(temperature) AS avg_temperatures,
                           MAX(temperature) AS max_temperature
                    FROM SensorReading GROUP BY sensorid ORDER BY sensorid DESC;
/**
  Analyzes the sensor readings for the given sensor with average and max temperatures.
 */
SensorAnalysisById(sensorid INT NOT NULL) := SELECT * FROM SensorAnalysis WHERE sensorid = :sensorid;