type Products {
  id: Int!
  name: String!
  sizing: String!
  weight_in_gram: Int!
  type: String!
  category: String!
  volume_10day(country: String, limit: Int = 20, offset: Int = 0): [volume_10day!]
}

type Query {
  Products(id: Int, name: String, category: String, limit: Int!, offset: Int = 0): [Products!]
  Users(id: Int!): Users
}

type Users {
  id: Int!
  first_name: String!
  last_name: String!
  email: String!
  country: String
  purchases(limit: Int = 20, offset: Int = 0): [orders!]
  spending: [spending!]
  past_purchases(productid: Int): [past_purchases!]
  product_visits: [product_visits!]
}

type items {
  quantity: Int!
  unit_price: Float!
  discount: Float!
  total: Float!
  product: Products!
}

type orders {
  id: Int!
  customerid: Int!
  time: String!
  items: [items!]
  totals: totals
}

type past_purchases {
  productid: Int!
  num_orders: Int!
  total_quantity: Int!
}

type product_visits {
  productid: Int!
  visits: Int!
}

type spending {
  week: String!
  spend: Float!
  saved: Float!
}

type totals {
  price: Float!
  saving: Float!
}

type volume_10day {
  country: String
  quantity: Int!
  spend: Float!
  weight: Int!
}

type Mutation {
  ProductVisit(event: VisitEvent!): CreatedProductVisit
}

input VisitEvent {
  userid: Int!
  productid: Int!
}

type CreatedProductVisit {
  _source_time: String!
  productid: Int!
  userid: Int!
}