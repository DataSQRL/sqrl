IMPORT loan-local.Customers;
IMPORT loan-local.Applications;
IMPORT loan-local.Loan_types AS LoanTypes;
IMPORT loan.ApplicationUpdates;

Customers := DISTINCT Customers ON id ORDER BY updated_on DESC;
Applications := DISTINCT Applications ON id ORDER BY updated_at DESC;
LoanTypes := DISTINCT LoanTypes ON id ORDER BY updated_at DESC;

Customers.applications := JOIN Applications a ON @.id = a.customer_id ORDER BY a.application_date;

ApplicationUpdates.application := JOIN Applications a ON @.loan_application_id = a.id;
Applications.updates := JOIN ApplicationUpdates u ON @.id = u.loan_application_id ORDER BY u.event_time;

Applications.loanType := JOIN LoanTypes t ON @.loan_type_id = t.id;

Customers.overview := SELECT a.loan_type_id, SUM(a.amount) as total_amount, COUNT(1) as total_loans
                      FROM @ JOIN @.applications a
                      GROUP BY a.loan_type_id;

ApplicationStatus := SELECT u.status, u.message, u.event_time, a.id, a.customer_id, a.loan_type_id,
                            a.amount, a.duration, t.max_amount, t.min_amount
                     FROM ApplicationUpdates u JOIN u.application a
                            JOIN LoanTypes t ON t.id = a.loan_type_id;

--EXPORT ApplicationStatus TO print.status;

--Customers.recentFunding := SELECT SUM(a.amount) as total_amount, COUNT(1) as total_loans
--                           FROM @ JOIN ApplicationStatus a ON @.id = a.customer_id
--                           WHERE a.status = 'approval' AND a.event_time > now() - INTERVAL 21 DAY;

ApplicationAlert := SELECT id, customer_id, loan_type_id, max_amount, min_amount, amount
                    FROM ApplicationStatus a
                    WHERE status = 'underwriting' AND (amount > max_amount OR amount < min_amount);
