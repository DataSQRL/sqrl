type Customer {
    customerid: Float!
    email: String!
    name: String!
    lastUpdated: Float!
    timestamp: DateTime
    related(limit: Int = 10, offset: Int = 0): [Customer!]
    relatedByLength(length: Int!, limit: Int = 10, offset: Int = 0): [Customer!]
}

"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

type Mutation {
    Orders(event: OrdersInput!): OrdersResultOutput!
}

input OrdersInput {
    orderid: Int!
    amount: Float
}

type OrdersResultOutput {
    orderid: Int!
    amount: Float
}

type Subscription {
}

type Query {
    TableFunctionCallsTblFct(arg1: Int!, arg2: Int!, limit: Int = 10, offset: Int = 0): [Customer!]
}
