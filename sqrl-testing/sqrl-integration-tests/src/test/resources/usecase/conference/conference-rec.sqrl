IMPORT mysourcepackage.Events;

IMPORT recAPI.Likes;
IMPORT recAPI.AddInterest;

IMPORT string.*;
IMPORT text.*;
IMPORT vector.*;
IMPORT time.parseTimestamp;

Events.id := coalesce(CAST(regexExtract(url, '(\d*)$') AS BIGINT),0);

Events.full_text := concat(title,'\n',abstract);
Events.embedding := asciiTextTestEmbed(full_text);
Events.startTime := concat(trim(regexExtract(date, '^[^-]*')),' ',trim(regexExtract(time, '\d\d?:\d\d\s(AM|PM)')));
-- Result: September 26, 2023 10:15 AM PDT
Events.startTimestamp := parseTimestamp(concat(startTime,' PDT'), 'MMMM d, yyyy h:mm a z')

Events := DISTINCT Events ON id ORDER BY last_updated DESC;

AddInterest.embedding := asciiTextTestEmbed(text);

LikeVector := SELECT l.userid, e.embedding, l._source_time
              FROM Likes l TEMPORAL JOIN Events e ON l.eventId = e.id WHERE l.liked;

UserInterestVectors := SELECT userid, embedding, _source_time FROM LikeVector
                 UNION ALL
                 SELECT userid, embedding, _source_time FROM AddInterest

UserInterests := SELECT userid, center(embedding) as interestVector FROM UserInterestVectors GROUP BY userid;

UserLikes := DISTINCT Likes ON userid, eventId ORDER BY _source_time DESC;

EventLikeCount := SELECT eventid, count(*) as num, avg(eventid) as test
                  FROM UserLikes l WHERE l.liked GROUP BY eventid;
Events.likeCount := JOIN EventLikeCount l ON @.id = l.eventid;


EventsLiked(@userid: String) := SELECT e.* FROM UserLikes l JOIN Events e ON l.eventId = e.id
                                WHERE l.userid = @userid -- AND e.startTimestamp >= now() - INTERVAL 30 MINUTE
                                ORDER BY e.startTimestamp ASC;


RecommendedEvents(@userid: String) :=
SELECT e.*, cosineSimilarity(i.interestVector, e.embedding) as score
FROM UserInterests i JOIN Events e
WHERE i.userid = @userid
ORDER BY score DESC;

PersonalizedEventSearch(@query: String, @userid: String) :=
    SELECT e.*, coalesce(cosineSimilarity(i.interestVector, e.embedding),0.0) as score
        FROM Events e
        LEFT JOIN UserInterests i ON i.userid = @userid
        WHERE textsearch(@query, title, abstract) > 0 -- AND e.startTimestamp >= now() - INTERVAL 30 MINUTE
    ORDER BY score DESC;