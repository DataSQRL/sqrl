>>>orders$2-lp-stream
LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]], [TimestampHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4], TimestampHint options:[4]]

>>>spending$1-lp-stream
LogicalProject(__pk1$id=[$0], week=[$1], spend=[$2], saved=[$3]) hints[TimestampHint options:[1]]
  LogicalAggregate(group=[{0, 1}], spend=[SUM($2)], saved=[SUM($3)]) hints[TumbleAggregationHint options:[1, FUNCTION, 4, 604800000, 0]]
    LogicalProject(__pk2$id=[$6], week=[endOfWeek($4)], price=[$10], saving=[$11], _uuid=[$0])
      LogicalJoin(condition=[AND(=($0, $9), =($12, $4))], joinType=[inner]) hints[IntervalJoin]
        LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 1, 0]]
          LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
          LogicalFilter(condition=[=($2, 1)]) hints[DedupHint]
            LogicalProject(id=[$0], _time=[$1], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS LAST)])
              LogicalProject(id=[$3], _time=[$4])
                LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
        LogicalProject(__pk1$_uuid=[$0], price=[$2], saving=[$3], _time=[$1])
          LogicalAggregate(group=[{0, 4}], price=[SUM($1)], agg#1=[SUM($2)]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
            LogicalProject(__pk1$_uuid=[$0], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))], $f2=[COALESCE($10, 0.0:DECIMAL(2, 1))], _idx=[$6], time=[$4])
              LogicalCorrelate(correlation=[$cor8], joinType=[inner], requiredColumns=[{5}])
                LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
                Uncollect
                  LogicalProject($f0=[$cor8.items])
                    LogicalValues(tuples=[[{ 0 }]])

>>>totals$1-lp-stream
LogicalProject(__pk1$_uuid=[$0], price=[$2], saving=[$3], _time=[$1]) hints[TimestampHint options:[3]]
  LogicalAggregate(group=[{0, 4}], price=[SUM($1)], agg#1=[SUM($2)]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
    LogicalProject(__pk1$_uuid=[$0], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))], $f2=[COALESCE($10, 0.0:DECIMAL(2, 1))], _idx=[$6], time=[$4])
      LogicalCorrelate(correlation=[$cor8], joinType=[inner], requiredColumns=[{5}])
        LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
        Uncollect
          LogicalProject($f0=[$cor8.items])
            LogicalValues(tuples=[[{ 0 }]])

>>>users$1-lp-stream
LogicalProject(id=[$3], _time=[$4]) hints[TimestampHint options:[1]]
  LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

>>>orders-lp-database
LogicalSort(sort0=[$4], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4])
    LogicalTableScan(table=[[orders$2]])

>>>spending-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])
  LogicalProject(__pk1$id=[$0], week=[$1], spend=[$2], saved=[$3])
    LogicalTableScan(table=[[spending$1]])

>>>totals-lp-database
LogicalSort(sort0=[$3], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(__pk1$_uuid=[$0], price=[$1], saving=[$2], _time=[$3])
    LogicalTableScan(table=[[totals$1]])

>>>users-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(id=[$0], _time=[$1])
    LogicalTableScan(table=[[users$1]])

