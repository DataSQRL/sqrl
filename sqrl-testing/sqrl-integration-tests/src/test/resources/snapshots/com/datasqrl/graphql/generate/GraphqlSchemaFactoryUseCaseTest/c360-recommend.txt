type Category {
  name: String!
  products(limit: Int = 10, offset: Int = 0): [Product!]
}

type Customer {
  customerid: Float!
  email: String!
  name: String!
  lastUpdated: Float!
  updateTime: DateTime!
  orders(limit: Int = 10, offset: Int = 0): [Orders!]
}

"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

type Orders {
  id: Float!
  customerid: Float!
  time: DateTime!
  entries(limit: Int = 10, offset: Int = 0): [entries!]
  total(limit: Int = 10, offset: Int = 0): [total!]
}

type Product {
  productid: Float!
  name: String!
  description: String!
  category: String!
  updateTime: DateTime!
}

type Query {
  Category(name: String, limit: Int = 10, offset: Int = 0): [Category!]
  Customer(customerid: Float, limit: Int = 10, offset: Int = 0): [Customer!]
  Orders(limit: Int = 10, offset: Int = 0): [Orders!]
  Product(productid: Float, limit: Int = 10, offset: Int = 0): [Product!]
}

type entries {
  productid: Float!
  quantity: Float!
  unit_price: Float!
  discount: Float
  discount0: Float!
  total: Float!
  parent: Orders!
  product(limit: Int = 10, offset: Int = 0): [Product!]
}

type total {
  price: Float!
  discount: Float!
  num: Float!
  parent: Orders!
}

