>>>customers$1-lp-stream
LogicalProject(id=[$3], _timestamp=[$6]) hints[TimestampHint options:[1]]
  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
    LogicalTableScan(table=[[orders$1]])

>>>items$1-lp-stream
LogicalProject(_uuid=[$0], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], discount0=[COALESCE($11, 0.0:DOUBLE)], total=[-(*($9, $10), COALESCE($11, 0.0:DOUBLE))], __timestamp=[$6]) hints[TimestampHint options:[8]]
  LogicalCorrelate(correlation=[$cor25], joinType=[inner], requiredColumns=[{5}])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[orders$1]])
    Uncollect
      LogicalProject($f0=[$cor25.items])
        LogicalValues(tuples=[[{ 0 }]])

>>>orders$2-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6], TimestampHint options:[6]]
  LogicalTableScan(table=[[orders$1]])

>>>past_purchases$1-lp-stream
LogicalProject(__pk1$id=[$8], productid=[$14], num_orders=[COUNT() IGNORE NULLS OVER (PARTITION BY $8, $14 ORDER BY $6 ROWS UNBOUNDED PRECEDING)], total_quantity=[SUM($9) IGNORE NULLS OVER (PARTITION BY $8, $14 ORDER BY $6 ROWS UNBOUNDED PRECEDING)], _timestamp=[$6]) hints[TimestampHint options:[4]]
  LogicalJoin(condition=[=($14, $3)], joinType=[inner]) hints[TemporalJoinHint options:[6, 1, 0]]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[$6], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], discount0=[COALESCE($11, 0.0:DOUBLE)], total=[-(*($9, $10), COALESCE($11, 0.0:DOUBLE))])
      LogicalCorrelate(correlation=[$cor20], joinType=[inner], requiredColumns=[{5}])
        LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
          LogicalTableScan(table=[[orders$1]])
        Uncollect
          LogicalProject($f0=[$cor20.items])
            LogicalValues(tuples=[[{ 0 }]])
    LogicalFilter(condition=[=($2, 1)]) hints[DedupHint]
      LogicalProject(id=[$0], _timestamp=[$1], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS LAST)])
        LogicalProject(id=[$3], _timestamp=[$6])
          LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
            LogicalTableScan(table=[[orders$1]])

>>>products$3-lp-stream
LogicalProject(id=[$2], _uuid=[$0], _ingest_time=[$1], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9]) hints[TimestampHint options:[9]]
  LogicalTableScan(table=[[products$1]], hints=[[[WatermarkHint inheritPath:[] options:[9]]]]) hints[WatermarkHint options:[9]]

>>>spending_by_month$1-lp-stream
LogicalProject(__pk1$id=[$0], month=[$1], total_spend=[$2], total_savings=[$3]) hints[TimestampHint options:[1]]
  LogicalAggregate(group=[{0, 1}], total_spend=[SUM($2)], total_savings=[SUM($3)]) hints[TumbleAggregationHint options:[1, FUNCTION, 6, 2629746000, 0]]
    LogicalProject(__pk2$id=[$7], month=[endOfMonth($6)], price=[$11], savings=[$12], _uuid=[$0], time=[$4])
      LogicalJoin(condition=[AND(=($0, $10), =($13, $6))], joinType=[inner]) hints[IntervalJoin]
        LogicalJoin(condition=[=($7, $3)], joinType=[inner]) hints[TemporalJoinHint options:[6, 1, 0]]
          LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
            LogicalTableScan(table=[[orders$1]])
          LogicalFilter(condition=[=($2, 1)]) hints[DedupHint]
            LogicalProject(id=[$0], _timestamp=[$1], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS LAST)])
              LogicalProject(id=[$3], _timestamp=[$6])
                LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
                  LogicalTableScan(table=[[orders$1]])
        LogicalProject(__pk1$_uuid=[$0], price=[$2], savings=[$3], _timestamp=[$1])
          LogicalAggregate(group=[{0, 6}], price=[SUM($13)], savings=[SUM($12)]) hints[TumbleAggregationHint options:[6, INSTANT, -1, 1, 0]]
            LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[$6], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], discount0=[COALESCE($11, 0.0:DOUBLE)], total=[-(*($9, $10), COALESCE($11, 0.0:DOUBLE))])
              LogicalCorrelate(correlation=[$cor22], joinType=[inner], requiredColumns=[{5}])
                LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
                  LogicalTableScan(table=[[orders$1]])
                Uncollect
                  LogicalProject($f0=[$cor22.items])
                    LogicalValues(tuples=[[{ 0 }]])

>>>totals$1-lp-stream
LogicalProject(__pk1$_uuid=[$0], price=[$2], savings=[$3], _timestamp=[$1]) hints[TimestampHint options:[3]]
  LogicalAggregate(group=[{0, 6}], price=[SUM($13)], savings=[SUM($12)]) hints[TumbleAggregationHint options:[6, INSTANT, -1, 1, 0]]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[$6], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], discount0=[COALESCE($11, 0.0:DOUBLE)], total=[-(*($9, $10), COALESCE($11, 0.0:DOUBLE))])
      LogicalCorrelate(correlation=[$cor22], joinType=[inner], requiredColumns=[{5}])
        LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
          LogicalTableScan(table=[[orders$1]])
        Uncollect
          LogicalProject($f0=[$cor22.items])
            LogicalValues(tuples=[[{ 0 }]])

>>>volume_by_day$1-lp-stream
LogicalProject(__pk1$id=[$0], day=[$1], quantity=[$2], total=[$3], total_weight=[$4]) hints[TimestampHint options:[1]]
  LogicalAggregate(group=[{0, 1}], quantity=[SUM($2)], total=[SUM($3)], total_weight=[SUM($4)]) hints[TumbleAggregationHint options:[1, FUNCTION, 6, 86400000, 0]]
    LogicalProject(__pk4$id=[$14], day=[endOfDay($6)], quantity=[$9], total=[$13], $f4=[*($9, $19)], _uuid=[$0], _idx=[$7])
      LogicalJoin(condition=[=($8, $14)], joinType=[inner]) hints[TemporalJoinHint options:[6, 9, 0]]
        LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[$6], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], discount0=[COALESCE($11, 0.0:DOUBLE)], total=[-(*($9, $10), COALESCE($11, 0.0:DOUBLE))])
          LogicalCorrelate(correlation=[$cor24], joinType=[inner], requiredColumns=[{5}])
            LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epochToTimestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
              LogicalTableScan(table=[[orders$1]])
            Uncollect
              LogicalProject($f0=[$cor24.items])
                LogicalValues(tuples=[[{ 0 }]])
        LogicalFilter(condition=[=($10, 1)]) hints[DedupHint]
          LogicalProject(id=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $9 DESC NULLS LAST)])
            LogicalProject(id=[$2], _uuid=[$0], _ingest_time=[$1], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9])
              LogicalTableScan(table=[[products$1]], hints=[[[WatermarkHint inheritPath:[] options:[9]]]]) hints[WatermarkHint options:[9]]

>>>customers-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(id=[$0], _timestamp=[$1])
    LogicalTableScan(table=[[customers$1]])

>>>items-lp-database
LogicalSort(sort0=[$8], sort1=[$0], sort2=[$1], dir0=[DESC-nulls-last], dir1=[ASC], dir2=[ASC])
  LogicalProject(_uuid=[$0], _idx=[$1], productid=[$2], quantity=[$3], unit_price=[$4], discount=[$5], discount0=[$6], total=[$7], __timestamp=[$8])
    LogicalTableScan(table=[[items$1]])

>>>orders-lp-database
LogicalSort(sort0=[$5], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], timestamp=[$6])
    LogicalTableScan(table=[[orders$2]])

>>>past_purchases-lp-database
LogicalSort(sort0=[$0], sort1=[$2], sort2=[$3], sort3=[$1], dir0=[ASC], dir1=[DESC], dir2=[DESC], dir3=[ASC])
  LogicalProject(__pk1$id=[$0], productid=[$1], num_orders=[$2], total_quantity=[$3], _timestamp=[$4])
    LogicalTableScan(table=[[past_purchases$1]])

>>>products-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(id=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9])
    LogicalTableScan(table=[[products$3]])

>>>spending_by_month-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])
  LogicalProject(__pk1$id=[$0], month=[$1], total_spend=[$2], total_savings=[$3])
    LogicalTableScan(table=[[spending_by_month$1]])

>>>totals-lp-database
LogicalSort(sort0=[$3], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(__pk1$_uuid=[$0], price=[$1], savings=[$2], _timestamp=[$3])
    LogicalTableScan(table=[[totals$1]])

>>>volume_by_day-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])
  LogicalProject(__pk1$id=[$0], day=[$1], quantity=[$2], total=[$3], total_weight=[$4])
    LogicalTableScan(table=[[volume_by_day$1]])

