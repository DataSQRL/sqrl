>>>favorite_categories$24-lp-stream
LogicalProject(__customerid$pk$1=[$0], category_name=[$1], total=[$2], month=[$3])
  LogicalProject(__customerid$pk$1=[$2], category_name=[$1], total=[$3], month=[$0])
    LogicalAggregate(group=[{1, 2, 5}], total=[SUM($3)]) hints[SlidingAggregationHint options:[1, 31536000000, 630720000]]
      LogicalJoin(condition=[=($5, $0)], joinType=[inner]) hints[TemporalJoinHint options:[1, 6, 0]]
        LogicalProject(__customerid$pk$1=[$0], month=[$1], category=[$2], total=[$3], savings=[$4])
          LogicalAggregate(group=[{0, 1, 2}], total=[SUM($3)], savings=[SUM($4)]) hints[TumbleAggregationHint options:[1, FUNCTION, 4, 2629746000, 0]]
            LogicalProject(__customerid$pk$1=[$6], month=[endOfMonth($4)], category=[$26], total=[$20], discount=[$19], _uuid=[$0], _idx=[$14])
              LogicalJoin(condition=[=($15, $21)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
                LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], customerid0=[$6], _uuid0=[$7], _ingest_time0=[$8], email=[$9], name=[$10], lastupdated=[$11], updatetime=[$12], $f7=[$13], _idx=[$14], productid=[$15], quantity=[$16], unit_price=[$17], discount=[$18], discount$0=[COALESCE($18, 0.0:DOUBLE)], total=[-(*($16, $17), COALESCE($18, 0.0:DOUBLE))])
                  LogicalCorrelate(correlation=[$cor7], joinType=[inner], requiredColumns=[{5}])
                    LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
                      LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
                      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
                        LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
                          LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
                            LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                              LogicalTableScan(table=[[customer$i$1]])
                    Uncollect
                      LogicalProject($f0=[$cor7.entries])
                        LogicalValues(tuples=[[{ 0 }]])
                LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
                  LogicalProject(productid=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], description=[$4], category=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
                    LogicalProject(productid=[$2], _uuid=[$0], _ingest_time=[$1], name=[$3], description=[$4], category=[$5], updatetime=[$6])
                      LogicalProject(_uuid=[$0], _ingest_time=[$1], productid=[$2], name=[$3], description=[$4], category=[$5], updatetime=[-($1, 31536000000:INTERVAL DAY(3))]) hints[WatermarkHint options:[6]]
                        LogicalTableScan(table=[[product$i$4]])
        LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
            LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
              LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                LogicalTableScan(table=[[customer$i$1]])

>>>newcustomerpromotion$28-lp-stream
LogicalProject(_uuid=[$0], _source_time=[$1], customerid=[$2], email=[$3], name=[$4], total_spend=[$5], num_orders=[$6])
  LogicalProject(_uuid=[$0], _source_time=[$1], customerid=[$2], email=[$3], name=[$4], total_spend=[$5], num_orders=[$6])
    LogicalStream(stream=[ADD])
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[$7], __customerid$pk$1=[$8], total_spend=[$9], num_orders=[$10], time=[$11], $f4=[$12], __timestamp=[CASE(<($6, $11), $11, $6)])
        LogicalJoin(condition=[=($0, $8)], joinType=[inner]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
          LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
            LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
              LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
                LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                  LogicalTableScan(table=[[customer$i$1]])
          LogicalFilter(condition=[OR(>=($1, 100), >=($2, 3))])
            LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
              LogicalProject(__customerid$pk$1=[$0], total_spend=[$1], num_orders=[$2], time=[$3], $f4=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $3 DESC NULLS LAST)])
                LogicalProject(__customerid$pk$1=[$6], total_spend=[SUM($15) IGNORE NULLS OVER (PARTITION BY $6 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], num_orders=[COUNT() IGNORE NULLS OVER (PARTITION BY $6 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
                  LogicalJoin(condition=[AND(=($0, $14), =($18, $4))], joinType=[inner]) hints[IntervalJoin]
                    LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
                      LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
                      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
                        LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
                          LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
                            LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                              LogicalTableScan(table=[[customer$i$1]])
                    LogicalProject(___uuid$pk$1=[$0], price=[$2], discount=[$3], num=[$4], time=[$1])
                      LogicalAggregate(group=[{0, 4}], price=[SUM($12)], discount=[SUM($11)], num=[COUNT()]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
                        LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], discount$0=[COALESCE($10, 0.0:DOUBLE)], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))])
                          LogicalCorrelate(correlation=[$cor11], joinType=[inner], requiredColumns=[{5}])
                            LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
                            Uncollect
                              LogicalProject($f0=[$cor11.entries])
                                LogicalValues(tuples=[[{ 0 }]])

>>>newcustomerpromotion$debug1-lp-stream
LogicalProject(_uuid=[$0], _source_time=[$1], customerid=[$2], email=[$3], name=[$4], total_spend=[$5], num_orders=[$6])
  LogicalStream(stream=[ADD])
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[$7], __customerid$pk$1=[$8], total_spend=[$9], num_orders=[$10], time=[$11], $f4=[$12], __timestamp=[CASE(<($6, $11), $11, $6)])
      LogicalJoin(condition=[=($0, $8)], joinType=[inner]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
        LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
            LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
              LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                LogicalTableScan(table=[[customer$i$1]])
        LogicalFilter(condition=[OR(>=($1, 100), >=($2, 3))])
          LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
            LogicalProject(__customerid$pk$1=[$0], total_spend=[$1], num_orders=[$2], time=[$3], $f4=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $3 DESC NULLS LAST)])
              LogicalProject(__customerid$pk$1=[$6], total_spend=[SUM($15) IGNORE NULLS OVER (PARTITION BY $6 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], num_orders=[COUNT() IGNORE NULLS OVER (PARTITION BY $6 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
                LogicalJoin(condition=[AND(=($0, $14), =($18, $4))], joinType=[inner]) hints[IntervalJoin]
                  LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
                    LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
                    LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
                      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
                        LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
                          LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                            LogicalTableScan(table=[[customer$i$1]])
                  LogicalProject(___uuid$pk$1=[$0], price=[$2], discount=[$3], num=[$4], time=[$1])
                    LogicalAggregate(group=[{0, 4}], price=[SUM($12)], discount=[SUM($11)], num=[COUNT()]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
                      LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], discount$0=[COALESCE($10, 0.0:DOUBLE)], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))])
                        LogicalCorrelate(correlation=[$cor11], joinType=[inner], requiredColumns=[{5}])
                          LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
                          Uncollect
                            LogicalProject($f0=[$cor11.entries])
                              LogicalValues(tuples=[[{ 0 }]])

>>>order_again$20-lp-stream
LogicalProject(__customerid$pk$1=[$0], productid=[$1], quantity=[$2], num_orders=[$3], most_recent=[$4])
  LogicalProject(__customerid$pk$1=[$6], productid=[$15], quantity=[SUM($16) IGNORE NULLS OVER (PARTITION BY $6, $15 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], num_orders=[COUNT() IGNORE NULLS OVER (PARTITION BY $6, $15 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], most_recent=[MAX($4) IGNORE NULLS OVER (PARTITION BY $6, $15 ORDER BY $4 ROWS UNBOUNDED PRECEDING)])
    LogicalCorrelate(correlation=[$cor9], joinType=[inner], requiredColumns=[{5}])
      LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
        LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
        LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
            LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
              LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                LogicalTableScan(table=[[customer$i$1]])
      Uncollect
        LogicalProject($f0=[$cor9.entries])
          LogicalValues(tuples=[[{ 0 }]])

>>>order_again$debug2-lp-stream
LogicalProject(__customerid$pk$1=[$6], productid=[$15], quantity=[SUM($16) IGNORE NULLS OVER (PARTITION BY $6, $15 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], num_orders=[COUNT() IGNORE NULLS OVER (PARTITION BY $6, $15 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], most_recent=[MAX($4) IGNORE NULLS OVER (PARTITION BY $6, $15 ORDER BY $4 ROWS UNBOUNDED PRECEDING)])
  LogicalCorrelate(correlation=[$cor9], joinType=[inner], requiredColumns=[{5}])
    LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
      LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
        LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
          LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
            LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
              LogicalTableScan(table=[[customer$i$1]])
    Uncollect
      LogicalProject($f0=[$cor9.entries])
        LogicalValues(tuples=[[{ 0 }]])

>>>order_stats$debug3-lp-stream
LogicalProject(__customerid$pk$1=[$6], total_spend=[SUM($15) IGNORE NULLS OVER (PARTITION BY $6 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], num_orders=[COUNT() IGNORE NULLS OVER (PARTITION BY $6 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
  LogicalJoin(condition=[AND(=($0, $14), =($18, $4))], joinType=[inner]) hints[IntervalJoin]
    LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
      LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
        LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
          LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
            LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
              LogicalTableScan(table=[[customer$i$1]])
    LogicalProject(___uuid$pk$1=[$0], price=[$2], discount=[$3], num=[$4], time=[$1])
      LogicalAggregate(group=[{0, 4}], price=[SUM($12)], discount=[SUM($11)], num=[COUNT()]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
        LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], discount$0=[COALESCE($10, 0.0:DOUBLE)], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))])
          LogicalCorrelate(correlation=[$cor11], joinType=[inner], requiredColumns=[{5}])
            LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
            Uncollect
              LogicalProject($f0=[$cor11.entries])
                LogicalValues(tuples=[[{ 0 }]])

>>>total$debug4-lp-stream
LogicalProject(___uuid$pk$1=[$0], price=[$2], discount=[$3], num=[$4], time=[$1])
  LogicalAggregate(group=[{0, 4}], price=[SUM($12)], discount=[SUM($11)], num=[COUNT()]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], discount$0=[COALESCE($10, 0.0:DOUBLE)], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))])
      LogicalCorrelate(correlation=[$cor11], joinType=[inner], requiredColumns=[{5}])
        LogicalTableScan(table=[[orders$i$7]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
        Uncollect
          LogicalProject($f0=[$cor11.entries])
            LogicalValues(tuples=[[{ 0 }]])

>>>NewCustomerPromotion-lp-database
LogicalSort(sort0=[$1], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(_uuid=[$0], _source_time=[$1], customerid=[$2], email=[$3], name=[$4], total_spend=[$5], num_orders=[$6])
    LogicalTableScan(table=[[newcustomerpromotion$28]])

>>>favorite_categories-lp-database
LogicalSort(sort0=[$0], sort1=[$2], sort2=[$1], dir0=[ASC], dir1=[ASC], dir2=[ASC])
  LogicalProject(__customerid$pk$1=[$0], category_name=[$1], total=[$2], month=[$3])
    LogicalTableScan(table=[[favorite_categories$24]])

>>>order_again-lp-database
LogicalSort(sort0=[$0], sort1=[$4], sort2=[$2], sort3=[$1], dir0=[ASC], dir1=[DESC], dir2=[DESC], dir3=[ASC])
  LogicalProject(__customerid$pk$1=[$0], productid=[$1], quantity=[$2], num_orders=[$3], most_recent=[$4])
    LogicalTableScan(table=[[order_again$20]])

>>>favorite_categories-data
Decoration, 120.85, 2024-05-27T21:23:59.999-07:00
House & Garden, 166.5, 2024-05-27T21:23:59.999-07:00
Personal Care, 146.82, 2024-05-27T21:23:59.999-07:00
>>>NewCustomerPromotion-data
2023-05-19T01:29:39.553-07:00, 1000101, john.mekker@gmail.com, John Mekker, 120.85, 1
2023-05-19T02:16:39.553-07:00, 1000121, lalelu@hottunes.org, Michelle Dagnes, 166.5, 1
2023-05-19T02:28:39.553-07:00, 1000107, emily.ludies@hotmail.com, Emily F. Ludies, 146.82, 2
>>>order_again-data
1332, 8, 1, 2023-05-19T02:28:39.553-07:00
3225, 1, 1, 2023-05-19T02:16:39.553-07:00
3571, 2, 2, 2023-05-19T02:28:39.553-07:00
7235, 1, 1, 2023-05-19T01:29:39.553-07:00
7552, 3, 1, 2023-05-19T02:16:39.553-07:00
8757, 2, 1, 2023-05-19T01:29:39.553-07:00
>>>export-newcustomerpromotion$debug1
3
>>>export-order_again$debug2
7
>>>export-order_stats$debug3
4
>>>export-total$debug4
4
