>>>pipeline_explain.txt
=== ApplicationAlert
ID:     applicationalert$1
Type:   stream
Stage:  streams
Inputs: applicationstatus$1
Primary Key: _uuid
Timestamp  : _event_time
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - amount: DOUBLE NOT NULL
 - _uuid: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _event_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalProject(id=[$3], customer_id=[$4], loan_type_id=[$5], max_amount=[$8], min_amount=[$9], amount=[$6], _uuid=[$10], _event_time=[$2])
  LogicalFilter(condition=[AND(=($0, 'underwriting'), OR(>($6, $8), <($6, $9)))])
    LogicalTableScan(table=[[applicationstatus$1]])

=== ApplicationAlert.applicationalert-1
ID:     applicationalert$1$1
Type:   export
Stage:  streams
Inputs: applicationalert$1

=== Applications
ID:     applications$2
Type:   stream
Stage:  streams
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[applications$1]], hints=[[[WatermarkHint inheritPath:[] options:[6]]]]) hints[WatermarkHint options:[6]]

=== Applications
ID:     applications$3
Type:   state
Stage:  streams
Inputs: applications$2
Primary Key: id
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=id limit=1 sort=#6: updated_at TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last 
Plan:
LogicalTableScan(table=[[applications$2]])

=== ApplicationStatus
ID:     applicationstatus$1
Type:   stream
Stage:  streams
Inputs: applications$3, applicationupdates$2, loantypes$3
Primary Key: _uuid
Timestamp  : event_time
Schema:
 - status: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - message: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - event_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - _uuid: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
Plan:
LogicalProject(status=[$1], message=[$2], event_time=[$4], id=[$5], customer_id=[$6], loan_type_id=[$7], amount=[$8], duration=[$9], max_amount=[$17], min_amount=[$18], _uuid=[$3])
  LogicalJoin(condition=[=($13, $7)], joinType=[inner]) hints[TemporalJoinHint options:[4]]
    LogicalJoin(condition=[=($5, $0)], joinType=[inner]) hints[TemporalJoinHint options:[4]]
      LogicalTableScan(table=[[applicationupdates$2]])
      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
        LogicalProject(id=[$0], customer_id=[$1], loan_type_id=[$2], amount=[$3], duration=[$4], application_date=[$5], updated_at=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
          LogicalTableScan(table=[[applications$3]])
    LogicalFilter(condition=[=($9, 1)]) hints[DedupHint]
      LogicalProject(id=[$0], name=[$1], description=[$2], interest_rate=[$3], max_amount=[$4], min_amount=[$5], max_duration=[$6], min_duration=[$7], updated_at=[$8], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $8 DESC NULLS LAST)])
        LogicalTableScan(table=[[loantypes$3]])

=== ApplicationUpdates
ID:     applicationupdates$2
Type:   stream
Stage:  streams
Primary Key: _uuid
Timestamp  : event_time
Schema:
 - loan_application_id: BIGINT NOT NULL
 - status: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - message: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _uuid: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - event_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[applicationupdates$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

=== Customers
ID:     customers$2
Type:   stream
Stage:  streams
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - first_name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - last_name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - phone: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - address: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - date_of_birth: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[customers$1]], hints=[[[WatermarkHint inheritPath:[] options:[7]]]]) hints[WatermarkHint options:[7]]

=== Customers
ID:     customers$3
Type:   state
Stage:  streams
Inputs: customers$2
Primary Key: id
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - first_name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - last_name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - phone: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - address: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - date_of_birth: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=id limit=1 sort=#7: updated_at TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last 
Plan:
LogicalTableScan(table=[[customers$2]])

=== LoanTypes
ID:     loantypes$2
Type:   stream
Stage:  streams
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - interest_rate: DOUBLE NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - max_duration: BIGINT NOT NULL
 - min_duration: BIGINT NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[loantypes$1]], hints=[[[WatermarkHint inheritPath:[] options:[8]]]]) hints[WatermarkHint options:[8]]

=== LoanTypes
ID:     loantypes$3
Type:   state
Stage:  streams
Inputs: loantypes$2
Primary Key: id
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - interest_rate: DOUBLE NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - max_duration: BIGINT NOT NULL
 - min_duration: BIGINT NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=id limit=1 sort=#8: updated_at TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last 
Plan:
LogicalTableScan(table=[[loantypes$2]])

=== overview
ID:     overview$1
Type:   state
Stage:  streams
Inputs: applications$3, customers$3
Primary Key: __pk1$id, loan_type_id
Timestamp  : __timestamp
Schema:
 - __pk1$id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - total_amount: DOUBLE NOT NULL
 - total_loans: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalProject(__pk1$id=[$0], loan_type_id=[$1], total_amount=[$2], total_loans=[$3], __timestamp=[$4])
  LogicalAggregate(group=[{0, 11}], total_amount=[SUM($12)], total_loans=[COUNT()], __timestamp=[MAX($17)])
    LogicalProject(id=[$0], first_name=[$1], last_name=[$2], email=[$3], phone=[$4], address=[$5], date_of_birth=[$6], updated_at=[$7], _rownum=[$8], id0=[$9], customer_id=[$10], loan_type_id=[$11], amount=[$12], duration=[$13], application_date=[$14], updated_at0=[$15], customer_id7=[$16], __timestamp=[CASE(<($7, $15), $15, $7)])
      LogicalJoin(condition=[=($0, $16)], joinType=[inner]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 1, LEFT]]
        LogicalFilter(condition=[=($8, 1)]) hints[DedupHint]
          LogicalProject(id=[$0], first_name=[$1], last_name=[$2], email=[$3], phone=[$4], address=[$5], date_of_birth=[$6], updated_at=[$7], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $7 DESC NULLS LAST)])
            LogicalTableScan(table=[[customers$3]])
        LogicalProject(id=[$0], customer_id=[$1], loan_type_id=[$2], amount=[$3], duration=[$4], application_date=[$5], updated_at=[$6], customer_id7=[$1])
          LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
            LogicalProject(id=[$0], customer_id=[$1], loan_type_id=[$2], amount=[$3], duration=[$4], application_date=[$5], updated_at=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
              LogicalTableScan(table=[[applications$3]])

