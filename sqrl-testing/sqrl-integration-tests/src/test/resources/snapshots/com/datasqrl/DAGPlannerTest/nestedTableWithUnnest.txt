>>>pipeline_explain.txt
=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]])

=== totals
ID:     totals_1
Type:   stream
Stage:  flink
Inputs: orders_2
Primary Key: __pk1_id, __pk3_time
Timestamp  : __pk3_time
Schema:
 - __pk1_id: BIGINT NOT NULL
 - __pk3_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - price: DOUBLE NOT NULL
 - saving: DOUBLE NOT NULL
Plan:
LogicalProject(__pk1_id=[$0], __pk3_time=[$1], price=[$2], saving=[$3])
  LogicalAggregate(group=[{0, 1}], price=[SUM($2)], agg#1=[SUM($3)]) hints[TumbleAggregationHint options:[1, INSTANT, 1, 1, 0]]
    LogicalProject(__pk1_id=[$0], __pk2_time=[$2], $f2=[*($5, $6)], $f3=[COALESCE($7, 0.0:DECIMAL(2, 1))], productid=[$4])
      LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{3}])
        LogicalTableScan(table=[[orders_2]])
        LogicalTableFunctionScan(invocation=[Orders.entries($cor0.entries)], rowType=[RecordType(BIGINT productid, BIGINT quantity, DOUBLE unit_price, DOUBLE discount)], elementType=[class [Ljava.lang.Object;])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED,\n  WATERMARK FOR `time` AS `time` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `orders_2` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `totals_1` (\n  `__pk1_id` BIGINT NOT NULL,\n  `__pk3_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `price` DOUBLE NOT NULL,\n  `saving` DOUBLE NOT NULL,\n  PRIMARY KEY (`__pk1_id`, `__pk3_time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'totals_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`\nFROM `orders_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT `$cor0`.`id` AS `__pk1_id`, `$cor0`.`time` AS `__pk2_time`, `t00`.`quantity` * `t00`.`unit_price` AS `$f2`, COALESCE(`t00`.`discount`, 0.0) AS `$f3`, `t00`.`productid`\nFROM `orders_1` AS `$cor0`,\n UNNEST(`$cor0`.`entries`) AS `t00` (`productid`, `quantity`, `unit_price`, `discount`);",
    "CREATE VIEW `table$3`\nAS\nSELECT `__pk1_id`, `window_time` AS `__pk3_time`, SUM(`$f2`) AS `price`, SUM(`$f3`) AS `saving`\nFROM TABLE(TUMBLE(TABLE `table$2`, DESCRIPTOR(`__pk2_time`), INTERVAL '0.001' SECOND(1))) AS `t2`\nGROUP BY `__pk1_id`, `window_start`, `window_end`, `window_time`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `orders_2`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `totals_1`\n (SELECT *\n  FROM `table$3`)\n ;\n END;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "filesystem"
  ],
  "formats" : [
    "json"
  ],
  "compliedPlan" : "{\n  \"flinkVersion\" : \"1.19\",\n  \"nodes\" : [ {\n    \"id\" : 206,\n    \"type\" : \"stream-exec-table-source-scan_1\",\n    \"scanTableSource\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`orders_1`\"\n      }\n    },\n    \"outputType\" : \"ROW<`id` BIGINT NOT NULL, `customerid` BIGINT NOT NULL, `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL, `entries` ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL>\",\n    \"description\" : \"TableSourceScan(table=[[default_catalog, default_database, orders_1]], fields=[id, customerid, time, entries])\",\n    \"inputProperties\" : [ ]\n  }, {\n    \"id\" : 207,\n    \"type\" : \"stream-exec-watermark-assigner_1\",\n    \"watermarkExpr\" : {\n      \"kind\" : \"CALL\",\n      \"syntax\" : \"BINARY\",\n      \"internalName\" : \"$-$1\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 2,\n        \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n      }, {\n        \"kind\" : \"LITERAL\",\n        \"value\" : \"1\",\n        \"type\" : \"INTERVAL SECOND(6) NOT NULL\"\n      } ],\n      \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n    },\n    \"rowtimeFieldIndex\" : 2,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"entries\",\n        \"fieldType\" : \"ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL\"\n      } ]\n    },\n    \"description\" : \"WatermarkAssigner(rowtime=[time], watermark=[(time - 1:INTERVAL SECOND)])\"\n  }, {\n    \"id\" : 208,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 1,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    }, {\n      \"kind\" : \"CALL\",\n      \"catalogName\" : \"`default_catalog`.`default_database`.`TOJSON`\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 3,\n        \"type\" : \"ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL\"\n      } ],\n      \"type\" : \"RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI=')\"\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"entries\",\n        \"fieldType\" : \"RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI=')\"\n      } ]\n    },\n    \"description\" : \"Calc(select=[id, customerid, time, TOJSON(entries) AS entries])\"\n  }, {\n    \"id\" : 209,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`orders_2`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputUpsertKey\" : [ 0, 2 ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"entries\",\n        \"fieldType\" : \"RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI=')\"\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.orders_2], fields=[id, customerid, time, entries])\"\n  }, {\n    \"id\" : 210,\n    \"type\" : \"stream-exec-correlate_1\",\n    \"joinType\" : \"INNER\",\n    \"functionCall\" : {\n      \"kind\" : \"CALL\",\n      \"internalName\" : \"$UNNEST_ROWS$1\",\n      \"operands\" : [ {\n        \"kind\" : \"FIELD_ACCESS\",\n        \"name\" : \"entries\",\n        \"expr\" : {\n          \"kind\" : \"CORREL_VARIABLE\",\n          \"correl\" : \"$cor2\",\n          \"type\" : {\n            \"type\" : \"ROW\",\n            \"nullable\" : false,\n            \"fields\" : [ {\n              \"name\" : \"id\",\n              \"fieldType\" : \"BIGINT NOT NULL\"\n            }, {\n              \"name\" : \"customerid\",\n              \"fieldType\" : \"BIGINT NOT NULL\"\n            }, {\n              \"name\" : \"time\",\n              \"fieldType\" : {\n                \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n                \"nullable\" : false,\n                \"precision\" : 3,\n                \"kind\" : \"ROWTIME\"\n              }\n            }, {\n              \"name\" : \"entries\",\n              \"fieldType\" : \"ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL\"\n            }, {\n              \"name\" : \"productid\",\n              \"fieldType\" : \"BIGINT NOT NULL\"\n            }, {\n              \"name\" : \"quantity\",\n              \"fieldType\" : \"BIGINT NOT NULL\"\n            }, {\n              \"name\" : \"unit_price\",\n              \"fieldType\" : \"DOUBLE NOT NULL\"\n            }, {\n              \"name\" : \"discount\",\n              \"fieldType\" : \"DOUBLE\"\n            } ]\n          }\n        }\n      } ],\n      \"type\" : \"ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL\"\n    },\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"entries\",\n        \"fieldType\" : \"ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL\"\n      }, {\n        \"name\" : \"productid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"quantity\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"unit_price\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"discount\",\n        \"fieldType\" : \"DOUBLE\"\n      } ]\n    },\n    \"description\" : \"Correlate(invocation=[$UNNEST_ROWS$1($cor2.entries)], correlate=[table($UNNEST_ROWS$1($cor2.entries))], select=[id,customerid,time,entries,productid,quantity,unit_price,discount], rowType=[RecordType(BIGINT id, BIGINT customerid, TIMESTAMP_LTZ(3) *ROWTIME* time, RecordType:peek_no_expand(BIGINT productid, BIGINT quantity, DOUBLE unit_price, DOUBLE discount) ARRAY entries, BIGINT productid, BIGINT quantity, DOUBLE unit_price, DOUBLE discount)], joinType=[INNER])\"\n  }, {\n    \"id\" : 211,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"CALL\",\n      \"syntax\" : \"BINARY\",\n      \"internalName\" : \"$*$1\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 5,\n        \"type\" : \"BIGINT NOT NULL\"\n      }, {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 6,\n        \"type\" : \"DOUBLE NOT NULL\"\n      } ],\n      \"type\" : \"DOUBLE NOT NULL\"\n    }, {\n      \"kind\" : \"CALL\",\n      \"internalName\" : \"$COALESCE$1\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 7,\n        \"type\" : \"DOUBLE\"\n      }, {\n        \"kind\" : \"LITERAL\",\n        \"value\" : \"0.0\",\n        \"type\" : \"DOUBLE NOT NULL\"\n      } ],\n      \"type\" : \"DOUBLE NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"__pk1_id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"$f2\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"$f3\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"__pk2_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"Calc(select=[id AS __pk1_id, (quantity * unit_price) AS $f2, COALESCE(discount, 0.0) AS $f3, time AS __pk2_time])\"\n  }, {\n    \"id\" : 212,\n    \"type\" : \"stream-exec-local-window-aggregate_1\",\n    \"configuration\" : {\n      \"table.local-time-zone\" : \"default\"\n    },\n    \"grouping\" : [ 0 ],\n    \"aggCalls\" : [ {\n      \"name\" : \"price\",\n      \"internalName\" : \"$SUM$1\",\n      \"argList\" : [ 1 ],\n      \"filterArg\" : -1,\n      \"distinct\" : false,\n      \"approximate\" : false,\n      \"ignoreNulls\" : false,\n      \"type\" : \"DOUBLE NOT NULL\"\n    }, {\n      \"name\" : \"saving\",\n      \"internalName\" : \"$SUM$1\",\n      \"argList\" : [ 2 ],\n      \"filterArg\" : -1,\n      \"distinct\" : false,\n      \"approximate\" : false,\n      \"ignoreNulls\" : false,\n      \"type\" : \"DOUBLE NOT NULL\"\n    } ],\n    \"windowing\" : {\n      \"strategy\" : \"TimeAttribute\",\n      \"window\" : {\n        \"type\" : \"TumblingWindow\",\n        \"size\" : \"PT0.001S\"\n      },\n      \"timeAttributeType\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      },\n      \"timeAttributeIndex\" : 3,\n      \"isRowtime\" : true\n    },\n    \"needRetraction\" : false,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : \"ROW<`__pk1_id` BIGINT NOT NULL, `sum$0` DOUBLE, `sum$1` DOUBLE, `$slice_end` BIGINT>\",\n    \"description\" : \"LocalWindowAggregate(groupBy=[__pk1_id], window=[TUMBLE(time_col=[__pk2_time], size=[1 ms])], select=[__pk1_id, SUM($f2) AS sum$0, SUM($f3) AS sum$1, slice_end('w$) AS $slice_end])\"\n  }, {\n    \"id\" : 213,\n    \"type\" : \"stream-exec-exchange_1\",\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"HASH\",\n        \"keys\" : [ 0 ]\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : \"ROW<`__pk1_id` BIGINT NOT NULL, `sum$0` DOUBLE, `sum$1` DOUBLE, `$slice_end` BIGINT>\",\n    \"description\" : \"Exchange(distribution=[hash[__pk1_id]])\"\n  }, {\n    \"id\" : 214,\n    \"type\" : \"stream-exec-global-window-aggregate_1\",\n    \"configuration\" : {\n      \"table.local-time-zone\" : \"default\"\n    },\n    \"grouping\" : [ 0 ],\n    \"aggCalls\" : [ {\n      \"name\" : \"price\",\n      \"internalName\" : \"$SUM$1\",\n      \"argList\" : [ 1 ],\n      \"filterArg\" : -1,\n      \"distinct\" : false,\n      \"approximate\" : false,\n      \"ignoreNulls\" : false,\n      \"type\" : \"DOUBLE NOT NULL\"\n    }, {\n      \"name\" : \"saving\",\n      \"internalName\" : \"$SUM$1\",\n      \"argList\" : [ 2 ],\n      \"filterArg\" : -1,\n      \"distinct\" : false,\n      \"approximate\" : false,\n      \"ignoreNulls\" : false,\n      \"type\" : \"DOUBLE NOT NULL\"\n    } ],\n    \"windowing\" : {\n      \"strategy\" : \"SliceAttached\",\n      \"window\" : {\n        \"type\" : \"TumblingWindow\",\n        \"size\" : \"PT0.001S\"\n      },\n      \"timeAttributeType\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      },\n      \"sliceEnd\" : 3,\n      \"isRowtime\" : true\n    },\n    \"namedWindowProperties\" : [ {\n      \"name\" : \"window_start\",\n      \"property\" : {\n        \"kind\" : \"WindowStart\",\n        \"reference\" : {\n          \"name\" : \"w$\",\n          \"type\" : {\n            \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n            \"nullable\" : false,\n            \"precision\" : 3,\n            \"kind\" : \"ROWTIME\"\n          }\n        }\n      }\n    }, {\n      \"name\" : \"window_end\",\n      \"property\" : {\n        \"kind\" : \"WindowEnd\",\n        \"reference\" : {\n          \"name\" : \"w$\",\n          \"type\" : {\n            \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n            \"nullable\" : false,\n            \"precision\" : 3,\n            \"kind\" : \"ROWTIME\"\n          }\n        }\n      }\n    }, {\n      \"name\" : \"window_time\",\n      \"property\" : {\n        \"kind\" : \"Rowtime\",\n        \"reference\" : {\n          \"name\" : \"w$\",\n          \"type\" : {\n            \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n            \"nullable\" : false,\n            \"precision\" : 3,\n            \"kind\" : \"ROWTIME\"\n          }\n        }\n      }\n    } ],\n    \"needRetraction\" : false,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"localAggInputRowType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"__pk1_id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"$f2\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"$f3\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"__pk2_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"__pk1_id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"price\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"saving\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"window_start\",\n        \"fieldType\" : \"TIMESTAMP(3) NOT NULL\"\n      }, {\n        \"name\" : \"window_end\",\n        \"fieldType\" : \"TIMESTAMP(3) NOT NULL\"\n      }, {\n        \"name\" : \"window_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"GlobalWindowAggregate(groupBy=[__pk1_id], window=[TUMBLE(slice_end=[$slice_end], size=[1 ms])], select=[__pk1_id, SUM(sum$0) AS price, SUM(sum$1) AS saving, start('w$) AS window_start, end('w$) AS window_end, rowtime('w$) AS window_time])\"\n  }, {\n    \"id\" : 215,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 5,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 1,\n      \"type\" : \"DOUBLE NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : \"DOUBLE NOT NULL\"\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"__pk1_id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"__pk3_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"price\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"saving\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      } ]\n    },\n    \"description\" : \"Calc(select=[__pk1_id, window_time AS __pk3_time, price, saving])\"\n  }, {\n    \"id\" : 216,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`totals_1`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"__pk1_id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"__pk3_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"price\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      }, {\n        \"name\" : \"saving\",\n        \"fieldType\" : \"DOUBLE NOT NULL\"\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.totals_1], fields=[__pk1_id, __pk3_time, price, saving])\"\n  } ],\n  \"edges\" : [ {\n    \"source\" : 206,\n    \"target\" : 207,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 207,\n    \"target\" : 208,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 208,\n    \"target\" : 209,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 207,\n    \"target\" : 210,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 210,\n    \"target\" : 211,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 211,\n    \"target\" : 212,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 212,\n    \"target\" : 213,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 213,\n    \"target\" : 214,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 214,\n    \"target\" : 215,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 215,\n    \"target\" : 216,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  } ]\n}"
}
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "orders_2",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_2 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "name" : "totals_1",
      "columns" : [
        "\"__pk1_id\" BIGINT NOT NULL",
        "\"__pk3_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"price\" DOUBLE PRECISION NOT NULL",
        "\"saving\" DOUBLE PRECISION NOT NULL"
      ],
      "primaryKeys" : [
        "\"__pk1_id\"",
        "\"__pk3_time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS totals_1 (\"__pk1_id\" BIGINT NOT NULL,\"__pk3_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"price\" DOUBLE PRECISION NOT NULL,\"saving\" DOUBLE PRECISION NOT NULL , PRIMARY KEY (\"__pk1_id\",\"__pk3_time\"));"
    },
    {
      "indexName" : "orders_2_hash_c2",
      "tableName" : "orders_2",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_hash_c2 ON orders_2 USING hash (\"time\");"
    }
  ],
  "views" : [
    {
      "name" : "Orders",
      "sql" : "CREATE OR REPLACE VIEW \"Orders\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\";"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Orders",
        "fieldName" : "totals",
        "matchs" : [
          {
            "arguments" : [ ],
            "query" : {
              "type" : "JdbcQuery",
              "type" : "JdbcQuery",
              "sql" : "SELECT *\nFROM \"totals_1\"\nWHERE \"__pk1_id\" = $1 AND \"__pk3_time\" = $2\nORDER BY \"__pk3_time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "source",
                  "type" : "source",
                  "key" : "id"
                },
                {
                  "type" : "source",
                  "type" : "source",
                  "key" : "time"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "totals",
        "fieldName" : "parent",
        "matchs" : [
          {
            "arguments" : [ ],
            "query" : {
              "type" : "JdbcQuery",
              "type" : "JdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "source",
                  "type" : "source",
                  "key" : "__pk1_id"
                },
                {
                  "type" : "source",
                  "type" : "source",
                  "key" : "__pk3_time"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n  totals: totals\n}\n\ntype Query {\n  Orders(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [Orders!]\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n\ntype totals {\n  price: Float!\n  saving: Float!\n  parent: Orders!\n}\n"
    }
  }
}
