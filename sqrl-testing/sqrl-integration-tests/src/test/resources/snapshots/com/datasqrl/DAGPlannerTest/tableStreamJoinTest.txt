>>>pipeline_explain.txt
=== Customer
ID:     customer_2
Type:   stream
Stage:  flink
Primary Key: customerid, lastUpdated
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - lastUpdated: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[customer_1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

=== OrderCustomer
ID:     ordercustomer_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: id, _time, _lastUpdated
Timestamp  : _time
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - _lastUpdated: BIGINT NOT NULL
Plan:
LogicalProject(id=[$0], name=[$6], customerid=[$1], _time=[$2], _lastUpdated=[$7])
  LogicalJoin(condition=[=($1, $4)], joinType=[inner]) hints[JoinCostHint options:[STREAM, STREAM, 1, NONE]]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[customer_2]])

=== kafka.OrderCustomer
ID:     ordercustomer_1_1
Type:   export
Stage:  flink
Inputs: ordercustomer_1

=== OrderCustomerConstant
ID:     ordercustomerconstant_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: id, time, _lastUpdated
Timestamp  : time
Schema:
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
 - _lastUpdated: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], name=[$6], customerid=[$1], _lastUpdated=[$7])
  LogicalJoin(condition=[AND(=($1, $4), =($6, 'Robert'), >($0, 5))], joinType=[inner]) hints[JoinCostHint options:[STREAM, STREAM, 2, NONE]]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[customer_2]])

=== kafka.OrderCustomerConstant
ID:     ordercustomerconstant_1_2
Type:   export
Stage:  flink
Inputs: ordercustomerconstant_1

=== OrderCustomerLeft
ID:     ordercustomerleft_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: id, _time, ctime
Timestamp  : __timestamp
Schema:
 - cid: BIGINT NOT NULL
 - ctime: BIGINT NOT NULL
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - customerid: BIGINT NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
Plan:
LogicalProject(cid=[COALESCE($4, 0:BIGINT)], ctime=[COALESCE($7, 0:BIGINT)], id=[$0], name=[$6], customerid=[$1], _time=[$2], __timestamp=[CASE(<($2, $8), $8, $2)])
  LogicalJoin(condition=[=($1, $4)], joinType=[left]) hints[JoinCostHint options:[STREAM, STREAM, 1, NONE]]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[customer_2]])

=== kafka.OrderCustomerLeft
ID:     ordercustomerleft_1_3
Type:   export
Stage:  flink
Inputs: ordercustomerleft_1

=== OrderCustomerLeftExcluded
ID:     ordercustomerleftexcluded_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: id, time
Timestamp  : time
Schema:
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], customerid=[$1])
  LogicalFilter(condition=[AND(IS NULL($4), IS NULL($7))])
    LogicalJoin(condition=[=($1, $4)], joinType=[left]) hints[JoinCostHint options:[STREAM, STREAM, 1, NONE]]
      LogicalTableScan(table=[[orders_2]])
      LogicalTableScan(table=[[customer_2]])

=== kafka.OrderCustomerLeftExcluded
ID:     ordercustomerleftexcluded_1_4
Type:   export
Stage:  flink
Inputs: ordercustomerleftexcluded_1

=== OrderCustomerRight
ID:     ordercustomerright_1
Type:   stream
Stage:  postgres
Inputs: customer_2, orders_2
Primary Key: _customerid0, _lastUpdated, ouuid, _time
Timestamp  : __timestamp
Schema:
 - ouuid: BIGINT NOT NULL
 - otime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT
 - _customerid0: BIGINT NOT NULL
 - _lastUpdated: BIGINT NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
Plan:
LogicalProject(ouuid=[COALESCE($5, 0:BIGINT)], otime=[COALESCE($7, proctime())], id=[$5], name=[$2], customerid=[$6], _customerid0=[$0], _lastUpdated=[$3], _time=[$7], __timestamp=[CASE(<($4, $7), $7, $4)])
  LogicalJoin(condition=[=($6, $0)], joinType=[left]) hints[JoinCostHint options:[STREAM, STREAM, 1, NONE]]
    LogicalTableScan(table=[[customer_2]])
    LogicalTableScan(table=[[orders_2]])

=== OrderCustomerRightExcluded
ID:     ordercustomerrightexcluded_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: customerid, lastUpdated
Timestamp  : __timestamp
Schema:
 - lastUpdated: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
Plan:
LogicalProject(lastUpdated=[$3], customerid=[$0], name=[$2], __timestamp=[CASE(<($4, $7), $7, $4)])
  LogicalFilter(condition=[AND(IS NULL($5), IS NULL($7))])
    LogicalJoin(condition=[=($6, $0)], joinType=[left]) hints[JoinCostHint options:[STREAM, STREAM, 1, NONE]]
      LogicalTableScan(table=[[customer_2]])
      LogicalTableScan(table=[[orders_2]])

=== kafka.OrderCustomerRightExcluded
ID:     ordercustomerrightexcluded_1_5
Type:   export
Stage:  flink
Inputs: ordercustomerrightexcluded_1

=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]], hints=[[[WatermarkHint inheritPath:[] options:[2]]]]) hints[WatermarkHint options:[2]]

=== Product
ID:     product_2
Type:   stream
Stage:  flink
Primary Key: productid, name, description, category
Timestamp  : _ingest_time
Schema:
 - productid: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - category: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _ingest_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[product_1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptostring` AS 'com.datasqrl.time.TimestampToString' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofmonth` AS 'com.datasqrl.time.EndOfMonth' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepochmilli` AS 'com.datasqrl.time.TimestampToEpochMilli' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofweek` AS 'com.datasqrl.time.EndOfWeek' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `parsetimestamp` AS 'com.datasqrl.time.ParseTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochmillitotimestamp` AS 'com.datasqrl.time.EpochMilliToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofminute` AS 'com.datasqrl.time.EndOfMinute' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepoch` AS 'com.datasqrl.time.TimestampToEpoch' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofsecond` AS 'com.datasqrl.time.EndOfSecond' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochtotimestamp` AS 'com.datasqrl.time.EpochToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `atzone` AS 'com.datasqrl.time.AtZone' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofday` AS 'com.datasqrl.time.EndOfDay' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofhour` AS 'com.datasqrl.time.EndOfHour' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofyear` AS 'com.datasqrl.time.EndOfYear' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `customer_1` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` AS EPOCHTOTIMESTAMP(`lastUpdated`),\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED,\n  WATERMARK FOR `timestamp` AS (`timestamp` - INTERVAL '0.001' SECOND)\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED,\n  WATERMARK FOR `time` AS (`time` - INTERVAL '0.001' SECOND)\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `product_1` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED,\n  WATERMARK FOR `_ingest_time` AS (`_ingest_time` - INTERVAL '0.001' SECOND)\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `customer_2` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'customer_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomer_1` (\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `_lastUpdated` BIGINT NOT NULL,\n  PRIMARY KEY (`id`, `_time`, `_lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomer_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerconstant_1` (\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `_lastUpdated` BIGINT NOT NULL,\n  PRIMARY KEY (`id`, `time`, `_lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerconstant_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerleft_1` (\n  `cid` BIGINT NOT NULL,\n  `ctime` BIGINT NOT NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,\n  `customerid` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE,\n  PRIMARY KEY (`id`, `_time`, `ctime`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerleft_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerleftexcluded_1` (\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerleftexcluded_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerrightexcluded_1` (\n  `lastUpdated` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE,\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerrightexcluded_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orders_2` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `product_2` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'product_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomer_1_1` (\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `_lastUpdated` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordercustomer_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerconstant_1_2` (\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `_lastUpdated` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordercustomerconstant_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerleft_1_3` (\n  `cid` BIGINT NOT NULL,\n  `ctime` BIGINT NOT NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,\n  `customerid` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordercustomerleft_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerleftexcluded_1_4` (\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordercustomerleftexcluded_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerrightexcluded_1_5` (\n  `lastUpdated` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordercustomerrightexcluded_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM `customer_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `orders_1`.`time` AS `_time`, `customer_1`.`lastUpdated` AS `_lastUpdated`\nFROM `orders_1`\nINNER JOIN `customer_1` ON (`orders_1`.`customerid` = `customer_1`.`customerid`);",
    "CREATE VIEW `table$3`\nAS\nSELECT `orders_1`.`time`, `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `customer_1`.`lastUpdated` AS `_lastUpdated`\nFROM `orders_1`\nINNER JOIN `customer_1` ON (((`orders_1`.`customerid` = `customer_1`.`customerid`) AND (`customer_1`.`name` = 'Robert')) AND (`orders_1`.`id` > 5));",
    "CREATE VIEW `table$4`\nAS\nSELECT COALESCE(`customer_1`.`customerid`, 0) AS `cid`, COALESCE(`customer_1`.`lastUpdated`, 0) AS `ctime`, `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `orders_1`.`time` AS `_time`, (CASE WHEN (`orders_1`.`time` < `customer_1`.`timestamp`) THEN `customer_1`.`timestamp` ELSE `orders_1`.`time` END) AS `__timestamp`\nFROM `orders_1`\nLEFT JOIN `customer_1` ON (`orders_1`.`customerid` = `customer_1`.`customerid`);",
    "CREATE VIEW `table$5`\nAS\nSELECT `orders_1`.`time`, `orders_1`.`id`, `orders_1`.`customerid`\nFROM `orders_1`\nLEFT JOIN `customer_1` ON (`orders_1`.`customerid` = `customer_1`.`customerid`)\nWHERE ((`customer_1`.`customerid` IS NULL) AND (`customer_1`.`lastUpdated` IS NULL));",
    "CREATE VIEW `table$6`\nAS\nSELECT `customer_1`.`lastUpdated`, `customer_1`.`customerid`, `customer_1`.`name`, (CASE WHEN (`customer_1`.`timestamp` < `orders_1`.`time`) THEN `orders_1`.`time` ELSE `customer_1`.`timestamp` END) AS `__timestamp`\nFROM `customer_1`\nLEFT JOIN `orders_1` ON (`customer_1`.`customerid` = `orders_1`.`customerid`)\nWHERE ((`orders_1`.`id` IS NULL) AND (`orders_1`.`time` IS NULL));",
    "CREATE VIEW `table$7`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`\nFROM `orders_1`;",
    "CREATE VIEW `table$8`\nAS\nSELECT *\nFROM `product_1`;",
    "CREATE VIEW `table$9`\nAS\nSELECT `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `orders_1`.`time` AS `_time`, `customer_1`.`lastUpdated` AS `_lastUpdated`\nFROM `orders_1`\nINNER JOIN `customer_1` ON (`orders_1`.`customerid` = `customer_1`.`customerid`);",
    "CREATE VIEW `table$10`\nAS\nSELECT `orders_1`.`time`, `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `customer_1`.`lastUpdated` AS `_lastUpdated`\nFROM `orders_1`\nINNER JOIN `customer_1` ON (((`orders_1`.`customerid` = `customer_1`.`customerid`) AND (`customer_1`.`name` = 'Robert')) AND (`orders_1`.`id` > 5));",
    "CREATE VIEW `table$11`\nAS\nSELECT COALESCE(`customer_1`.`customerid`, 0) AS `cid`, COALESCE(`customer_1`.`lastUpdated`, 0) AS `ctime`, `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `orders_1`.`time` AS `_time`, (CASE WHEN (`orders_1`.`time` < `customer_1`.`timestamp`) THEN `customer_1`.`timestamp` ELSE `orders_1`.`time` END) AS `__timestamp`\nFROM `orders_1`\nLEFT JOIN `customer_1` ON (`orders_1`.`customerid` = `customer_1`.`customerid`);",
    "CREATE VIEW `table$12`\nAS\nSELECT `orders_1`.`time`, `orders_1`.`id`, `orders_1`.`customerid`\nFROM `orders_1`\nLEFT JOIN `customer_1` ON (`orders_1`.`customerid` = `customer_1`.`customerid`)\nWHERE ((`customer_1`.`customerid` IS NULL) AND (`customer_1`.`lastUpdated` IS NULL));",
    "CREATE VIEW `table$13`\nAS\nSELECT `customer_1`.`lastUpdated`, `customer_1`.`customerid`, `customer_1`.`name`, (CASE WHEN (`customer_1`.`timestamp` < `orders_1`.`time`) THEN `orders_1`.`time` ELSE `customer_1`.`timestamp` END) AS `__timestamp`\nFROM `customer_1`\nLEFT JOIN `orders_1` ON (`customer_1`.`customerid` = `orders_1`.`customerid`)\nWHERE ((`orders_1`.`id` IS NULL) AND (`orders_1`.`time` IS NULL));",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `customer_2`\n(SELECT *\nFROM `table$1`)\n;\nINSERT INTO `ordercustomer_1`\n(SELECT *\nFROM `table$2`)\n;\nINSERT INTO `ordercustomerconstant_1`\n(SELECT *\nFROM `table$3`)\n;\nINSERT INTO `ordercustomerleft_1`\n(SELECT *\nFROM `table$4`)\n;\nINSERT INTO `ordercustomerleftexcluded_1`\n(SELECT *\nFROM `table$5`)\n;\nINSERT INTO `ordercustomerrightexcluded_1`\n(SELECT *\nFROM `table$6`)\n;\nINSERT INTO `orders_2`\n(SELECT *\nFROM `table$7`)\n;\nINSERT INTO `product_2`\n(SELECT *\nFROM `table$8`)\n;\nINSERT INTO `ordercustomer_1_1`\n(SELECT *\nFROM `table$9`)\n;\nINSERT INTO `ordercustomerconstant_1_2`\n(SELECT *\nFROM `table$10`)\n;\nINSERT INTO `ordercustomerleft_1_3`\n(SELECT *\nFROM `table$11`)\n;\nINSERT INTO `ordercustomerleftexcluded_1_4`\n(SELECT *\nFROM `table$12`)\n;\nINSERT INTO `ordercustomerrightexcluded_1_5`\n(SELECT *\nFROM `table$13`)\n;\nEND;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "kafka",
    "filesystem"
  ],
  "formats" : [
    "flexible-json",
    "json"
  ]
}
>>>kafka.json
{
  "topics" : [
    {
      "name" : "ordercustomer_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "ordercustomerconstant_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "ordercustomerleft_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "ordercustomerleftexcluded_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "ordercustomerrightexcluded_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    }
  ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "customer_2",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"email\" TEXT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"lastUpdated\" BIGINT NOT NULL",
        "\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\"",
        "\"lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS customer_2 (\"customerid\" BIGINT NOT NULL,\"email\" TEXT NOT NULL,\"name\" TEXT NOT NULL,\"lastUpdated\" BIGINT NOT NULL,\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"customerid\",\"lastUpdated\"));"
    },
    {
      "name" : "ordercustomer_1",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"_lastUpdated\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"_time\"",
        "\"_lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomer_1 (\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"customerid\" BIGINT NOT NULL,\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"_lastUpdated\" BIGINT NOT NULL , PRIMARY KEY (\"id\",\"_time\",\"_lastUpdated\"));"
    },
    {
      "name" : "ordercustomerconstant_1",
      "columns" : [
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"_lastUpdated\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\"",
        "\"_lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerconstant_1 (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"customerid\" BIGINT NOT NULL,\"_lastUpdated\" BIGINT NOT NULL , PRIMARY KEY (\"id\",\"time\",\"_lastUpdated\"));"
    },
    {
      "name" : "ordercustomerleft_1",
      "columns" : [
        "\"cid\" BIGINT NOT NULL",
        "\"ctime\" BIGINT NOT NULL",
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT ",
        "\"customerid\" BIGINT NOT NULL",
        "\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE "
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"_time\"",
        "\"ctime\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerleft_1 (\"cid\" BIGINT NOT NULL,\"ctime\" BIGINT NOT NULL,\"id\" BIGINT NOT NULL,\"name\" TEXT ,\"customerid\" BIGINT NOT NULL,\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE  , PRIMARY KEY (\"id\",\"_time\",\"ctime\"));"
    },
    {
      "name" : "ordercustomerleftexcluded_1",
      "columns" : [
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerleftexcluded_1 (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "name" : "ordercustomerrightexcluded_1",
      "columns" : [
        "\"lastUpdated\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE "
      ],
      "primaryKeys" : [
        "\"customerid\"",
        "\"lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerrightexcluded_1 (\"lastUpdated\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE  , PRIMARY KEY (\"customerid\",\"lastUpdated\"));"
    },
    {
      "name" : "orders_2",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_2 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "name" : "product_2",
      "columns" : [
        "\"productid\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"description\" TEXT NOT NULL",
        "\"category\" TEXT NOT NULL",
        "\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"productid\"",
        "\"name\"",
        "\"description\"",
        "\"category\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS product_2 (\"productid\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"description\" TEXT NOT NULL,\"category\" TEXT NOT NULL,\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"productid\",\"name\",\"description\",\"category\"));"
    },
    {
      "indexName" : "customer_2_hash_c3",
      "tableName" : "customer_2",
      "columns" : [
        "lastUpdated"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS customer_2_hash_c3 ON customer_2 USING hash (\"lastUpdated\");"
    },
    {
      "indexName" : "ordercustomerconstant_1_hash_c0",
      "tableName" : "ordercustomerconstant_1",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS ordercustomerconstant_1_hash_c0 ON ordercustomerconstant_1 USING hash (\"time\");"
    },
    {
      "indexName" : "ordercustomerleft_1_btree_c1c2",
      "tableName" : "ordercustomerleft_1",
      "columns" : [
        "ctime",
        "id"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS ordercustomerleft_1_btree_c1c2 ON ordercustomerleft_1 USING btree (\"ctime\",\"id\");"
    },
    {
      "indexName" : "ordercustomerleftexcluded_1_hash_c0",
      "tableName" : "ordercustomerleftexcluded_1",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS ordercustomerleftexcluded_1_hash_c0 ON ordercustomerleftexcluded_1 USING hash (\"time\");"
    },
    {
      "indexName" : "ordercustomerrightexcluded_1_hash_c0",
      "tableName" : "ordercustomerrightexcluded_1",
      "columns" : [
        "lastUpdated"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS ordercustomerrightexcluded_1_hash_c0 ON ordercustomerrightexcluded_1 USING hash (\"lastUpdated\");"
    },
    {
      "indexName" : "orders_2_hash_c2",
      "tableName" : "orders_2",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_hash_c2 ON orders_2 USING hash (\"time\");"
    },
    {
      "indexName" : "product_2_btree_c0c2",
      "tableName" : "product_2",
      "columns" : [
        "productid",
        "description"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c0c2 ON product_2 USING btree (\"productid\",\"description\");"
    },
    {
      "indexName" : "product_2_btree_c1c2c3",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "description",
        "category"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c2c3 ON product_2 USING btree (\"name\",\"description\",\"category\");"
    },
    {
      "indexName" : "product_2_btree_c1c3c0",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c3c0 ON product_2 USING btree (\"name\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c2c3c0",
      "tableName" : "product_2",
      "columns" : [
        "description",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c2c3c0 ON product_2 USING btree (\"description\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c3c0",
      "tableName" : "product_2",
      "columns" : [
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c3c0 ON product_2 USING btree (\"category\",\"productid\");"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Customer",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nORDER BY \"timestamp\" DESC NULLS LAST, \"customerid\", \"lastUpdated\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"customerid\", \"email\", \"name\", \"lastUpdated\", \"timestamp\", 1 AS \"__pk\"\nFROM \"customer_2\"\nWHERE \"customerid\" = $1 AND \"lastUpdated\" = $2\nORDER BY \"timestamp\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nWHERE \"lastUpdated\" = $1\nORDER BY \"timestamp\" DESC NULLS LAST, \"customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nWHERE \"customerid\" = $1\nORDER BY \"timestamp\" DESC NULLS LAST, \"lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomer",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer_1\"\nORDER BY \"_time\" DESC NULLS LAST, \"id\", \"_lastUpdated\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer_1\"\nWHERE \"id\" = $1\nORDER BY \"_time\" DESC NULLS LAST, \"_lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerConstant",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerconstant_1\"\nWHERE \"time\" = $1 AND \"id\" = $2\nORDER BY \"time\" DESC NULLS LAST, \"_lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerconstant_1\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\", \"_lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerconstant_1\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"_lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerconstant_1\"\nORDER BY \"time\" DESC NULLS LAST, \"id\", \"_lastUpdated\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerLeft",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleft_1\"\nORDER BY \"__timestamp\" DESC NULLS LAST, \"id\", \"_time\", \"ctime\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleft_1\"\nWHERE \"id\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_time\", \"ctime\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "ctime"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleft_1\"\nWHERE \"ctime\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"id\", \"_time\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "ctime"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "ctime"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleft_1\"\nWHERE \"ctime\" = $1 AND \"id\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_time\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "ctime"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerLeftExcluded",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleftexcluded_1\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleftexcluded_1\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleftexcluded_1\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"time\", \"id\", \"customerid\", 1 AS \"__pk\"\nFROM \"ordercustomerleftexcluded_1\"\nWHERE \"time\" = $1 AND \"id\" = $2\nORDER BY \"time\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerRight",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "ouuid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT COALESCE(\"orders_2\".\"id\", 0) AS \"ouuid\", COALESCE(\"orders_2\".\"time\", PROCTIME()) AS \"otime\", \"orders_2\".\"id\", \"customer_2\".\"name\", \"orders_2\".\"customerid\", \"customer_2\".\"customerid\" AS \"_customerid0\", \"customer_2\".\"lastUpdated\" AS \"_lastUpdated\", \"orders_2\".\"time\" AS \"_time\", CASE WHEN \"customer_2\".\"timestamp\" < \"orders_2\".\"time\" THEN \"orders_2\".\"time\" ELSE \"customer_2\".\"timestamp\" END AS \"__timestamp\"\n  FROM \"customer_2\"\n   LEFT JOIN \"orders_2\" ON \"customer_2\".\"customerid\" = \"orders_2\".\"customerid\") AS \"t\"\nWHERE \"t\".\"ouuid\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid0\", \"_lastUpdated\", \"_time\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "ouuid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT COALESCE(\"orders_2\".\"id\", 0) AS \"ouuid\", COALESCE(\"orders_2\".\"time\", PROCTIME()) AS \"otime\", \"orders_2\".\"id\", \"customer_2\".\"name\", \"orders_2\".\"customerid\", \"customer_2\".\"customerid\" AS \"_customerid0\", \"customer_2\".\"lastUpdated\" AS \"_lastUpdated\", \"orders_2\".\"time\" AS \"_time\", CASE WHEN \"customer_2\".\"timestamp\" < \"orders_2\".\"time\" THEN \"orders_2\".\"time\" ELSE \"customer_2\".\"timestamp\" END AS \"__timestamp\"\nFROM \"customer_2\"\n LEFT JOIN \"orders_2\" ON \"customer_2\".\"customerid\" = \"orders_2\".\"customerid\"\nORDER BY CASE WHEN \"customer_2\".\"timestamp\" < \"orders_2\".\"time\" THEN \"orders_2\".\"time\" ELSE \"customer_2\".\"timestamp\" END DESC NULLS LAST, \"customer_2\".\"customerid\", \"customer_2\".\"lastUpdated\", COALESCE(\"orders_2\".\"id\", 0), \"orders_2\".\"time\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerRightExcluded",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerrightexcluded_1\"\nORDER BY \"__timestamp\" DESC NULLS LAST, \"customerid\", \"lastUpdated\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"lastUpdated\", \"customerid\", \"name\", \"__timestamp\", 1 AS \"__pk\"\nFROM \"ordercustomerrightexcluded_1\"\nWHERE \"lastUpdated\" = $1 AND \"customerid\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerrightexcluded_1\"\nWHERE \"lastUpdated\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerrightexcluded_1\"\nWHERE \"customerid\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"id\", \"customerid\", \"time\", \"entries\", 1 AS \"__pk\"\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Product",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"productid\", \"name\", \"description\", \"category\", \"_ingest_time\", 1 AS \"__pk\"\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3 AND \"category\" = $4\nORDER BY \"_ingest_time\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"category\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\", \"category\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [
      {
        "fieldName" : "OrderCustomer",
        "topic" : "ordercustomer_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "OrderCustomerConstant",
        "topic" : "ordercustomerconstant_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "OrderCustomerLeft",
        "topic" : "ordercustomerleft_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "OrderCustomerLeftExcluded",
        "topic" : "ordercustomerleftexcluded_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "OrderCustomerRightExcluded",
        "topic" : "ordercustomerrightexcluded_1",
        "sinkConfig" : { },
        "filters" : { }
      }
    ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "type Customer {\n  customerid: Float!\n  email: String!\n  name: String!\n  lastUpdated: Float!\n  timestamp: DateTime!\n}\n\n\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype OrderCustomer {\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomerConstant {\n  time: DateTime!\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomerConstantResult {\n  time: DateTime!\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomerLeft {\n  cid: Float!\n  ctime: Float!\n  id: Float!\n  name: String\n  customerid: Float!\n}\n\ntype OrderCustomerLeftExcluded {\n  time: DateTime!\n  id: Float!\n  customerid: Float!\n}\n\ntype OrderCustomerLeftExcludedResult {\n  time: DateTime!\n  id: Float!\n  customerid: Float!\n}\n\ntype OrderCustomerLeftResult {\n  cid: Float!\n  ctime: Float!\n  id: Float!\n  name: String\n  customerid: Float!\n}\n\ntype OrderCustomerResult {\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomerRight {\n  ouuid: Float!\n  otime: DateTime!\n  id: Float\n  name: String!\n  customerid: Float\n}\n\ntype OrderCustomerRightExcluded {\n  lastUpdated: Float!\n  customerid: Float!\n  name: String!\n}\n\ntype OrderCustomerRightExcludedResult {\n  lastUpdated: Float!\n  customerid: Float!\n  name: String!\n}\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype Product {\n  productid: Float!\n  name: String!\n  description: String!\n  category: String!\n}\n\ntype Query {\n  Customer(customerid: Float, lastUpdated: Float, limit: Int = 10, offset: Int = 0): [Customer!]\n  OrderCustomer(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomer!]\n  OrderCustomerConstant(time: DateTime, id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerConstant!]\n  OrderCustomerLeft(ctime: Float, id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerLeft!]\n  OrderCustomerLeftExcluded(time: DateTime, id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerLeftExcluded!]\n  OrderCustomerRight(ouuid: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerRight!]\n  OrderCustomerRightExcluded(lastUpdated: Float, customerid: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerRightExcluded!]\n  Orders(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [Orders!]\n  Product(productid: Float, name: String, description: String, category: String, limit: Int = 10, offset: Int = 0): [Product!]\n}\n\ntype Subscription {\n  OrderCustomer: OrderCustomerResult!\n  OrderCustomerConstant: OrderCustomerConstantResult!\n  OrderCustomerLeft: OrderCustomerLeftResult!\n  OrderCustomerLeftExcluded: OrderCustomerLeftExcludedResult!\n  OrderCustomerRightExcluded: OrderCustomerRightExcludedResult!\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n"
    }
  }
}
