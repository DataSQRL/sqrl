>>>pipeline_explain.txt
=== _applications
ID:     _applications_2
Type:   stream
Stage:  streams
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[_applications_1]], hints=[[[WatermarkHint inheritPath:[] options:[6]]]]) hints[WatermarkHint options:[6]]

=== MyIcebergTable
ID:     myicebergtable_1
Type:   stream
Stage:  streams
Inputs: _applications_2
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[_applications_2]])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY TABLE `_applications_1` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED,\n  WATERMARK FOR `updated_at` AS (`updated_at` - INTERVAL '0.001' SECOND)\n) WITH (\n  'format' = 'flexible-json',\n  'path' = '/data/applications.jsonl',\n  'source.monitor-interval' = '1',\n  'connector' = 'filesystem'\n);",
    "CREATE TEMPORARY TABLE `_applications_2` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED\n) WITH (\n  'io-impl' = 'org.apache.iceberg.aws.s3.S3FileIO',\n  'connector' = 'jdbc-sqrl',\n  'catalog-impl' = 'org.apache.iceberg.aws.glue.GlueCatalog',\n  'catalog-table' = '${sqrl:table}',\n  'table-name' = '_applications_2',\n  'warehouse' = 's3://daniel-iceberg-table-test',\n  'catalog-name' = 'mydatabase'\n);",
    "CREATE TEMPORARY TABLE `myicebergtable_1` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED\n) WITH (\n  'io-impl' = 'org.apache.iceberg.aws.s3.S3FileIO',\n  'connector' = 'jdbc-sqrl',\n  'catalog-impl' = 'org.apache.iceberg.aws.glue.GlueCatalog',\n  'catalog-table' = '${sqrl:table}',\n  'table-name' = 'myicebergtable_1',\n  'warehouse' = 's3://daniel-iceberg-table-test',\n  'catalog-name' = 'mydatabase'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM `_applications_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT *\nFROM `_applications_1`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `_applications_2`\n(SELECT *\nFROM `table$1`)\n;\nINSERT INTO `myicebergtable_1`\n(SELECT *\nFROM `table$2`)\n;\nEND;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "filesystem"
  ],
  "formats" : [
    "flexible-json"
  ]
}
>>>iceberg.json
{
  "plan" : {
    "ddl" : [
      {
        "sql" : "CREATE ICEBERG TABLE \"_applications_2\" EXTERNAL_VOLUME = 'iceberg_storage_vol' CATALOG = 'MyCatalog'"
      },
      {
        "sql" : "CREATE ICEBERG TABLE \"myicebergtable_1\" EXTERNAL_VOLUME = 'iceberg_storage_vol' CATALOG = 'MyCatalog'"
      }
    ],
    "queries" : [
      {
        "sql" : "CREATE OR REPLACE VIEW IF NOT EXISTS \"query1\"(\"id\", \"customer_id\", \"loan_type_id\", \"amount\", \"duration\", \"application_date\", \"updated_at\")\nCOMMENT ''\nAS SELECT *\nFROM \"_applications_2\"\nORDER BY \"updated_at\" DESC NULLS LAST, \"id\""
      },
      {
        "sql" : "CREATE OR REPLACE VIEW IF NOT EXISTS \"query2\"(\"id\", \"customer_id\", \"loan_type_id\", \"amount\", \"duration\", \"application_date\", \"updated_at\")\nCOMMENT ''\nAS SELECT *\nFROM \"myicebergtable_1\"\nORDER BY \"updated_at\" DESC NULLS LAST, \"id\""
      },
      {
        "sql" : "CREATE OR REPLACE VIEW IF NOT EXISTS \"query3\"(\"id\", \"customer_id\", \"loan_type_id\", \"amount\", \"duration\", \"application_date\", \"updated_at\")\nCOMMENT ''\nAS SELECT *\nFROM \"myicebergtable_1\"\nWHERE \"customer_id\" = ?\nORDER BY \"updated_at\" DESC NULLS LAST, \"id\""
      }
    ]
  }
}
