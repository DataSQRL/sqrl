>>>pipeline_explain.txt
=== applications
ID:     applications_2
Type:   stream
Stage:  flink
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[applications_1]])

=== MyIcebergTable
ID:     myicebergtable_1
Type:   stream
Stage:  flink
Inputs: applications_2
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[applications_2]])

=== MySnowflakeTable
ID:     mysnowflaketable_1
Type:   stream
Stage:  iceberg
Inputs: myicebergtable_1
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[myicebergtable_1]])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY TABLE `applications_1` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED,\n  WATERMARK FOR `updated_at` AS `updated_at` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'flexible-json',\n  'path' = '${DATA_PATH}/applications.jsonl',\n  'source.monitor-interval' = '1',\n  'connector' = 'filesystem'\n);",
    "CREATE TEMPORARY TABLE `applications_2` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED\n)\nPARTITIONED BY (`id`)\nWITH (\n  'io-impl' = 'org.apache.iceberg.aws.s3.S3FileIO',\n  'connector' = 'iceberg',\n  'catalog-impl' = 'org.apache.iceberg.aws.glue.GlueCatalog',\n  'catalog-database' = 'mydatabase',\n  'catalog-table' = 'applications_2',\n  'warehouse' = 's3://daniel-iceberg-table-test',\n  'catalog-name' = 'mydatabase'\n);",
    "CREATE TEMPORARY TABLE `myicebergtable_1` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED\n)\nPARTITIONED BY (`id`)\nWITH (\n  'io-impl' = 'org.apache.iceberg.aws.s3.S3FileIO',\n  'connector' = 'iceberg',\n  'catalog-impl' = 'org.apache.iceberg.aws.glue.GlueCatalog',\n  'catalog-database' = 'mydatabase',\n  'catalog-table' = 'myicebergtable_1',\n  'warehouse' = 's3://daniel-iceberg-table-test',\n  'catalog-name' = 'mydatabase'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM `applications_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT *\nFROM `applications_1`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `applications_2`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `myicebergtable_1`\n (SELECT *\n  FROM `table$2`)\n ;\n END;"
  ],
  "connectors" : [
    "iceberg",
    "filesystem"
  ],
  "formats" : [
    "flexible-json"
  ]
}
>>>iceberg.json
{
  "ddl" : [
    {
      "sql" : "CREATE OR REPLACE ICEBERG TABLE applications_2 EXTERNAL_VOLUME = 'MyNewVolume' CATALOG = 'MyCatalog' CATALOG_TABLE_NAME = 'applications_2'"
    },
    {
      "sql" : "CREATE OR REPLACE ICEBERG TABLE myicebergtable_1 EXTERNAL_VOLUME = 'MyNewVolume' CATALOG = 'MyCatalog' CATALOG_TABLE_NAME = 'myicebergtable_1'"
    }
  ],
  "engines" : {
    "snowflake" : {
      "ddl" : [
        {
          "sql" : "CREATE OR REPLACE ICEBERG TABLE applications_2 EXTERNAL_VOLUME = 'MyNewVolume' CATALOG = 'MyCatalog' CATALOG_TABLE_NAME = 'applications_2'"
        },
        {
          "sql" : "CREATE OR REPLACE ICEBERG TABLE myicebergtable_1 EXTERNAL_VOLUME = 'MyNewVolume' CATALOG = 'MyCatalog' CATALOG_TABLE_NAME = 'myicebergtable_1'"
        }
      ],
      "views" : [
        {
          "name" : "MyIcebergTable",
          "sql" : "CREATE OR REPLACE VIEW MyIcebergTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nWHERE updated_at = ?\nORDER BY updated_at DESC NULLS LAST, id"
        },
        {
          "name" : "MyIcebergTable",
          "sql" : "CREATE OR REPLACE VIEW MyIcebergTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nORDER BY updated_at DESC NULLS LAST, id"
        },
        {
          "name" : "MyIcebergTable",
          "sql" : "CREATE OR REPLACE VIEW MyIcebergTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nWHERE id = ? AND updated_at = ?\nORDER BY updated_at DESC NULLS LAST"
        },
        {
          "name" : "MyIcebergTable",
          "sql" : "CREATE OR REPLACE VIEW MyIcebergTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nWHERE id = ?\nORDER BY updated_at DESC NULLS LAST"
        },
        {
          "name" : "applications",
          "sql" : "CREATE OR REPLACE VIEW applications(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM applications_2\nWHERE updated_at = ?\nORDER BY updated_at DESC NULLS LAST, id"
        },
        {
          "name" : "applications",
          "sql" : "CREATE OR REPLACE VIEW applications(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM applications_2\nORDER BY updated_at DESC NULLS LAST, id"
        },
        {
          "name" : "applications",
          "sql" : "CREATE OR REPLACE VIEW applications(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM applications_2\nWHERE id = ? AND updated_at = ?\nORDER BY updated_at DESC NULLS LAST"
        },
        {
          "name" : "applications",
          "sql" : "CREATE OR REPLACE VIEW applications(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM applications_2\nWHERE id = ?\nORDER BY updated_at DESC NULLS LAST"
        },
        {
          "name" : "SnowflakeQuery",
          "sql" : "CREATE OR REPLACE VIEW SnowflakeQuery(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nWHERE customer_id = ?\nORDER BY updated_at DESC NULLS LAST, id"
        },
        {
          "name" : "MySnowflakeTable",
          "sql" : "CREATE OR REPLACE VIEW MySnowflakeTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nORDER BY updated_at DESC NULLS LAST, id"
        },
        {
          "name" : "MySnowflakeTable",
          "sql" : "CREATE OR REPLACE VIEW MySnowflakeTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nWHERE id = ? AND updated_at = ?\nORDER BY updated_at DESC NULLS LAST"
        },
        {
          "name" : "MySnowflakeTable",
          "sql" : "CREATE OR REPLACE VIEW MySnowflakeTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nWHERE id = ?\nORDER BY updated_at DESC NULLS LAST"
        },
        {
          "name" : "MySnowflakeTable",
          "sql" : "CREATE OR REPLACE VIEW MySnowflakeTable(id, customer_id, loan_type_id, amount, duration, application_date, updated_at)\nAS SELECT *\nFROM myicebergtable_1\nWHERE updated_at = ?\nORDER BY updated_at DESC NULLS LAST, id"
        }
      ]
    }
  }
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "applications",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "updated_at"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM applications_2\nWHERE updated_at = ?\nORDER BY updated_at DESC NULLS LAST, id",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "updated_at"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM applications_2\nORDER BY updated_at DESC NULLS LAST, id",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "updated_at"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM applications_2\nWHERE id = ? AND updated_at = ?\nORDER BY updated_at DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "updated_at"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM applications_2\nWHERE id = ?\nORDER BY updated_at DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "MyIcebergTable",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "updated_at"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nWHERE updated_at = ?\nORDER BY updated_at DESC NULLS LAST, id",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "updated_at"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nORDER BY updated_at DESC NULLS LAST, id",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "updated_at"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nWHERE id = ? AND updated_at = ?\nORDER BY updated_at DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "updated_at"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nWHERE id = ?\nORDER BY updated_at DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "MySnowflakeTable",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nORDER BY updated_at DESC NULLS LAST, id",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "updated_at"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nWHERE id = ? AND updated_at = ?\nORDER BY updated_at DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "updated_at"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nWHERE id = ?\nORDER BY updated_at DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "updated_at"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedSnowflakeDbQuery",
              "type" : "PagedSnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nWHERE updated_at = ?\nORDER BY updated_at DESC NULLS LAST, id",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "updated_at"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "SnowflakeQuery",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerId"
              }
            ],
            "query" : {
              "type" : "SnowflakeDbQuery",
              "type" : "SnowflakeDbQuery",
              "sql" : "SELECT *\nFROM myicebergtable_1\nWHERE customer_id = ?\nORDER BY updated_at DESC NULLS LAST, id",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerId"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype MyIcebergTable {\n  id: Float!\n  customer_id: Float!\n  loan_type_id: Float!\n  amount: Float!\n  duration: Float!\n  application_date: DateTime!\n  updated_at: DateTime!\n}\n\ntype MySnowflakeTable {\n  id: Float!\n  customer_id: Float!\n  loan_type_id: Float!\n  amount: Float!\n  duration: Float!\n  application_date: DateTime!\n  updated_at: DateTime!\n}\n\ntype Query {\n  applications(id: Float, updated_at: DateTime, limit: Int = 10, offset: Int = 0): [applications!]\n  MyIcebergTable(id: Float, updated_at: DateTime, limit: Int = 10, offset: Int = 0): [MyIcebergTable!]\n  MySnowflakeTable(id: Float, updated_at: DateTime, limit: Int = 10, offset: Int = 0): [MySnowflakeTable!]\n  SnowflakeQuery(customerId: Float!): [SnowflakeQuery!]\n}\n\ntype SnowflakeQuery {\n  id: Float!\n  customer_id: Float!\n  loan_type_id: Float!\n  amount: Float!\n  duration: Float!\n  application_date: DateTime!\n  updated_at: DateTime!\n}\n\ntype applications {\n  id: Float!\n  customer_id: Float!\n  loan_type_id: Float!\n  amount: Float!\n  duration: Float!\n  application_date: DateTime!\n  updated_at: DateTime!\n}\n"
    }
  }
}
