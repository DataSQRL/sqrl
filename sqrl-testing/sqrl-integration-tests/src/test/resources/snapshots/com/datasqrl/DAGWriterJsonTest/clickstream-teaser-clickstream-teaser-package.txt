>>>pipeline_explain.json
[ {
  "id" : "Query.Recommendation-1",
  "name" : "Query.Recommendation-1",
  "type" : "query",
  "stage" : "postgres",
  "inputs" : [ "recommendation_1" ],
  "plan" : "LogicalFilter(condition=[=($0, ?0)])\n  LogicalTableScan(table=[[recommendation_1]])\n",
  "sql" : "SELECT *\nFROM `recommendation_1`\nWHERE (`url` = ?)"
}, {
  "id" : "Query.Trending-2",
  "name" : "Query.Trending-2",
  "type" : "query",
  "stage" : "postgres",
  "inputs" : [ "trending_1" ],
  "plan" : "LogicalTableScan(table=[[trending_1]])\n",
  "sql" : "SELECT *\nFROM `trending_1`"
}, {
  "id" : "click_1",
  "name" : "clickstream-local.click",
  "type" : "import",
  "stage" : "flink",
  "inputs" : [ ]
}, {
  "id" : "click_2",
  "name" : "Click",
  "type" : "stream",
  "stage" : "flink",
  "inputs" : [ "click_1" ],
  "plan" : "LogicalTableScan(table=[[click_1]])\n",
  "primary_key" : [ "url", "userid", "timestamp" ],
  "timestamp" : "timestamp",
  "schema" : [ {
    "name" : "url",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "timestamp",
    "type" : "TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL"
  }, {
    "name" : "userid",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  } ],
  "post_processors" : [ ]
}, {
  "id" : "recommendation_1",
  "name" : "Recommendation",
  "type" : "state",
  "stage" : "flink",
  "inputs" : [ "visitafter_1" ],
  "plan" : "LogicalProject(url=[$0], rec=[$1], frequency=[$2], __timestamp=[$3])\n  LogicalAggregate(group=[{0, 1}], frequency=[COUNT()], __timestamp=[MAX($2)])\n    LogicalTableScan(table=[[visitafter_1]])\n",
  "sql" : "SELECT `beforeURL` AS `url`, `afterURL` AS `rec`, COUNT(1) AS `frequency`\nFROM `VisitAfter`\nGROUP BY `url`, `rec`\nORDER BY `url`, `frequency` DESC",
  "primary_key" : [ "url", "rec" ],
  "timestamp" : "__timestamp",
  "schema" : [ {
    "name" : "url",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "rec",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "frequency",
    "type" : "BIGINT NOT NULL"
  }, {
    "name" : "__timestamp",
    "type" : "TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL"
  } ],
  "post_processors" : [ {
    "name" : "sort",
    "description" : "#0: url VARCHAR(2147483647) ASC, #2: frequency BIGINT DESC"
  } ]
}, {
  "id" : "trending_1",
  "name" : "Trending",
  "type" : "state",
  "stage" : "flink",
  "inputs" : [ "click_2" ],
  "plan" : "LogicalProject(url=[$0], total=[$2], _timestamp=[$1])\n  LogicalAggregate(group=[{0, 1}], total=[COUNT()]) hints[SlidingAggregationHint options:[1, 86400000, 1728000]]\n    LogicalTableScan(table=[[click_2]])\n",
  "sql" : "SELECT `url`, COUNT(1) AS `total`\nFROM `Click`\nWHERE (`timestamp` > (NOW() - (INTERVAL 1 DAY)))\nGROUP BY `url`\nORDER BY `total` DESC",
  "primary_key" : [ "url" ],
  "timestamp" : "_timestamp",
  "schema" : [ {
    "name" : "url",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "total",
    "type" : "BIGINT NOT NULL"
  }, {
    "name" : "_timestamp",
    "type" : "TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL"
  } ],
  "post_processors" : [ {
    "name" : "topN",
    "description" : "partition=url limit=1 sort=#2: _timestamp TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last "
  }, {
    "name" : "sort",
    "description" : "#1: total BIGINT DESC"
  } ]
}, {
  "id" : "visitafter_1",
  "name" : "VisitAfter",
  "type" : "stream",
  "stage" : "flink",
  "inputs" : [ "click_2" ],
  "plan" : "LogicalProject(beforeURL=[$0], afterURL=[$3], timestamp=[$4], _userid=[$2], _timestamp0=[$1])\n  LogicalJoin(condition=[AND(=($2, $5), <($1, $4), >=($1, -($4, *(60000:INTERVAL MINUTE, 10))))], joinType=[inner]) hints[IntervalJoin]\n    LogicalTableScan(table=[[click_2]])\n    LogicalTableScan(table=[[click_2]])\n",
  "sql" : "SELECT `b`.`url` AS `beforeURL`, `a`.`url` AS `afterURL`, `a`.`timestamp` AS `timestamp`\nFROM `Click` AS `b`\nINNER JOIN `Click` AS `a` ON (((`b`.`userid` = `a`.`userid`) AND (`b`.`timestamp` < `a`.`timestamp`)) AND (`b`.`timestamp` >= (`a`.`timestamp` - (INTERVAL 10 MINUTE))))",
  "primary_key" : [ "beforeURL", "_userid", "_timestamp0", "afterURL", "timestamp" ],
  "timestamp" : "timestamp",
  "schema" : [ {
    "name" : "beforeURL",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "afterURL",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "timestamp",
    "type" : "TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL"
  }, {
    "name" : "_userid",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "_timestamp0",
    "type" : "TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL"
  } ],
  "post_processors" : [ ]
} ]
