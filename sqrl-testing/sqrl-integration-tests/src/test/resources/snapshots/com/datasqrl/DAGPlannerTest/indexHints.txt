>>>pipeline_explain.txt
=== MyOrdersIndexBtree
ID:     default_catalog.default_database.MyOrdersIndexBtree
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Orders
Annotations:
 - stream-root: _Orders
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3])
  LogicalFilter(condition=[>($0, 10)])
    LogicalTableScan(table=[[default_catalog, default_database, _Orders]])
SQL: CREATE VIEW MyOrdersIndexBtree AS  SELECT * FROM _Orders WHERE id > 10;

=== MyOrdersIndexHash
ID:     default_catalog.default_database.MyOrdersIndexHash
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Orders
Annotations:
 - stream-root: _Orders
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3])
  LogicalFilter(condition=[>($0, 10)])
    LogicalTableScan(table=[[default_catalog, default_database, _Orders]])
SQL: CREATE VIEW MyOrdersIndexHash AS  SELECT * FROM _Orders WHERE id > 10;

=== MyOrdersNoHint
ID:     default_catalog.default_database.MyOrdersNoHint
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Orders
Annotations:
 - stream-root: _Orders
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3])
  LogicalFilter(condition=[>($0, 10)])
    LogicalTableScan(table=[[default_catalog, default_database, _Orders]])
SQL: CREATE VIEW MyOrdersNoHint AS  SELECT * FROM _Orders WHERE id > 10;

=== MyOrdersNoIndex
ID:     default_catalog.default_database.MyOrdersNoIndex
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Orders
Annotations:
 - stream-root: _Orders
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3])
  LogicalFilter(condition=[>($0, 10)])
    LogicalTableScan(table=[[default_catalog, default_database, _Orders]])
SQL: CREATE VIEW MyOrdersNoIndex AS  SELECT * FROM _Orders WHERE id > 10;

=== MyOrdersTwoIndex
ID:     default_catalog.default_database.MyOrdersTwoIndex
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Orders
Annotations:
 - stream-root: _Orders
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3])
  LogicalFilter(condition=[>($0, 10)])
    LogicalTableScan(table=[[default_catalog, default_database, _Orders]])
SQL: CREATE VIEW MyOrdersTwoIndex AS  SELECT * FROM _Orders WHERE id > 10;

=== _Orders
ID:     default_catalog.default_database._Orders
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Orders__base
Annotations:
 - features: DENORMALIZE (feature)
 - stream-root: _Orders
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalWatermarkAssigner(rowtime=[time], watermark=[-($2, 1:INTERVAL SECOND)])
  LogicalTableScan(table=[[default_catalog, default_database, _Orders]])
SQL: CREATE VIEW `_Orders__view`
AS
SELECT `_Orders`.`id`, `_Orders`.`customerid`, `_Orders`.`time`, `_Orders`.`entries`
FROM `default_catalog`.`default_database`.`_Orders` AS `_Orders`
>>>flink-sql-no-functions.sql
CREATE TEMPORARY TABLE `_Orders__schema` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL
) WITH (
  'connector' = 'datagen'
);
CREATE TABLE `_Orders` (
  PRIMARY KEY (`id`, `time`) NOT ENFORCED,
  WATERMARK FOR `time` AS `time` - INTERVAL '0.001' SECOND
) WITH (
  'format' = 'flexible-json',
  'path' = 'file:/mock',
  'source.monitor-interval' = '10 sec',
  'connector' = 'filesystem'
)
LIKE `_Orders__schema`;
CREATE VIEW `MyOrdersIndexBtree`
AS
SELECT *
FROM `_Orders`
WHERE `id` > 10;
CREATE VIEW `MyOrdersIndexHash`
AS
SELECT *
FROM `_Orders`
WHERE `id` > 10;
CREATE VIEW `MyOrdersNoIndex`
AS
SELECT *
FROM `_Orders`
WHERE `id` > 10;
CREATE VIEW `MyOrdersTwoIndex`
AS
SELECT *
FROM `_Orders`
WHERE `id` > 10;
CREATE VIEW `MyOrdersNoHint`
AS
SELECT *
FROM `_Orders`
WHERE `id` > 10;
CREATE TABLE `MyOrdersIndexBtree_1` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` RAW('com.datasqrl.flinkrunner.stdlib.json.FlinkJsonType', 'AERjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIuc3RkbGliLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXJTbmFwc2hvdAAAAAM='),
  PRIMARY KEY (`id`, `time`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'MyOrdersIndexBtree_1',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `MyOrdersIndexHash_2` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` RAW('com.datasqrl.flinkrunner.stdlib.json.FlinkJsonType', 'AERjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIuc3RkbGliLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXJTbmFwc2hvdAAAAAM='),
  PRIMARY KEY (`id`, `time`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'MyOrdersIndexHash_2',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `MyOrdersNoHint_3` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` RAW('com.datasqrl.flinkrunner.stdlib.json.FlinkJsonType', 'AERjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIuc3RkbGliLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXJTbmFwc2hvdAAAAAM='),
  PRIMARY KEY (`id`, `time`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'MyOrdersNoHint_3',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `MyOrdersNoIndex_4` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` RAW('com.datasqrl.flinkrunner.stdlib.json.FlinkJsonType', 'AERjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIuc3RkbGliLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXJTbmFwc2hvdAAAAAM='),
  PRIMARY KEY (`id`, `time`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'MyOrdersNoIndex_4',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `MyOrdersTwoIndex_5` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` RAW('com.datasqrl.flinkrunner.stdlib.json.FlinkJsonType', 'AERjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIuc3RkbGliLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXJTbmFwc2hvdAAAAAM='),
  PRIMARY KEY (`id`, `time`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'MyOrdersTwoIndex_5',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
EXECUTE STATEMENT SET BEGIN
INSERT INTO `default_catalog`.`default_database`.`MyOrdersIndexBtree_1`
(SELECT `id`, `customerid`, `time`, `to_jsonb`(`entries`) AS `entries`
 FROM `default_catalog`.`default_database`.`MyOrdersIndexBtree`)
;
INSERT INTO `default_catalog`.`default_database`.`MyOrdersIndexHash_2`
 (SELECT `id`, `customerid`, `time`, `to_jsonb`(`entries`) AS `entries`
  FROM `default_catalog`.`default_database`.`MyOrdersIndexHash`)
 ;
 INSERT INTO `default_catalog`.`default_database`.`MyOrdersNoHint_3`
  (SELECT `id`, `customerid`, `time`, `to_jsonb`(`entries`) AS `entries`
   FROM `default_catalog`.`default_database`.`MyOrdersNoHint`)
  ;
  INSERT INTO `default_catalog`.`default_database`.`MyOrdersNoIndex_4`
   (SELECT `id`, `customerid`, `time`, `to_jsonb`(`entries`) AS `entries`
    FROM `default_catalog`.`default_database`.`MyOrdersNoIndex`)
   ;
   INSERT INTO `default_catalog`.`default_database`.`MyOrdersTwoIndex_5`
    (SELECT `id`, `customerid`, `time`, `to_jsonb`(`entries`) AS `entries`
     FROM `default_catalog`.`default_database`.`MyOrdersTwoIndex`)
    ;
    END
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "statements" : [
    {
      "name" : "MyOrdersIndexBtree_1",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"MyOrdersIndexBtree_1\" (\"id\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL, \"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"entries\" JSONB  , PRIMARY KEY (\"id\",\"time\"))",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersIndexHash_2",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"MyOrdersIndexHash_2\" (\"id\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL, \"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"entries\" JSONB  , PRIMARY KEY (\"id\",\"time\"))",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersNoHint_3",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"MyOrdersNoHint_3\" (\"id\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL, \"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"entries\" JSONB  , PRIMARY KEY (\"id\",\"time\"))",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersNoIndex_4",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"MyOrdersNoIndex_4\" (\"id\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL, \"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"entries\" JSONB  , PRIMARY KEY (\"id\",\"time\"))",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersTwoIndex_5",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"MyOrdersTwoIndex_5\" (\"id\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL, \"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"entries\" JSONB  , PRIMARY KEY (\"id\",\"time\"))",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersIndexBtree",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"MyOrdersIndexBtree\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"MyOrdersIndexBtree_1\"",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersIndexHash",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"MyOrdersIndexHash\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"MyOrdersIndexHash_2\"",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersNoHint",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"MyOrdersNoHint\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"MyOrdersNoHint_3\"",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersNoIndex",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"MyOrdersNoIndex\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"MyOrdersNoIndex_4\"",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersTwoIndex",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"MyOrdersTwoIndex\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"MyOrdersTwoIndex_5\"",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "MyOrdersIndexBtree_1_btree_c0",
      "type" : "INDEX",
      "sql" : "CREATE INDEX IF NOT EXISTS \"MyOrdersIndexBtree_1_btree_c0\" ON \"MyOrdersIndexBtree_1\" USING btree (\"id\")"
    },
    {
      "name" : "MyOrdersIndexHash_2_hash_c1",
      "type" : "INDEX",
      "sql" : "CREATE INDEX IF NOT EXISTS \"MyOrdersIndexHash_2_hash_c1\" ON \"MyOrdersIndexHash_2\" USING hash (\"customerid\")"
    },
    {
      "name" : "MyOrdersTwoIndex_5_btree_c2c0",
      "type" : "INDEX",
      "sql" : "CREATE INDEX IF NOT EXISTS \"MyOrdersTwoIndex_5_btree_c2c0\" ON \"MyOrdersTwoIndex_5\" USING btree (\"time\",\"id\")"
    },
    {
      "name" : "MyOrdersTwoIndex_5_hash_c1",
      "type" : "INDEX",
      "sql" : "CREATE INDEX IF NOT EXISTS \"MyOrdersTwoIndex_5_hash_c1\" ON \"MyOrdersTwoIndex_5\" USING hash (\"customerid\")"
    }
  ]
}
