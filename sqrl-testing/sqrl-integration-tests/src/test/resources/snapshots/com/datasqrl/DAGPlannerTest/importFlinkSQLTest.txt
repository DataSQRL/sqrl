>>>pipeline_explain.txt
=== Category
ID:     default_catalog.default_database.Category
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database.Category__def
Primary Key: -
Timestamp  : updateTime
Schema:
 - categoryid: INTEGER NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - updateTime: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
Plan:
LogicalProject(categoryid=[$0], name=[$1], description=[$2], updateTime=[$3])
  LogicalWatermarkAssigner(rowtime=[updateTime], watermark=[-($3, 1:INTERVAL SECOND)])
    LogicalProject(categoryid=[$0], name=[$1], description=[$2], updateTime=[NOW()])
      LogicalTableScan(table=[[default_catalog, default_database, Category__def]])
SQL: CREATE VIEW `Category`
AS
SELECT *
FROM `default_catalog`.`default_database`.`Category__def`
=== CategoryDistinct
ID:     default_catalog.default_database.CategoryDistinct
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Category
Annotations:
 - mostRecentDistinct: true
Primary Key: categoryid
Timestamp  : updateTime
Schema:
 - categoryid: INTEGER NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - updateTime: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
Plan:
LogicalProject(categoryid=[$0], name=[$1], description=[$2], updateTime=[$3])
  LogicalFilter(condition=[=($4, 1)])
    LogicalProject(categoryid=[$0], name=[$1], description=[$2], updateTime=[$3], __sqrlinternal_rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $3 DESC NULLS LAST)])
      LogicalTableScan(table=[[default_catalog, default_database, Category]])
SQL: CREATE VIEW `CategoryDistinct`
AS
SELECT `categoryid`, `name`, `description`, `updateTime`
FROM (SELECT `categoryid`, `name`, `description`, `updateTime`, ROW_NUMBER() OVER (PARTITION BY `categoryid` ORDER BY `updateTime` DESC NULLS LAST) AS `__sqrlinternal_rownum`
  FROM `default_catalog`.`default_database`.`Category`) AS `t`
WHERE `__sqrlinternal_rownum` = 1
>>>flink-sql-no-functions.sql
CREATE TABLE `Category__def` (
  `categoryid` INTEGER NOT NULL,
  `name` STRING NOT NULL,
  `description` STRING,
  `updateTime` AS NOW(),
  WATERMARK FOR `updateTime` AS `updateTime` - INTERVAL '0.001' SECOND
) WITH (
  'format' = 'flexible-json',
  'path' = 'file:/mock',
  'source.monitor-interval' = '10 sec',
  'connector' = 'filesystem'
);
CREATE VIEW `Category`
AS
SELECT *
FROM `default_catalog`.`default_database`.`Category__def`;
CREATE VIEW `CategoryDistinct`
AS
SELECT `categoryid`, `name`, `description`, `updateTime`
FROM (SELECT `categoryid`, `name`, `description`, `updateTime`, ROW_NUMBER() OVER (PARTITION BY `categoryid` ORDER BY `updateTime` DESC NULLS LAST) AS `__sqrlinternal_rownum`
  FROM `default_catalog`.`default_database`.`Category`) AS `t`
WHERE `__sqrlinternal_rownum` = 1;
CREATE TABLE `Category_1` (
  `categoryid` INTEGER NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `updateTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `__pk_hash` CHAR(32) CHARACTER SET `UTF-16LE`,
  PRIMARY KEY (`__pk_hash`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_URL}',
  'table-name' = 'Category_1'
);
CREATE TABLE `CategoryDistinct_2` (
  `categoryid` INTEGER NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `updateTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  PRIMARY KEY (`categoryid`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_URL}',
  'table-name' = 'CategoryDistinct_2'
);
EXECUTE STATEMENT SET BEGIN
INSERT INTO `default_catalog`.`default_database`.`Category_1`
(SELECT `categoryid`, `name`, `description`, `updateTime`, HASHCOLUMNS(`categoryid`, `name`, `description`, `updateTime`) AS `__pk_hash`
 FROM `default_catalog`.`default_database`.`Category`)
;
INSERT INTO `default_catalog`.`default_database`.`CategoryDistinct_2`
 (SELECT *
  FROM `default_catalog`.`default_database`.`Category`)
 ;
 END
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "statements" : [
    {
      "name" : "Category_1",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"Category_1\" (\"categoryid\" INTEGER NOT NULL, \"name\" TEXT NOT NULL, \"description\" TEXT , \"updateTime\" TIMESTAMP WITH TIME ZONE NOT NULL, \"__pk_hash\" TEXT  , PRIMARY KEY (\"__pk_hash\"))",
      "fields" : [
        {
          "name" : "categoryid",
          "type" : "INTEGER",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "description",
          "type" : "TEXT",
          "nullable" : true
        },
        {
          "name" : "updateTime",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "__pk_hash",
          "type" : "TEXT",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "CategoryDistinct_2",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"CategoryDistinct_2\" (\"categoryid\" INTEGER NOT NULL, \"name\" TEXT NOT NULL, \"description\" TEXT , \"updateTime\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"categoryid\"))",
      "fields" : [
        {
          "name" : "categoryid",
          "type" : "INTEGER",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "description",
          "type" : "TEXT",
          "nullable" : true
        },
        {
          "name" : "updateTime",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "CategoryDistinct",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"CategoryDistinct\"(\"categoryid\", \"name\", \"description\", \"updateTime\") AS SELECT *\nFROM \"CategoryDistinct_2\"",
      "fields" : [
        {
          "name" : "categoryid",
          "type" : "INTEGER",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "description",
          "type" : "TEXT",
          "nullable" : true
        },
        {
          "name" : "updateTime",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "Category",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"Category\"(\"categoryid\", \"name\", \"description\", \"updateTime\") AS SELECT \"categoryid\", \"name\", \"description\", \"updateTime\"\nFROM \"Category_1\"",
      "fields" : [
        {
          "name" : "categoryid",
          "type" : "INTEGER",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "description",
          "type" : "TEXT",
          "nullable" : true
        },
        {
          "name" : "updateTime",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        }
      ]
    }
  ]
}
>>>vertx.json
{ }
