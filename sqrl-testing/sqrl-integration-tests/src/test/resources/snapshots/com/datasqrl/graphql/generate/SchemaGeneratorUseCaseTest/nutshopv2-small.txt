type Customers {
  id: Float!
  past_purchases(productid: Float, limit: Int = 10, offset: Int = 0): [past_purchases!]
  purchases(limit: Int = 10, offset: Int = 0): [Orders!]
  spending_by_month(month: DateTime, limit: Int = 10, offset: Int = 0): [spending_by_month!]
}

"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

type Orders {
  id: Float!
  customerid: Float!
  time: Float!
  timestamp: DateTime!
  items(limit: Int = 10, offset: Int = 0): [items!]
  totals(limit: Int = 10, offset: Int = 0): [totals!]
}

type Products {
  id: Float!
  name: String!
  sizing: String!
  weight_in_gram: Float!
  type: String!
  category: String!
  usda_id: Float!
  updated: DateTime!
  volume_by_day(day: DateTime, limit: Int = 10, offset: Int = 0): [volume_by_day!]
}

type Query {
  Products(id: Float, limit: Int = 10, offset: Int = 0): [Products!]
  Customers(id: Float, limit: Int = 10, offset: Int = 0): [Customers!]
  Orders(limit: Int = 10, offset: Int = 0): [Orders!]
}

type items {
  productid: Float!
  quantity: Float!
  unit_price: Float!
  discount: Float
  discount0: Float!
  total: Float!
  parent: Orders!
  product(limit: Int = 10, offset: Int = 0): [Products!]
}

type past_purchases {
  productid: Float!
  num_orders: Float!
  total_quantity: Float!
  parent: Customers!
}

type spending_by_month {
  month: DateTime!
  total_spend: Float!
  total_savings: Float!
  parent: Customers!
}

type totals {
  price: Float!
  savings: Float!
  parent: Orders!
}

type volume_by_day {
  day: DateTime!
  quantity: Float!
  total: Float!
  total_weight: Float!
  parent: Products!
}

