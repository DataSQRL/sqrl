>>>pipeline_explain.txt
=== Customer
ID:     customer_2
Type:   stream
Stage:  flink
Primary Key: customerid, lastUpdated
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - lastUpdated: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[customer_1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

=== OrderAgg1
ID:     orderagg1_1
Type:   stream
Stage:  flink
Inputs: orders_2
Primary Key: customer, bucket
Timestamp  : bucket
Schema:
 - customer: BIGINT NOT NULL
 - bucket: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - order_count: BIGINT NOT NULL
Plan:
LogicalAggregate(group=[{0, 1}], order_count=[COUNT()]) hints[TumbleAggregationHint options:[1, FUNCTION, 3, 3600000, 900000]]
  LogicalProject(customer=[$1], bucket=[endOfHour($2, 1:BIGINT, 15:BIGINT)], id=[$0], time=[$2])
    LogicalTableScan(table=[[orders_2]])

=== kafka.OrderAgg1
ID:     orderagg1_1_1
Type:   export
Stage:  flink
Inputs: orderagg1_1

=== OrderAgg2
ID:     orderagg2_1
Type:   state
Stage:  flink
Inputs: orders_2
Primary Key: __pk
Timestamp  : __timestamp
Schema:
 - order_count: BIGINT NOT NULL
 - __pk: INTEGER NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
Plan:
LogicalProject(order_count=[$0], __pk=[1], __timestamp=[$1])
  LogicalAggregate(group=[{}], order_count=[COUNT()], __timestamp=[MAX($2)])
    LogicalTableScan(table=[[orders_2]])

=== OrderAugment
ID:     orderaugment_1
Type:   stream
Stage:  flink
Inputs: ordernow3_1, orders_2
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - order_count: BIGINT NOT NULL
Plan:
LogicalProject(id=[$0], time=[$2], order_count=[$5])
  LogicalJoin(condition=[=($1, $4)], joinType=[inner]) hints[TemporalJoinHint options:[2]]
    LogicalTableScan(table=[[orders_2]])
    LogicalFilter(condition=[=($3, 1)]) hints[DedupHint]
      LogicalProject(customer=[$0], order_count=[$1], _time=[$2], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[ordernow3_1]])

=== kafka.OrderAugment
ID:     orderaugment_1_2
Type:   export
Stage:  flink
Inputs: orderaugment_1

=== OrderNow1
ID:     ordernow1_1
Type:   stream
Stage:  flink
Inputs: orders_2
Primary Key: customer, bucket
Timestamp  : bucket
Schema:
 - customer: BIGINT NOT NULL
 - bucket: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - order_count: BIGINT NOT NULL
Post Processors:
 - now-filter: bucket > now() - 777600000 ms
Plan:
LogicalAggregate(group=[{0, 1}], order_count=[COUNT()]) hints[TumbleAggregationHint options:[1, FUNCTION, 3, 86400000, 0]]
  LogicalProject(customer=[$1], bucket=[endOfDay($2)], id=[$0], time=[$2])
    LogicalTableScan(table=[[orders_2]])

=== kafka.OrderNow1
ID:     ordernow1_1_3
Type:   export
Stage:  flink
Inputs: ordernow1_1

=== OrderNow2
ID:     ordernow2_1
Type:   stream
Stage:  flink
Inputs: orders_2
Primary Key: bucket
Timestamp  : bucket
Schema:
 - bucket: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - order_count: BIGINT NOT NULL
Post Processors:
 - now-filter: bucket > now() - 777600000 ms
Plan:
LogicalAggregate(group=[{0}], order_count=[COUNT()]) hints[TumbleAggregationHint options:[0, FUNCTION, 2, 86400000, 0]]
  LogicalProject(bucket=[endOfDay($2)], id=[$0], time=[$2])
    LogicalTableScan(table=[[orders_2]])

=== kafka.OrderNow2
ID:     ordernow2_1_4
Type:   export
Stage:  flink
Inputs: ordernow2_1

=== OrderNow3
ID:     ordernow3_1
Type:   state
Stage:  flink
Inputs: orders_2
Primary Key: customer
Timestamp  : _time
Schema:
 - customer: BIGINT NOT NULL
 - order_count: BIGINT NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=customer limit=1 sort=#2: _time TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last 
Plan:
LogicalProject(customer=[$0], order_count=[$2], _time=[$1])
  LogicalAggregate(group=[{0, 2}], order_count=[COUNT()]) hints[SlidingAggregationHint options:[2, 691200000, 13824000]]
    LogicalProject(customer=[$1], id=[$0], time=[$2])
      LogicalTableScan(table=[[orders_2]])

=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]], hints=[[[WatermarkHint inheritPath:[] options:[2]]]]) hints[WatermarkHint options:[2]]

=== Ordertime1
ID:     ordertime1_1
Type:   stream
Stage:  flink
Inputs: orders_2
Primary Key: customer, bucket
Timestamp  : bucket
Schema:
 - customer: BIGINT NOT NULL
 - bucket: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - order_count: BIGINT NOT NULL
Plan:
LogicalAggregate(group=[{0, 1}], order_count=[COUNT()]) hints[TumbleAggregationHint options:[1, FUNCTION, 3, 1000, 0]]
  LogicalProject(customer=[$1], bucket=[endOfSecond($2)], id=[$0], time=[$2])
    LogicalTableScan(table=[[orders_2]])

=== kafka.Ordertime1
ID:     ordertime1_1_5
Type:   export
Stage:  flink
Inputs: ordertime1_1

=== Product
ID:     product_2
Type:   stream
Stage:  flink
Primary Key: productid, name, description, category
Timestamp  : _ingest_time
Schema:
 - productid: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - category: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _ingest_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[product_1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

=== RecentTotal
ID:     recenttotal_1
Type:   state
Stage:  flink
Inputs: orders_2
Primary Key: __pk
Timestamp  : _time
Schema:
 - total: DOUBLE NOT NULL
 - quantity: BIGINT NOT NULL
 - __pk: INTEGER NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: limit=1 sort=#3: _time TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last 
Plan:
LogicalProject(total=[$1], quantity=[$2], __pk=[1], _time=[$0])
  LogicalAggregate(group=[{3}], total=[SUM($0)], quantity=[SUM($1)]) hints[SlidingAggregationHint options:[3, 604800000, 12096000]]
    LogicalProject($f0=[*($6, $5)], quantity=[$5], id=[$0], time=[$2], productid=[$4])
      LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{3}])
        LogicalTableScan(table=[[orders_2]])
        LogicalTableFunctionScan(invocation=[Orders.entries($cor0.entries)], rowType=[RecordType(BIGINT productid, BIGINT quantity, DOUBLE unit_price, DOUBLE discount)], elementType=[class [Ljava.lang.Object;])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptostring` AS 'com.datasqrl.time.TimestampToString' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofmonth` AS 'com.datasqrl.time.EndOfMonth' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepochmilli` AS 'com.datasqrl.time.TimestampToEpochMilli' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofweek` AS 'com.datasqrl.time.EndOfWeek' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `parsetimestamp` AS 'com.datasqrl.time.ParseTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochmillitotimestamp` AS 'com.datasqrl.time.EpochMilliToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofminute` AS 'com.datasqrl.time.EndOfMinute' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepoch` AS 'com.datasqrl.time.TimestampToEpoch' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofsecond` AS 'com.datasqrl.time.EndOfSecond' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochtotimestamp` AS 'com.datasqrl.time.EpochToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `atzone` AS 'com.datasqrl.time.AtZone' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofday` AS 'com.datasqrl.time.EndOfDay' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofhour` AS 'com.datasqrl.time.EndOfHour' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofyear` AS 'com.datasqrl.time.EndOfYear' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `customer_1` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` AS EPOCHTOTIMESTAMP(`lastUpdated`),\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED,\n  WATERMARK FOR `timestamp` AS (`timestamp` - INTERVAL '0.001' SECOND)\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED,\n  WATERMARK FOR `time` AS (`time` - INTERVAL '0.001' SECOND)\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `product_1` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED,\n  WATERMARK FOR `_ingest_time` AS (`_ingest_time` - INTERVAL '0.001' SECOND)\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `customer_2` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'customer_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orderagg1_1` (\n  `customer` BIGINT NOT NULL,\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL,\n  PRIMARY KEY (`customer`, `bucket`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orderagg1_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orderagg2_1` (\n  `order_count` BIGINT NOT NULL,\n  `__pk` INTEGER NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE,\n  PRIMARY KEY (`__pk`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orderagg2_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orderaugment_1` (\n  `id` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orderaugment_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordernow1_1` (\n  `customer` BIGINT NOT NULL,\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL,\n  PRIMARY KEY (`customer`, `bucket`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordernow1_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordernow2_1` (\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL,\n  PRIMARY KEY (`bucket`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordernow2_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordernow3_1` (\n  `customer` BIGINT NOT NULL,\n  `order_count` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`customer`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordernow3_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orders_2` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordertime1_1` (\n  `customer` BIGINT NOT NULL,\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL,\n  PRIMARY KEY (`customer`, `bucket`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordertime1_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `product_2` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'product_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `recenttotal_1` (\n  `total` DOUBLE NOT NULL,\n  `quantity` BIGINT NOT NULL,\n  `__pk` INTEGER NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`__pk`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'recenttotal_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orderagg1_1_1` (\n  `customer` BIGINT NOT NULL,\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'orderagg1_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `orderaugment_1_2` (\n  `id` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'orderaugment_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `ordernow1_1_3` (\n  `customer` BIGINT NOT NULL,\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordernow1_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `ordernow2_1_4` (\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordernow2_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE TEMPORARY TABLE `ordertime1_1_5` (\n  `customer` BIGINT NOT NULL,\n  `bucket` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `order_count` BIGINT NOT NULL\n) WITH (\n  'properties.bootstrap.servers' = '${PROPERTIES_BOOTSTRAP_SERVERS}',\n  'properties.auto.offset.reset' = 'earliest',\n  'connector' = 'kafka',\n  'format' = 'flexible-json',\n  'properties.group.id' = '${PROPERTIES_GROUP_ID}',\n  'topic' = 'ordertime1_1',\n  'scan.startup.mode' = 'group-offsets'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM `customer_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT `customerid` AS `customer`, ENDOFHOUR(`time`, 1, 15) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$3`\nAS\nSELECT `customer`, `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$2`), (DESCRIPTOR(`time`)), INTERVAL '3600' SECOND(7), INTERVAL '900' SECOND(6))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$4`\nAS\nSELECT COUNT(*) AS `order_count`, 1 AS `__pk`, MAX(`time`) AS `__timestamp`\nFROM `orders_1`;",
    "CREATE VIEW `table$5`\nAS\nSELECT `customerid` AS `customer`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$6`\nAS\nSELECT *\nFROM (SELECT `customer`, `order_count`, `_time`, (ROW_NUMBER() OVER (PARTITION BY `customer` ORDER BY `_time` DESC NULLS LAST)) AS `_rownum`\nFROM (SELECT `customer`, COUNT(*) AS `order_count`, `window_time` AS `_time`\nFROM TABLE(HOP((TABLE `table$5`), (DESCRIPTOR(`time`)), INTERVAL '13824' SECOND(8), INTERVAL '691200' SECOND(9))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`) AS `t3`) AS `t4`\nWHERE (`_rownum` = 1);",
    "CREATE VIEW `table$7`\nAS\nSELECT `$cor1`.`id`, `$cor1`.`time`, `t5`.`order_count`\nFROM `orders_1` AS `$cor1`\nINNER JOIN `table$6` FOR SYSTEM_TIME AS OF `$cor1`.`time` AS `t5` ON (`$cor1`.`customerid` = `t5`.`customer`);",
    "CREATE VIEW `table$8`\nAS\nSELECT `customerid` AS `customer`, ENDOFDAY(`time`) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$9`\nAS\nSELECT `customer`, `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$8`), (DESCRIPTOR(`time`)), INTERVAL '86400' SECOND(8), INTERVAL '0' SECOND(1))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$10`\nAS\nSELECT ENDOFDAY(`time`) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$11`\nAS\nSELECT `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$10`), (DESCRIPTOR(`time`)), INTERVAL '86400' SECOND(8), INTERVAL '0' SECOND(1))) AS `t0`\nGROUP BY `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$12`\nAS\nSELECT `customerid` AS `customer`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$13`\nAS\nSELECT `customer`, COUNT(*) AS `order_count`, `window_time` AS `_time`\nFROM TABLE(HOP((TABLE `table$12`), (DESCRIPTOR(`time`)), INTERVAL '13824' SECOND(8), INTERVAL '691200' SECOND(9))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$14`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`\nFROM `orders_1`;",
    "CREATE VIEW `table$15`\nAS\nSELECT `customerid` AS `customer`, ENDOFSECOND(`time`) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$16`\nAS\nSELECT `customer`, `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$15`), (DESCRIPTOR(`time`)), INTERVAL '1' SECOND(4), INTERVAL '0' SECOND(1))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$17`\nAS\nSELECT *\nFROM `product_1`;",
    "CREATE VIEW `table$18`\nAS\nSELECT (`t00`.`unit_price` * `t00`.`quantity`) AS `$f0`, `t00`.`quantity`, `$cor0`.`id`, `$cor0`.`time`, `t00`.`productid`\nFROM `orders_1` AS `$cor0`,\nUNNEST(`$cor0`.`entries`) AS `t00` (`productid`, `quantity`, `unit_price`, `discount`);",
    "CREATE VIEW `table$19`\nAS\nSELECT SUM(`$f0`) AS `total`, SUM(`quantity`) AS `quantity`, 1 AS `__pk`, `window_time` AS `_time`\nFROM TABLE(HOP((TABLE `table$18`), (DESCRIPTOR(`time`)), INTERVAL '12096' SECOND(8), INTERVAL '604800' SECOND(9))) AS `t2`\nGROUP BY `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$20`\nAS\nSELECT `customerid` AS `customer`, ENDOFHOUR(`time`, 1, 15) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$21`\nAS\nSELECT `customer`, `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$20`), (DESCRIPTOR(`time`)), INTERVAL '3600' SECOND(7), INTERVAL '900' SECOND(6))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$22`\nAS\nSELECT `customerid` AS `customer`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$23`\nAS\nSELECT *\nFROM (SELECT `customer`, `order_count`, `_time`, (ROW_NUMBER() OVER (PARTITION BY `customer` ORDER BY `_time` DESC NULLS LAST)) AS `_rownum`\nFROM (SELECT `customer`, COUNT(*) AS `order_count`, `window_time` AS `_time`\nFROM TABLE(HOP((TABLE `table$22`), (DESCRIPTOR(`time`)), INTERVAL '13824' SECOND(8), INTERVAL '691200' SECOND(9))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`) AS `t3`) AS `t4`\nWHERE (`_rownum` = 1);",
    "CREATE VIEW `table$24`\nAS\nSELECT `$cor3`.`id`, `$cor3`.`time`, `t5`.`order_count`\nFROM `orders_1` AS `$cor3`\nINNER JOIN `table$23` FOR SYSTEM_TIME AS OF `$cor3`.`time` AS `t5` ON (`$cor3`.`customerid` = `t5`.`customer`);",
    "CREATE VIEW `table$25`\nAS\nSELECT `customerid` AS `customer`, ENDOFDAY(`time`) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$26`\nAS\nSELECT `customer`, `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$25`), (DESCRIPTOR(`time`)), INTERVAL '86400' SECOND(8), INTERVAL '0' SECOND(1))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$27`\nAS\nSELECT ENDOFDAY(`time`) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$28`\nAS\nSELECT `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$27`), (DESCRIPTOR(`time`)), INTERVAL '86400' SECOND(8), INTERVAL '0' SECOND(1))) AS `t0`\nGROUP BY `window_start`, `window_end`, `window_time`;",
    "CREATE VIEW `table$29`\nAS\nSELECT `customerid` AS `customer`, ENDOFSECOND(`time`) AS `bucket`, `id`, `time`\nFROM `orders_1`;",
    "CREATE VIEW `table$30`\nAS\nSELECT `customer`, `window_time` AS `bucket`, COUNT(*) AS `order_count`\nFROM TABLE(TUMBLE((TABLE `table$29`), (DESCRIPTOR(`time`)), INTERVAL '1' SECOND(4), INTERVAL '0' SECOND(1))) AS `t0`\nGROUP BY `customer`, `window_start`, `window_end`, `window_time`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `customer_2`\n(SELECT *\nFROM `table$1`)\n;\nINSERT INTO `orderagg1_1`\n(SELECT *\nFROM `table$3`)\n;\nINSERT INTO `orderagg2_1`\n(SELECT *\nFROM `table$4`)\n;\nINSERT INTO `orderaugment_1`\n(SELECT *\nFROM `table$7`)\n;\nINSERT INTO `ordernow1_1`\n(SELECT *\nFROM `table$9`)\n;\nINSERT INTO `ordernow2_1`\n(SELECT *\nFROM `table$11`)\n;\nINSERT INTO `ordernow3_1`\n(SELECT *\nFROM `table$13`)\n;\nINSERT INTO `orders_2`\n(SELECT *\nFROM `table$14`)\n;\nINSERT INTO `ordertime1_1`\n(SELECT *\nFROM `table$16`)\n;\nINSERT INTO `product_2`\n(SELECT *\nFROM `table$17`)\n;\nINSERT INTO `recenttotal_1`\n(SELECT *\nFROM `table$19`)\n;\nINSERT INTO `orderagg1_1_1`\n(SELECT *\nFROM `table$21`)\n;\nINSERT INTO `orderaugment_1_2`\n(SELECT *\nFROM `table$24`)\n;\nINSERT INTO `ordernow1_1_3`\n(SELECT *\nFROM `table$26`)\n;\nINSERT INTO `ordernow2_1_4`\n(SELECT *\nFROM `table$28`)\n;\nINSERT INTO `ordertime1_1_5`\n(SELECT *\nFROM `table$30`)\n;\nEND;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "kafka",
    "filesystem"
  ],
  "formats" : [
    "flexible-json",
    "json"
  ]
}
>>>kafka.json
{
  "topics" : [
    {
      "name" : "orderagg1_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "orderaugment_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "ordernow1_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "ordernow2_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    },
    {
      "name" : "ordertime1_1",
      "numPartitions" : 1,
      "replicationFactor" : 1,
      "replicasAssignments" : { },
      "config" : { }
    }
  ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "customer_2",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"email\" TEXT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"lastUpdated\" BIGINT NOT NULL",
        "\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\"",
        "\"lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS customer_2 (\"customerid\" BIGINT NOT NULL,\"email\" TEXT NOT NULL,\"name\" TEXT NOT NULL,\"lastUpdated\" BIGINT NOT NULL,\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"customerid\",\"lastUpdated\"));"
    },
    {
      "name" : "orderagg1_1",
      "columns" : [
        "\"customer\" BIGINT NOT NULL",
        "\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"order_count\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"customer\"",
        "\"bucket\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orderagg1_1 (\"customer\" BIGINT NOT NULL,\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL,\"order_count\" BIGINT NOT NULL , PRIMARY KEY (\"customer\",\"bucket\"));"
    },
    {
      "name" : "orderagg2_1",
      "columns" : [
        "\"order_count\" BIGINT NOT NULL",
        "\"__pk\" INTEGER NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE "
      ],
      "primaryKeys" : [
        "\"__pk\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orderagg2_1 (\"order_count\" BIGINT NOT NULL,\"__pk\" INTEGER NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE  , PRIMARY KEY (\"__pk\"));"
    },
    {
      "name" : "orderaugment_1",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"order_count\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orderaugment_1 (\"id\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"order_count\" BIGINT NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "name" : "ordernow1_1",
      "columns" : [
        "\"customer\" BIGINT NOT NULL",
        "\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"order_count\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"customer\"",
        "\"bucket\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordernow1_1 (\"customer\" BIGINT NOT NULL,\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL,\"order_count\" BIGINT NOT NULL , PRIMARY KEY (\"customer\",\"bucket\"));"
    },
    {
      "name" : "ordernow2_1",
      "columns" : [
        "\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"order_count\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"bucket\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordernow2_1 (\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL,\"order_count\" BIGINT NOT NULL , PRIMARY KEY (\"bucket\"));"
    },
    {
      "name" : "ordernow3_1",
      "columns" : [
        "\"customer\" BIGINT NOT NULL",
        "\"order_count\" BIGINT NOT NULL",
        "\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"customer\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordernow3_1 (\"customer\" BIGINT NOT NULL,\"order_count\" BIGINT NOT NULL,\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"customer\"));"
    },
    {
      "name" : "orders_2",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_2 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "name" : "ordertime1_1",
      "columns" : [
        "\"customer\" BIGINT NOT NULL",
        "\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"order_count\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"customer\"",
        "\"bucket\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordertime1_1 (\"customer\" BIGINT NOT NULL,\"bucket\" TIMESTAMP WITH TIME ZONE NOT NULL,\"order_count\" BIGINT NOT NULL , PRIMARY KEY (\"customer\",\"bucket\"));"
    },
    {
      "name" : "product_2",
      "columns" : [
        "\"productid\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"description\" TEXT NOT NULL",
        "\"category\" TEXT NOT NULL",
        "\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"productid\"",
        "\"name\"",
        "\"description\"",
        "\"category\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS product_2 (\"productid\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"description\" TEXT NOT NULL,\"category\" TEXT NOT NULL,\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"productid\",\"name\",\"description\",\"category\"));"
    },
    {
      "name" : "recenttotal_1",
      "columns" : [
        "\"total\" DOUBLE PRECISION NOT NULL",
        "\"quantity\" BIGINT NOT NULL",
        "\"__pk\" INTEGER NOT NULL",
        "\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"__pk\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS recenttotal_1 (\"total\" DOUBLE PRECISION NOT NULL,\"quantity\" BIGINT NOT NULL,\"__pk\" INTEGER NOT NULL,\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"__pk\"));"
    },
    {
      "indexName" : "customer_2_hash_c3",
      "tableName" : "customer_2",
      "columns" : [
        "lastUpdated"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS customer_2_hash_c3 ON customer_2 USING hash (\"lastUpdated\");"
    },
    {
      "indexName" : "orderagg1_1_hash_c1",
      "tableName" : "orderagg1_1",
      "columns" : [
        "bucket"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orderagg1_1_hash_c1 ON orderagg1_1 USING hash (\"bucket\");"
    },
    {
      "indexName" : "orderaugment_1_hash_c1",
      "tableName" : "orderaugment_1",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orderaugment_1_hash_c1 ON orderaugment_1 USING hash (\"time\");"
    },
    {
      "indexName" : "ordernow1_1_btree_c1",
      "tableName" : "ordernow1_1",
      "columns" : [
        "bucket"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS ordernow1_1_btree_c1 ON ordernow1_1 USING btree (\"bucket\");"
    },
    {
      "indexName" : "orders_2_hash_c2",
      "tableName" : "orders_2",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_hash_c2 ON orders_2 USING hash (\"time\");"
    },
    {
      "indexName" : "ordertime1_1_hash_c1",
      "tableName" : "ordertime1_1",
      "columns" : [
        "bucket"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS ordertime1_1_hash_c1 ON ordertime1_1 USING hash (\"bucket\");"
    },
    {
      "indexName" : "product_2_btree_c0c2",
      "tableName" : "product_2",
      "columns" : [
        "productid",
        "description"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c0c2 ON product_2 USING btree (\"productid\",\"description\");"
    },
    {
      "indexName" : "product_2_btree_c1c2c3",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "description",
        "category"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c2c3 ON product_2 USING btree (\"name\",\"description\",\"category\");"
    },
    {
      "indexName" : "product_2_btree_c1c3c0",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c3c0 ON product_2 USING btree (\"name\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c2c3c0",
      "tableName" : "product_2",
      "columns" : [
        "description",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c2c3c0 ON product_2 USING btree (\"description\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c3c0",
      "tableName" : "product_2",
      "columns" : [
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c3c0 ON product_2 USING btree (\"category\",\"productid\");"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Customer",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nORDER BY \"timestamp\" DESC NULLS LAST, \"customerid\", \"lastUpdated\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"customerid\", \"email\", \"name\", \"lastUpdated\", \"timestamp\", 1 AS \"__pk\"\nFROM \"customer_2\"\nWHERE \"customerid\" = $1 AND \"lastUpdated\" = $2\nORDER BY \"timestamp\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nWHERE \"lastUpdated\" = $1\nORDER BY \"timestamp\" DESC NULLS LAST, \"customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nWHERE \"customerid\" = $1\nORDER BY \"timestamp\" DESC NULLS LAST, \"lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderAgg1",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customer"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "bucket"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"customer\", \"bucket\", \"order_count\", 1 AS \"__pk\"\nFROM \"orderagg1_1\"\nWHERE \"customer\" = $1 AND \"bucket\" = $2\nORDER BY \"bucket\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customer"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "bucket"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "bucket"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg1_1\"\nWHERE \"bucket\" = $1\nORDER BY \"bucket\" DESC NULLS LAST, \"customer\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "bucket"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customer"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg1_1\"\nWHERE \"customer\" = $1\nORDER BY \"bucket\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customer"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg1_1\"\nORDER BY \"bucket\" DESC NULLS LAST, \"customer\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderAgg2",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg2_1\"\nORDER BY \"__pk\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderAugment",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderaugment_1\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderaugment_1\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"id\", \"time\", \"order_count\", 1 AS \"__pk\"\nFROM \"orderaugment_1\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderaugment_1\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderNow1",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customer"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "bucket"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"customer\", \"bucket\", \"order_count\", 1 AS \"__pk\"\n  FROM \"ordernow1_1\"\n  WHERE \"customer\" = $1 AND \"bucket\" = $2) AS \"t0\"\nWHERE CURRENT_TIMESTAMP < (\"bucket\" + INTERVAL '777600' SECOND(9))\nORDER BY \"bucket\" DESC NULLS LAST, \"__pk\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customer"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "bucket"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customer"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT *\n  FROM \"ordernow1_1\"\n  WHERE \"customer\" = $1) AS \"t\"\nWHERE CURRENT_TIMESTAMP < (\"bucket\" + INTERVAL '777600' SECOND(9))\nORDER BY \"bucket\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customer"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "bucket"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT *\n  FROM \"ordernow1_1\"\n  WHERE \"bucket\" = $1) AS \"t\"\nWHERE CURRENT_TIMESTAMP < (\"bucket\" + INTERVAL '777600' SECOND(9))\nORDER BY \"bucket\" DESC NULLS LAST, \"customer\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "bucket"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordernow1_1\"\nWHERE CURRENT_TIMESTAMP < (\"bucket\" + INTERVAL '777600' SECOND(9))\nORDER BY \"bucket\" DESC NULLS LAST, \"customer\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderNow2",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordernow2_1\"\nWHERE CURRENT_TIMESTAMP < (\"bucket\" + INTERVAL '777600' SECOND(9))\nORDER BY \"bucket\" DESC NULLS LAST",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "bucket"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"bucket\", \"order_count\", 1 AS \"__pk\"\n  FROM \"ordernow2_1\"\n  WHERE \"bucket\" = $1) AS \"t0\"\nWHERE CURRENT_TIMESTAMP < (\"bucket\" + INTERVAL '777600' SECOND(9))\nORDER BY \"bucket\" DESC NULLS LAST, \"__pk\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "bucket"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderNow3",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordernow3_1\"\nORDER BY \"customer\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customer"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"customer\", \"order_count\", \"_time\", 1 AS \"__pk\"\nFROM \"ordernow3_1\"\nWHERE \"customer\" = $1\nORDER BY 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customer"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"id\", \"customerid\", \"time\", \"entries\", 1 AS \"__pk\"\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Ordertime1",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "bucket"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordertime1_1\"\nWHERE \"bucket\" = $1\nORDER BY \"bucket\" DESC NULLS LAST, \"customer\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "bucket"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customer"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordertime1_1\"\nWHERE \"customer\" = $1\nORDER BY \"bucket\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customer"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordertime1_1\"\nORDER BY \"bucket\" DESC NULLS LAST, \"customer\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customer"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "bucket"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"customer\", \"bucket\", \"order_count\", 1 AS \"__pk\"\nFROM \"ordertime1_1\"\nWHERE \"customer\" = $1 AND \"bucket\" = $2\nORDER BY \"bucket\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customer"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "bucket"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Product",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"productid\", \"name\", \"description\", \"category\", \"_ingest_time\", 1 AS \"__pk\"\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3 AND \"category\" = $4\nORDER BY \"_ingest_time\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\", \"category\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"category\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "RecentTotal",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"recenttotal_1\"\nORDER BY \"__pk\"",
              "parameters" : [ ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [
      {
        "fieldName" : "OrderAgg1",
        "topic" : "orderagg1_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "OrderAugment",
        "topic" : "orderaugment_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "OrderNow1",
        "topic" : "ordernow1_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "OrderNow2",
        "topic" : "ordernow2_1",
        "sinkConfig" : { },
        "filters" : { }
      },
      {
        "fieldName" : "Ordertime1",
        "topic" : "ordertime1_1",
        "sinkConfig" : { },
        "filters" : { }
      }
    ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "type Customer {\n  customerid: Float!\n  email: String!\n  name: String!\n  lastUpdated: Float!\n  timestamp: DateTime!\n}\n\n\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype OrderAgg1 {\n  customer: Float!\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype OrderAgg1Result {\n  customer: Float!\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype OrderAgg2 {\n  order_count: Float!\n}\n\ntype OrderAugment {\n  id: Float!\n  time: DateTime!\n  order_count: Float!\n}\n\ntype OrderAugmentResult {\n  id: Float!\n  time: DateTime!\n  order_count: Float!\n}\n\ntype OrderNow1 {\n  customer: Float!\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype OrderNow1Result {\n  customer: Float!\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype OrderNow2 {\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype OrderNow2Result {\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype OrderNow3 {\n  customer: Float!\n  order_count: Float!\n}\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype Ordertime1 {\n  customer: Float!\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype Ordertime1Result {\n  customer: Float!\n  bucket: DateTime!\n  order_count: Float!\n}\n\ntype Product {\n  productid: Float!\n  name: String!\n  description: String!\n  category: String!\n}\n\ntype Query {\n  Customer(customerid: Float, lastUpdated: Float, limit: Int = 10, offset: Int = 0): [Customer!]\n  OrderAgg1(customer: Float, bucket: DateTime, limit: Int = 10, offset: Int = 0): [OrderAgg1!]\n  OrderAgg2(limit: Int = 10, offset: Int = 0): [OrderAgg2!]\n  OrderAugment(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [OrderAugment!]\n  OrderNow1(customer: Float, bucket: DateTime, limit: Int = 10, offset: Int = 0): [OrderNow1!]\n  OrderNow2(bucket: DateTime, limit: Int = 10, offset: Int = 0): [OrderNow2!]\n  OrderNow3(customer: Float, limit: Int = 10, offset: Int = 0): [OrderNow3!]\n  Orders(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [Orders!]\n  Ordertime1(customer: Float, bucket: DateTime, limit: Int = 10, offset: Int = 0): [Ordertime1!]\n  Product(productid: Float, name: String, description: String, category: String, limit: Int = 10, offset: Int = 0): [Product!]\n  RecentTotal(limit: Int = 10, offset: Int = 0): [RecentTotal!]\n}\n\ntype RecentTotal {\n  total: Float!\n  quantity: Float!\n}\n\ntype Subscription {\n  OrderAgg1: OrderAgg1Result!\n  OrderAugment: OrderAugmentResult!\n  OrderNow1: OrderNow1Result!\n  OrderNow2: OrderNow2Result!\n  Ordertime1: Ordertime1Result!\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n"
    }
  }
}
