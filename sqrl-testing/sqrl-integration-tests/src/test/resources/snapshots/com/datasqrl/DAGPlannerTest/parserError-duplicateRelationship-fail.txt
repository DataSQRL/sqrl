[WARN] The rowtime column 'timestamp' for this table is nullable
in script:parsererror-duplicaterelationship-fail.sqrl [2:1]:
IMPORT ecommerceTs.Customer;
Customer.related := SELECT * FROM Customer other WHERE this.customerid = other.customerid ORDER BY other.`timestamp`;
^
The rowtime column is used to advance the watermark and for time-based operations. When it is null, the watermark does not advance and the record can be ignored for time-based operations, leading to unexpected output and performance issues.

Ensure that the rowtime column always has a value by filtering or setting a default. If that is the case but the compiler doesn't recognize it, explicitly cast it in the table definition.
For example:
`timestamp AS CAST(TO_TIMESTAMP_LTZ(lastUpdated, 0) AS TIMESTAMP_LTZ(3) NOT NULL)`

[WARN] The rowtime column 'timestamp' for this table is nullable
in script:parsererror-duplicaterelationship-fail.sqrl [4:1]:
Customer.related := SELECT * FROM Customer other WHERE this.customerid = other.customerid ORDER BY other.`timestamp`;
-- overloads are not permitted
Customer.related(length INT) := SELECT * FROM Customer other WHERE this.customerid = other.customerid
^
The rowtime column is used to advance the watermark and for time-based operations. When it is null, the watermark does not advance and the record can be ignored for time-based operations, leading to unexpected output and performance issues.

Ensure that the rowtime column always has a value by filtering or setting a default. If that is the case but the compiler doesn't recognize it, explicitly cast it in the table definition.
For example:
`timestamp AS CAST(TO_TIMESTAMP_LTZ(lastUpdated, 0) AS TIMESTAMP_LTZ(3) NOT NULL)`

[FATAL] Function or relationship [Customer.related] already exists in catalog
in script:parsererror-duplicaterelationship-fail.sqrl [4:1]:
Customer.related := SELECT * FROM Customer other WHERE this.customerid = other.customerid ORDER BY other.`timestamp`;
-- overloads are not permitted
Customer.related(length INT) := SELECT * FROM Customer other WHERE this.customerid = other.customerid
^
A function or relationship with that name already exists.
SQRL does not support function overloading, i.e. functions or relationships
with identical names but different parameter signatures.

