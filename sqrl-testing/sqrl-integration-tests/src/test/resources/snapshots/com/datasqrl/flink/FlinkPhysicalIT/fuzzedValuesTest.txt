>>>customerdistinct$19-lp-stream
LogicalProject(customerid$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$0=[$6])
  LogicalProject(customerid$0=[$2], _uuid$0=[$0], _ingest_time$0=[$1], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[$6])
    LogicalProject(_uuid$0=[$0], _ingest_time$0=[$1], customerid$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[customer$i$1]])

>>>customerid$27-lp-stream
LogicalProject(customerid$0=[$0], updatetime$0=[$1])
  LogicalProject(customerid=[$2], updatetime$3=[$6])
    LogicalProject(_uuid$0=[$0], _ingest_time$0=[$1], customerid$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[customer$i$1]])

>>>customerorders$30-lp-stream
LogicalProject(_uuid$0=[$0], id$0=[$1], customerid$0=[$2], time$0=[$3])
  LogicalProject(_uuid$0=[$0], id=[$2], customerid=[$6], time$0=[$4])
    LogicalJoin(condition=[=($3, $6)], joinType=[inner]) hints[TemporalJoinHint options:[4, 1, 0]]
      LogicalTableScan(table=[[orders$i$5]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
      LogicalFilter(condition=[=($2, 1)]) hints[DedupHint]
        LogicalProject(customerid=[$0], updatetime$3=[$1], rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS LAST)])
          LogicalProject(customerid=[$2], updatetime$3=[$6])
            LogicalProject(_uuid$0=[$0], _ingest_time$0=[$1], customerid$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
              LogicalTableScan(table=[[customer$i$1]])

>>>distinctorders$33-lp-stream
LogicalProject(__customerid$0=[$0], id$0=[$1], time$0=[$2])
  LogicalProject(__customerid$0$pk$1=[$6], id=[$2], time$0=[$4])
    LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
      LogicalTableScan(table=[[orders$i$5]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
        LogicalProject(customerid$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[$6], rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
          LogicalProject(customerid$0=[$2], _uuid$0=[$0], _ingest_time$0=[$1], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[$6])
            LogicalProject(_uuid$0=[$0], _ingest_time$0=[$1], customerid$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
              LogicalTableScan(table=[[customer$i$1]])

>>>distinctorderstime$38-lp-stream
LogicalProject(__customerid$0=[$0], id$0=[$1], time$0=[$2])
  LogicalProject(__customerid$0$pk$1=[$6], id=[$2], time=[$4])
    LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
      LogicalTableScan(table=[[orders$i$5]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
        LogicalProject(customerid$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[$6], rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
          LogicalProject(customerid$0=[$2], _uuid$0=[$0], _ingest_time$0=[$1], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[$6])
            LogicalProject(_uuid$0=[$0], _ingest_time$0=[$1], customerid$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$3=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
              LogicalTableScan(table=[[customer$i$1]])

>>>entries$45-lp-stream
LogicalProject(id$0=[$0], _idx$0=[$6], productid$0=[$7], quantity$0=[$8], unit_price$0=[$9], discount$0=[$10], time$0=[$4])
  LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{5}])
    LogicalProject(id$0=[$2], _uuid$0=[$0], _ingest_time$0=[$1], customerid$0=[$3], time$0=[$4], entries$0=[$5])
      LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
        LogicalProject(_uuid$0=[$0], _ingest_time$0=[$1], id$0=[$2], customerid$0=[$3], time$0=[$4], entries$0=[$5], rownum=[ROW_NUMBER() OVER (PARTITION BY $2 ORDER BY $4 DESC NULLS LAST)])
          LogicalTableScan(table=[[orders$i$5]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
    Uncollect
      LogicalProject($f0=[$cor0.entries$0])
        LogicalValues(tuples=[[{ 0 }]])

>>>orders$43-lp-stream
LogicalProject(id$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], customerid$0=[$3], time$0=[$4])
  LogicalProject(id$0=[$2], _uuid$0=[$0], _ingest_time$0=[$1], customerid$0=[$3], time$0=[$4], entries$0=[$5])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(_uuid$0=[$0], _ingest_time$0=[$1], id$0=[$2], customerid$0=[$3], time$0=[$4], entries$0=[$5], rownum=[ROW_NUMBER() OVER (PARTITION BY $2 ORDER BY $4 DESC NULLS LAST)])
        LogicalTableScan(table=[[orders$i$5]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

>>>customerdistinct-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(customerid$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], email$0=[$3], name$0=[$4], lastupdated$0=[$5], updatetime$0=[$6])
    LogicalTableScan(table=[[customerdistinct$19]])

>>>customerid-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(customerid$0=[$0], updatetime$0=[$1])
    LogicalTableScan(table=[[customerid$27]])

>>>customerorders-lp-database
LogicalSort(sort0=[$3], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(_uuid$0=[$0], id$0=[$1], customerid$0=[$2], time$0=[$3])
    LogicalTableScan(table=[[customerorders$30]])

>>>distinctorders-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
  LogicalProject(__customerid$0=[$0], id$0=[$1], time$0=[$2])
    LogicalFilter(condition=[AND(=($3, $4), <=($5, 10))])
      LogicalProject(__customerid$0=[$0], id$0=[$1], time$0=[$2], rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS FIRST)], rank=[RANK() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS FIRST)], denserank=[DENSE_RANK() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS FIRST)])
        LogicalTableScan(table=[[distinctorders$33]])

>>>distinctorderstime-lp-database
LogicalSort(sort0=[$0], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC])
  LogicalProject(__customerid$0=[$0], id$0=[$1], time$0=[$2])
    LogicalFilter(condition=[AND(=($3, $4), <=($5, 10))])
      LogicalProject(__customerid$0=[$0], id$0=[$1], time$0=[$2], rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST, $1 NULLS LAST)], rank=[RANK() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST, $1 NULLS LAST)], denserank=[DENSE_RANK() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST, $1 NULLS LAST)])
        LogicalTableScan(table=[[distinctorderstime$38]])

>>>entries-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
  LogicalProject(id$0=[$0], _idx$0=[$1], productid$0=[$2], quantity$0=[$3], unit_price$0=[$4], discount$0=[$5], time$0=[$6])
    LogicalTableScan(table=[[entries$45]])

>>>orders-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(id$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], customerid$0=[$3], time$0=[$4])
    LogicalTableScan(table=[[orders$43]])

>>>customerdistinct-data
1000101, john.mekker@gmail.com, John Mekker, 1645396849, 2022-02-20T22:40:49-08:00
1000107, emily.ludies@hotmail.com, Emily F. Ludies, 1650493189, 2022-04-20T22:19:49-07:00
1000121, lalelu@hottunes.org, Michelle Dagnes, 1650493449, 2022-04-20T22:24:09-07:00
1000131, hotbear753@yahoo.com, Mark Spielman, 1650494449, 2022-04-20T22:40:49-07:00
1000150, test.user@gmail.com, Test User, 1650800000, 2022-04-24T11:33:20-07:00
1000151, user.with.many.orders@gmail.com, Many Orders User, 1650900000, 2022-04-25T15:20-07:00
1000152, customer.without.orders@gmail.com, Without Orders User, 1650990000, 2022-04-26T16:20-07:00
1000153, customer.with.future.orders@gmail.com, Future Orders User, 1651000000, 2022-04-26T19:06:40-07:00
1000154, customer.with.past.orders@gmail.com, Past Orders User, 1651100000, 2022-04-27T22:53:20-07:00
>>>customerid-data
1000101, 2022-02-20T22:40:49-08:00
1000107, 2022-04-20T22:19:49-07:00
1000121, 2022-04-20T22:24:09-07:00
1000131, 2022-04-20T22:40:49-07:00
1000150, 2022-04-24T11:33:20-07:00
1000151, 2022-04-25T15:20-07:00
1000152, 2022-04-26T16:20-07:00
1000153, 2022-04-26T19:06:40-07:00
1000154, 2022-04-27T22:53:20-07:00
>>>customerorders-data
order-with-decimal, 1000150, 2023-06-19T01:29:39.553-07:00
order-with-future-date, 1000153, 2025-06-19T01:29:39.553-07:00
order-with-max-int-quantity, 1000107, 2023-05-19T02:28:39.553-07:00
order-with-multiple-entries, 1000151, 2023-06-19T02:29:39.553-07:00
order-with-null-discount, 1000107, 2023-05-19T02:28:39.553-07:00
order-with-variety-of-values, 1000150, 2023-06-19T01:29:39.553-07:00
precision-loss-leading-decimal-order, 1000121, 2023-05-19T02:16:39.553-07:00
precision-loss-trailing-decimal-order, 1000121, 2023-05-19T02:16:39.553-07:00
simple-single-item-order, 1000107, 2023-05-19T01:45:39.553-07:00
simple-single-item-order, 1000107, 2023-05-19T01:45:39.553-07:00
simple-two-item-order, 1000101, 2023-05-19T01:29:39.553-07:00
simple-two-item-order, 1000101, 2023-05-19T01:29:39.553-07:00
simple-two-item-order-same-customer, 1000121, 2023-05-19T02:16:39.553-07:00
>>>distinctorders-data
order-with-decimal, 2023-06-19T01:29:39.553-07:00
order-with-future-date, 2025-06-19T01:29:39.553-07:00
order-with-max-int-quantity, 2023-05-19T02:28:39.553-07:00
order-with-multiple-entries, 2023-06-19T02:29:39.553-07:00
order-with-null-discount, 2023-05-19T02:28:39.553-07:00
order-with-variety-of-values, 2023-06-19T01:29:39.553-07:00
precision-loss-leading-decimal-order, 2023-05-19T02:16:39.553-07:00
precision-loss-trailing-decimal-order, 2023-05-19T02:16:39.553-07:00
simple-single-item-order, 2023-05-19T01:45:39.553-07:00
simple-two-item-order, 2023-05-19T01:29:39.553-07:00
simple-two-item-order-same-customer, 2023-05-19T02:16:39.553-07:00
>>>distinctorderstime-data
order-with-decimal, 2023-06-19T01:29:39.553-07:00
order-with-future-date, 2025-06-19T01:29:39.553-07:00
order-with-max-int-quantity, 2023-05-19T02:28:39.553-07:00
order-with-multiple-entries, 2023-06-19T02:29:39.553-07:00
order-with-null-discount, 2023-05-19T02:28:39.553-07:00
order-with-variety-of-values, 2023-06-19T01:29:39.553-07:00
precision-loss-leading-decimal-order, 2023-05-19T02:16:39.553-07:00
precision-loss-trailing-decimal-order, 2023-05-19T02:16:39.553-07:00
simple-single-item-order, 2023-05-19T01:45:39.553-07:00
simple-two-item-order, 2023-05-19T01:29:39.553-07:00
simple-two-item-order-same-customer, 2023-05-19T02:16:39.553-07:00
>>>orders-data
order-with-decimal, 1000150, 2023-06-19T01:29:39.553-07:00
order-with-future-date, 1000153, 2025-06-19T01:29:39.553-07:00
order-with-max-int-quantity, 1000107, 2023-05-19T02:28:39.553-07:00
order-with-multiple-entries, 1000151, 2023-06-19T02:29:39.553-07:00
order-with-null-discount, 1000107, 2023-05-19T02:28:39.553-07:00
order-with-past-date, 1000154, 2021-06-19T01:29:39.553-07:00
order-with-variety-of-values, 1000150, 2023-06-19T01:29:39.553-07:00
precision-loss-leading-decimal-order, 1000121, 2023-05-19T02:16:39.553-07:00
precision-loss-trailing-decimal-order, 1000121, 2023-05-19T02:16:39.553-07:00
simple-single-item-order, 1000107, 2023-05-19T01:45:39.553-07:00
simple-two-item-order, 1000101, 2023-05-19T01:29:39.553-07:00
simple-two-item-order-same-customer, 1000121, 2023-05-19T02:16:39.553-07:00
>>>entries-data
order-with-decimal, 0, 1, 10, 0, null, 2023-06-19T01:29:39.553-07:00
order-with-decimal, 1, 2, 20, 1000000000000.12341309, 0, 2023-06-19T01:29:39.553-07:00
order-with-decimal, 2, 3, 30, -1000000000000.12341309, 0, 2023-06-19T01:29:39.553-07:00
order-with-decimal, 3, 4, 40, 500, 900, 2023-06-19T01:29:39.553-07:00
order-with-decimal, 4, 5, 50, 100, -50, 2023-06-19T01:29:39.553-07:00
order-with-decimal, 5, 6, 1000000, 1, 0, 2023-06-19T01:29:39.553-07:00
order-with-future-date, 0, 1, 10, 0, null, 2025-06-19T01:29:39.553-07:00
order-with-future-date, 1, 2, 2, -100, 0, 2025-06-19T01:29:39.553-07:00
order-with-future-date, 2, 3, 30, 2, 0, 2025-06-19T01:29:39.553-07:00
order-with-max-int-quantity, 0, 1332, 8, 8.49, null, 2023-05-19T02:28:39.553-07:00
order-with-max-int-quantity, 1, 3571, 2147483647, 41.95, 5, 2023-05-19T02:28:39.553-07:00
order-with-multiple-entries, 0, 1, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 1, 2, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 10, 11, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 11, 12, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 12, 13, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 13, 14, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 14, 15, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 15, 16, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 16, 17, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 17, 18, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 18, 19, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 19, 20, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 2, 3, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 20, 21, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 21, 22, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 22, 23, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 23, 24, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 24, 25, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 25, 26, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 26, 27, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 27, 28, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 28, 29, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 29, 30, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 3, 4, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 30, 31, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 31, 32, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 32, 33, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 33, 34, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 34, 35, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 35, 36, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 36, 37, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 37, 38, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 38, 39, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 39, 40, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 4, 5, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 40, 41, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 41, 42, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 42, 43, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 43, 44, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 44, 45, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 45, 46, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 46, 47, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 47, 48, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 48, 49, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 49, 50, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 5, 6, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 6, 7, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 7, 8, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 8, 9, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-multiple-entries, 9, 10, 1, 10, 0, 2023-06-19T02:29:39.553-07:00
order-with-null-discount, 0, 1332, 8, 8.49, null, 2023-05-19T02:28:39.553-07:00
order-with-null-discount, 1, 3571, 1, 41.95, 5, 2023-05-19T02:28:39.553-07:00
order-with-past-date, 0, 1, 10, 0, null, 2021-06-19T01:29:39.553-07:00
order-with-past-date, 1, 2, 20, -100, 0, 2021-06-19T01:29:39.553-07:00
order-with-past-date, 2, 3, 30, 2, 0, 2021-06-19T01:29:39.553-07:00
order-with-variety-of-values, 0, 1, 10, 0, null, 2023-06-19T01:29:39.553-07:00
order-with-variety-of-values, 1, 2, 20, -100, 0, 2023-06-19T01:29:39.553-07:00
order-with-variety-of-values, 2, 3, 30, 1000000, 0, 2023-06-19T01:29:39.553-07:00
order-with-variety-of-values, 3, 4, 40, 500, 900, 2023-06-19T01:29:39.553-07:00
order-with-variety-of-values, 4, 5, 50, 100, -50, 2023-06-19T01:29:39.553-07:00
order-with-variety-of-values, 5, 6, 1000000, 1, 0, 2023-06-19T01:29:39.553-07:00
precision-loss-leading-decimal-order, 0, 7552, 3, 25.5, 15, 2023-05-19T02:16:39.553-07:00
precision-loss-leading-decimal-order, 1, 3225, 1, 33333333333333331968, 0, 2023-05-19T02:16:39.553-07:00
precision-loss-trailing-decimal-order, 0, 7552, 3, 25.5, 15, 2023-05-19T02:16:39.553-07:00
precision-loss-trailing-decimal-order, 1, 3225, 1, 3.33333333, 0, 2023-05-19T02:16:39.553-07:00
simple-single-item-order, 0, 3571, 1, 41.95, 0, 2023-05-19T01:45:39.553-07:00
simple-two-item-order, 0, 7235, 1, 17.35, 0, 2023-05-19T01:29:39.553-07:00
simple-two-item-order, 1, 8757, 2, 57.5, 11.5, 2023-05-19T01:29:39.553-07:00
simple-two-item-order-same-customer, 0, 7552, 3, 25.5, 15, 2023-05-19T02:16:39.553-07:00
simple-two-item-order-same-customer, 1, 3225, 1, 105, 0, 2023-05-19T02:16:39.553-07:00
