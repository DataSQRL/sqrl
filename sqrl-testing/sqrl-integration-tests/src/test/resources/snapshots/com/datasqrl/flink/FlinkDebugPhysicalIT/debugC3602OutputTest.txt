>>>customer$debug1-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6], TimestampHint options:[6]]
  LogicalTableScan(table=[[customer$1]])

>>>customer$debug2-lp-stream
LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6]) hints[TimestampHint options:[6]]
  LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
    LogicalTableScan(table=[[customer$1]])

>>>order_again$1-lp-stream
LogicalProject(__pk1$customerid=[$0], productid=[$1], quantity=[$2], num_orders=[$3], most_recent=[$4]) hints[TimestampHint options:[4]]
  LogicalAggregate(group=[{6, 15}], quantity=[SUM($16)], num_orders=[COUNT()], most_recent=[MAX($4)])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], customerid0=[$6], _uuid0=[$7], _ingest_time0=[$8], email=[$9], name=[$10], lastUpdated=[$11], updateTime=[$12], _rownum=[$13], _idx=[$14], productid=[$15], quantity=[$16], unit_price=[$17], discount=[$18], discount0=[COALESCE($18, 0.0:DOUBLE)], total=[-(*($16, $17), COALESCE($18, 0.0:DOUBLE))])
      LogicalCorrelate(correlation=[$cor21], joinType=[inner], requiredColumns=[{5}])
        LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
          LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
          LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
            LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
              LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6])
                LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                  LogicalTableScan(table=[[customer$1]])
        Uncollect
          LogicalProject($f0=[$cor21.entries])
            LogicalValues(tuples=[[{ 0 }]])

>>>order_again$debug3-lp-stream
LogicalProject(__pk1$customerid=[$0], productid=[$1], quantity=[$2], num_orders=[$3], most_recent=[$4]) hints[TimestampHint options:[4]]
  LogicalAggregate(group=[{6, 15}], quantity=[SUM($16)], num_orders=[COUNT()], most_recent=[MAX($4)])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], customerid0=[$6], _uuid0=[$7], _ingest_time0=[$8], email=[$9], name=[$10], lastUpdated=[$11], updateTime=[$12], _rownum=[$13], _idx=[$14], productid=[$15], quantity=[$16], unit_price=[$17], discount=[$18], discount0=[COALESCE($18, 0.0:DOUBLE)], total=[-(*($16, $17), COALESCE($18, 0.0:DOUBLE))])
      LogicalCorrelate(correlation=[$cor21], joinType=[inner], requiredColumns=[{5}])
        LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
          LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
          LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
            LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
              LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6])
                LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                  LogicalTableScan(table=[[customer$1]])
        Uncollect
          LogicalProject($f0=[$cor21.entries])
            LogicalValues(tuples=[[{ 0 }]])

>>>order_stats$1-lp-stream
LogicalProject(__pk1$customerid=[$0], total_spend=[$1], num_orders=[$2], __timestamp=[$3]) hints[TimestampHint options:[3]]
  LogicalAggregate(group=[{6}], total_spend=[SUM($15)], num_orders=[COUNT()], __timestamp=[MAX($4)])
    LogicalJoin(condition=[AND(=($0, $14), =($18, $4))], joinType=[inner]) hints[IntervalJoin]
      LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
        LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
        LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
            LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6])
              LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                LogicalTableScan(table=[[customer$1]])
      LogicalProject(__pk1$_uuid=[$0], price=[$2], discount=[$3], num=[$4], _time=[$1])
        LogicalAggregate(group=[{0, 4}], price=[SUM($12)], discount=[SUM($11)], num=[COUNT()]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
          LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], discount0=[COALESCE($10, 0.0:DOUBLE)], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))])
            LogicalCorrelate(correlation=[$cor23], joinType=[inner], requiredColumns=[{5}])
              LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
              Uncollect
                LogicalProject($f0=[$cor23.entries])
                  LogicalValues(tuples=[[{ 0 }]])

>>>order_stats$debug4-lp-stream
LogicalProject(__pk1$customerid=[$0], total_spend=[$1], num_orders=[$2], __timestamp=[$3]) hints[TimestampHint options:[3]]
  LogicalAggregate(group=[{6}], total_spend=[SUM($15)], num_orders=[COUNT()], __timestamp=[MAX($4)])
    LogicalJoin(condition=[AND(=($0, $14), =($18, $4))], joinType=[inner]) hints[IntervalJoin]
      LogicalJoin(condition=[=($6, $3)], joinType=[inner]) hints[TemporalJoinHint options:[4, 6, 0]]
        LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
        LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
            LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6])
              LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
                LogicalTableScan(table=[[customer$1]])
      LogicalProject(__pk1$_uuid=[$0], price=[$2], discount=[$3], num=[$4], _time=[$1])
        LogicalAggregate(group=[{0, 4}], price=[SUM($12)], discount=[SUM($11)], num=[COUNT()]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
          LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], discount0=[COALESCE($10, 0.0:DOUBLE)], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))])
            LogicalCorrelate(correlation=[$cor23], joinType=[inner], requiredColumns=[{5}])
              LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
              Uncollect
                LogicalProject($f0=[$cor23.entries])
                  LogicalValues(tuples=[[{ 0 }]])

>>>orders$debug5-lp-stream
LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]], [TimestampHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4], TimestampHint options:[4]]

>>>total$debug6-lp-stream
LogicalProject(__pk1$_uuid=[$0], price=[$2], discount=[$3], num=[$4], _time=[$1]) hints[TimestampHint options:[4]]
  LogicalAggregate(group=[{0, 4}], price=[SUM($12)], discount=[SUM($11)], num=[COUNT()]) hints[TumbleAggregationHint options:[4, INSTANT, -1, 1, 0]]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], discount0=[COALESCE($10, 0.0:DOUBLE)], total=[-(*($8, $9), COALESCE($10, 0.0:DOUBLE))])
      LogicalCorrelate(correlation=[$cor23], joinType=[inner], requiredColumns=[{5}])
        LogicalTableScan(table=[[orders$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
        Uncollect
          LogicalProject($f0=[$cor23.entries])
            LogicalValues(tuples=[[{ 0 }]])

>>>order_again-lp-database
LogicalSort(sort0=[$0], sort1=[$4], sort2=[$2], sort3=[$1], dir0=[ASC], dir1=[DESC], dir2=[DESC], dir3=[ASC])
  LogicalProject(__pk1$customerid=[$0], productid=[$1], quantity=[$2], num_orders=[$3], most_recent=[$4])
    LogicalTableScan(table=[[order_again$1]])

>>>order_stats-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(__pk1$customerid=[$0], total_spend=[$1], num_orders=[$2], __timestamp=[$3])
    LogicalTableScan(table=[[order_stats$1]])

>>>order_stats-data
120.85, 1
146.82, 2
166.5, 1
>>>order_again-data
1332, 8, 1, 2023-05-19 02:28:39.553
3225, 1, 1, 2023-05-19 02:16:39.553
3571, 2, 2, 2023-05-19 02:28:39.553
7235, 1, 1, 2023-05-19 01:29:39.553
7552, 3, 1, 2023-05-19 02:16:39.553
8757, 2, 1, 2023-05-19 01:29:39.553
