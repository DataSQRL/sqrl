>>>jsonarrayaggtable$1-lp-stream
LogicalProject(_name=[$0], agg=[$1], __timestamp=[$2]) hints[TimestampHint options:[2]]
  LogicalAggregate(group=[{4}], agg=[jsonArrayAgg($4)], __timestamp=[MAX($2)])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
          LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>jsonarraytable$1-lp-stream
LogicalProject(_customerid=[$0], obj=[jsonArray($0)], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>jsonconcattable$1-lp-stream
LogicalProject(_customerid=[$0], obj=[jsonConcat(toJson('{"a": true}'), toJson('{"a": false}'))], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>jsonexiststable$1-lp-stream
LogicalProject(_customerid=[$0], obj=[jsonExists(toJson('{"a": true}'), '$.a')], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>jsonextracttable$1-lp-stream
LogicalProject(_customerid=[$0], obj=[jsonExtract(toJson('{"a": "hello"}'), '$.a':VARCHAR(2147483647) CHARACTER SET "UTF-16LE", 'default':VARCHAR(2147483647) CHARACTER SET "UTF-16LE")], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>jsonobjectaggtable$1-lp-stream
LogicalProject(_name=[$0], agg=[$1], __timestamp=[$2]) hints[TimestampHint options:[2]]
  LogicalAggregate(group=[{0}], agg=[jsonObjectAgg($1, $0)], __timestamp=[MAX($3)])
    LogicalProject(name=[$4], $f1=['key'], customerid=[$0], _ingest_time=[$2])
      LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
        LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
          LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
            LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>jsonquerytable$1-lp-stream
LogicalProject(_customerid=[$0], obj=[jsonQuery(toJson('{"a": {"b": 1}}'), '$.a')], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>jsontostringtable$1-lp-stream
LogicalProject(_customerid=[$0], obj=[jsonToString(toJson('{"a": 1}'))], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>objcomplex$1-lp-stream
LogicalProject(_customerid=[$0], obj=[jsonObject(CONCAT('application#', $4), $0)], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>tojson$1-lp-stream
LogicalProject(_customerid=[$0], obj=[toJson('{"a": 1}')], _ingest_time=[$2]) hints[TimestampHint options:[2]]
  LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5])
        LogicalTableScan(table=[[customer$1]], hints=[[[WatermarkHint inheritPath:[] options:[1]]]]) hints[WatermarkHint options:[1]]

>>>ObjComplex-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[objcomplex$1]])

>>>jsonArrayAggTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_name=[$0], agg=[$1], __timestamp=[$2])
    LogicalTableScan(table=[[jsonarrayaggtable$1]])

>>>jsonArrayTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[jsonarraytable$1]])

>>>jsonConcatTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[jsonconcattable$1]])

>>>jsonExistsTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[jsonexiststable$1]])

>>>jsonExtractTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[jsonextracttable$1]])

>>>jsonObjectAggTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_name=[$0], agg=[$1], __timestamp=[$2])
    LogicalTableScan(table=[[jsonobjectaggtable$1]])

>>>jsonQueryTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[jsonquerytable$1]])

>>>jsonToStringTable-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[jsontostringtable$1]])

>>>toJson-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(_customerid=[$0], obj=[$1], _ingest_time=[$2])
    LogicalTableScan(table=[[tojson$1]])

>>>toJson-data
1000101, {"a": 1}
1000107, {"a": 1}
1000121, {"a": 1}
1000131, {"a": 1}
>>>jsonArrayTable-data
1000101, [1000101]
1000107, [1000107]
1000121, [1000121]
1000131, [1000131]
>>>jsonObjectAggTable-data
Emily F. Ludies, {"key": "Emily F. Ludies"}
John Mekker, {"key": "John Mekker"}
Mark Spielman, {"key": "Mark Spielman"}
Michelle Dagnes, {"key": "Michelle Dagnes"}
>>>jsonToStringTable-data
1000101, {"a":1}
1000107, {"a":1}
1000121, {"a":1}
1000131, {"a":1}
>>>jsonExtractTable-data
1000101, hello
1000107, hello
1000121, hello
1000131, hello
>>>jsonQueryTable-data
1000101, {"b":1}
1000107, {"b":1}
1000121, {"b":1}
1000131, {"b":1}
>>>jsonExistsTable-data
1000101, true
1000107, true
1000121, true
1000131, true
>>>jsonConcatTable-data
1000101, {"a": false}
1000107, {"a": false}
1000121, {"a": false}
1000131, {"a": false}
>>>jsonArrayAggTable-data
Emily F. Ludies, ["Emily F. Ludies"]
John Mekker, ["John Mekker"]
Mark Spielman, ["Mark Spielman"]
Michelle Dagnes, ["Michelle Dagnes"]
>>>ObjComplex-data
1000101, {"application#John Mekker": 1000101}
1000107, {"application#Emily F. Ludies": 1000107}
1000121, {"application#Michelle Dagnes": 1000121}
1000131, {"application#Mark Spielman": 1000131}
