>>>pipeline_explain.txt
=== CoOrders
ID:     coorders_1
Type:   stream
Stage:  flink
Inputs: orders_2
Primary Key: beforeID, _customerid, beforeTimestamp, afterID, timestamp
Timestamp  : __timestamp
Schema:
 - beforeID: BIGINT NOT NULL
 - afterID: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - beforeTimestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - _customerid: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalProject(beforeID=[$0], afterID=[$5], timestamp=[$7], beforeTimestamp=[$2], _customerid=[$1], __timestamp=[CASE(<($4, $9), $9, $4)])
  LogicalJoin(condition=[AND(=($1, $6), <($2, $7), >=($2, -($7, *(60000:INTERVAL MINUTE, 10))))], joinType=[inner]) hints[JoinCostHint options:[STREAM, STREAM, 1, NONE]]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[orders_2]])

=== logger.CoOrders
ID:     coorders_1_1
Type:   export
Stage:  flink
Inputs: coorders_1

=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, customerid, time
Timestamp  : _ingest_time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
 - _ingest_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  `_ingest_time` AS PROCTIME(),\n  PRIMARY KEY (`id`, `customerid`, `time`) NOT ENFORCED\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `coorders_1` (\n  `beforeID` BIGINT NOT NULL,\n  `afterID` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `beforeTimestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `_customerid` BIGINT NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`beforeID`, `_customerid`, `beforeTimestamp`, `afterID`, `timestamp`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'coorders_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orders_2` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `customerid`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `coorders_1_1` (\n  `beforeID` BIGINT NOT NULL,\n  `afterID` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `beforeTimestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\n) WITH (\n  'connector' = 'print',\n  'print-identifier' = 'CoOrders'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT `orders_1`.`id` AS `beforeID`, `orders_10`.`id` AS `afterID`, `orders_10`.`time` AS `timestamp`, `orders_1`.`time` AS `beforeTimestamp`, `orders_1`.`customerid` AS `_customerid`, CASE WHEN `orders_1`.`_ingest_time` < `orders_10`.`_ingest_time` THEN `orders_10`.`_ingest_time` ELSE `orders_1`.`_ingest_time` END AS `__timestamp`\nFROM `orders_1`\n INNER JOIN `orders_1` AS `orders_10` ON `orders_1`.`customerid` = `orders_10`.`customerid` AND `orders_1`.`time` < `orders_10`.`time` AND `orders_1`.`time` >= `orders_10`.`time` - INTERVAL '1' MINUTE * 10;",
    "CREATE VIEW `table$2`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`, `_ingest_time`\nFROM `orders_1`;",
    "CREATE VIEW `table$3`\nAS\nSELECT `orders_1`.`id` AS `beforeID`, `orders_10`.`id` AS `afterID`, `orders_10`.`time` AS `timestamp`, `orders_1`.`time` AS `beforeTimestamp`\nFROM `orders_1`\n INNER JOIN `orders_1` AS `orders_10` ON `orders_1`.`customerid` = `orders_10`.`customerid` AND `orders_1`.`time` < `orders_10`.`time` AND `orders_1`.`time` >= `orders_10`.`time` - INTERVAL '1' MINUTE * 10;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `coorders_1`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `orders_2`\n (SELECT *\n  FROM `table$2`)\n ;\n INSERT INTO `coorders_1_1`\n  (SELECT *\n   FROM `table$3`)\n  ;\n  END;"
  ],
  "connectors" : [
    "print",
    "jdbc-sqrl",
    "filesystem"
  ],
  "formats" : [
    "json"
  ]
}
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "coorders_1",
      "columns" : [
        "\"beforeID\" BIGINT NOT NULL",
        "\"afterID\" BIGINT NOT NULL",
        "\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"beforeTimestamp\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"_customerid\" BIGINT NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"beforeID\"",
        "\"_customerid\"",
        "\"beforeTimestamp\"",
        "\"afterID\"",
        "\"timestamp\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS coorders_1 (\"beforeID\" BIGINT NOT NULL,\"afterID\" BIGINT NOT NULL,\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL,\"beforeTimestamp\" TIMESTAMP WITH TIME ZONE NOT NULL,\"_customerid\" BIGINT NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"beforeID\",\"_customerid\",\"beforeTimestamp\",\"afterID\",\"timestamp\"));"
    },
    {
      "name" : "orders_2",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL",
        "\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"customerid\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_2 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL,\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"id\",\"customerid\",\"time\"));"
    },
    {
      "indexName" : "coorders_1_btree_c0c2",
      "tableName" : "coorders_1",
      "columns" : [
        "beforeID",
        "timestamp"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS coorders_1_btree_c0c2 ON coorders_1 USING btree (\"beforeID\",\"timestamp\");"
    },
    {
      "indexName" : "coorders_1_btree_c1c0c2",
      "tableName" : "coorders_1",
      "columns" : [
        "afterID",
        "beforeID",
        "timestamp"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS coorders_1_btree_c1c0c2 ON coorders_1 USING btree (\"afterID\",\"beforeID\",\"timestamp\");"
    },
    {
      "indexName" : "coorders_1_btree_c1c2c3",
      "tableName" : "coorders_1",
      "columns" : [
        "afterID",
        "timestamp",
        "beforeTimestamp"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS coorders_1_btree_c1c2c3 ON coorders_1 USING btree (\"afterID\",\"timestamp\",\"beforeTimestamp\");"
    },
    {
      "indexName" : "coorders_1_btree_c1c3",
      "tableName" : "coorders_1",
      "columns" : [
        "afterID",
        "beforeTimestamp"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS coorders_1_btree_c1c3 ON coorders_1 USING btree (\"afterID\",\"beforeTimestamp\");"
    },
    {
      "indexName" : "coorders_1_btree_c2c3c0",
      "tableName" : "coorders_1",
      "columns" : [
        "timestamp",
        "beforeTimestamp",
        "beforeID"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS coorders_1_btree_c2c3c0 ON coorders_1 USING btree (\"timestamp\",\"beforeTimestamp\",\"beforeID\");"
    },
    {
      "indexName" : "coorders_1_btree_c3c0c1",
      "tableName" : "coorders_1",
      "columns" : [
        "beforeTimestamp",
        "beforeID",
        "afterID"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS coorders_1_btree_c3c0c1 ON coorders_1 USING btree (\"beforeTimestamp\",\"beforeID\",\"afterID\");"
    },
    {
      "indexName" : "orders_2_btree_c1c2",
      "tableName" : "orders_2",
      "columns" : [
        "customerid",
        "time"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_btree_c1c2 ON orders_2 USING btree (\"customerid\",\"time\");"
    },
    {
      "indexName" : "orders_2_btree_c2c0",
      "tableName" : "orders_2",
      "columns" : [
        "time",
        "id"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_btree_c2c0 ON orders_2 USING btree (\"time\",\"id\");"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "CoOrders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1 AND \"afterID\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\", \"beforeTimestamp\", \"timestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1 AND \"timestamp\" = $2 AND \"beforeTimestamp\" = $3\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\", \"afterID\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1 AND \"timestamp\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\", \"beforeTimestamp\", \"afterID\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1 AND \"beforeTimestamp\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\", \"afterID\", \"timestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1 AND \"afterID\" = $2 AND \"timestamp\" = $3 AND \"beforeTimestamp\" = $4\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1 AND \"afterID\" = $2 AND \"timestamp\" = $3\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\", \"beforeTimestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1 AND \"afterID\" = $2 AND \"beforeTimestamp\" = $3\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\", \"timestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"timestamp\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\", \"beforeTimestamp\", \"afterID\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"timestamp\" = $1 AND \"beforeTimestamp\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\", \"afterID\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"afterID\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\", \"beforeTimestamp\", \"timestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"afterID\" = $1 AND \"beforeTimestamp\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\", \"timestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"afterID\" = $1 AND \"timestamp\" = $2\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\", \"beforeTimestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "afterID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "timestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"afterID\" = $1 AND \"timestamp\" = $2 AND \"beforeTimestamp\" = $3\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "afterID"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "timestamp"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeID"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeID\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"_customerid\", \"beforeTimestamp\", \"afterID\", \"timestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeID"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\", \"beforeTimestamp\", \"afterID\", \"timestamp\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "beforeTimestamp"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"coorders_1\"\nWHERE \"beforeTimestamp\" = $1\nORDER BY \"__timestamp\" DESC NULLS LAST, \"beforeID\", \"_customerid\", \"afterID\", \"timestamp\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "beforeTimestamp"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"id\", \"customerid\", \"time\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"time\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"id\", \"customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"customerid\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"id\", \"time\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"customerid\" = $1 AND \"time\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"customerid\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"time\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"id\", \"customerid\", \"time\", \"entries\", \"_ingest_time\", 1 AS \"__pk\"\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"customerid\" = $2 AND \"time\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, 1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"customerid\", \"time\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "type CoOrders {\n  beforeID: Float!\n  afterID: Float!\n  timestamp: DateTime!\n  beforeTimestamp: DateTime!\n}\n\n\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype Query {\n  CoOrders(beforeID: Float, afterID: Float, timestamp: DateTime, beforeTimestamp: DateTime, limit: Int = 10, offset: Int = 0): [CoOrders!]\n  Orders(id: Float, customerid: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [Orders!]\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n"
    }
  }
}
