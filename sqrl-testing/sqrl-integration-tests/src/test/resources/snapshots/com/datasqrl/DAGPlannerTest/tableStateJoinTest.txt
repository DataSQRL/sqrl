>>>pipeline_explain.txt
=== Customer
ID:     default_catalog.default_database.Customer
Type:   state
Stage:  flink
Inputs: default_catalog.default_database._customer
Annotations:
 - mostRecentDistinct: true
 - stream-root: _customer__def
Primary Key: customerid
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - lastUpdated: BIGINT NOT NULL
 - timestamp: TIMESTAMP_LTZ(3) *ROWTIME*
Plan:
LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4])
  LogicalFilter(condition=[=($5, 1)])
    LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4], __sqrlinternal_rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS LAST)])
      LogicalTableScan(table=[[default_catalog, default_database, _customer]])
SQL: CREATE VIEW `Customer`
AS
SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`
FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC NULLS LAST) AS `__sqrlinternal_rownum`
  FROM `default_catalog`.`default_database`.`_customer`) AS `t`
WHERE `__sqrlinternal_rownum` = 1
=== OrderCustomer
ID:     default_catalog.default_database.OrderCustomer
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Customer, default_catalog.default_database.Orders
Primary Key: id
Timestamp  : time
Schema:
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], name=[$6], customerid=[$1])
  LogicalJoin(condition=[=($1, $4)], joinType=[inner])
    LogicalTableScan(table=[[default_catalog, default_database, Orders]])
    LogicalTableScan(table=[[default_catalog, default_database, Customer]])
SQL: CREATE VIEW OrderCustomer AS  SELECT o.`time`, o.id, c.name, o.customerid FROM Orders o INNER JOIN Customer c on o.customerid = c.customerid;

=== OrderCustomerConstant
ID:     default_catalog.default_database.OrderCustomerConstant
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Customer, default_catalog.default_database.Orders
Primary Key: id
Timestamp  : time
Schema:
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], name=[$6], customerid=[$1])
  LogicalJoin(condition=[AND(=($1, $4), =($6, 'Robert'), >($0, 5))], joinType=[inner])
    LogicalTableScan(table=[[default_catalog, default_database, Orders]])
    LogicalTableScan(table=[[default_catalog, default_database, Customer]])
SQL: CREATE VIEW OrderCustomerConstant AS  SELECT o.`time`, o.id, c.name, o.customerid FROM Orders o INNER JOIN Customer c ON o.customerid = c.customerid AND c.name = 'Robert' AND o.id > 5;

=== OrderCustomerLeft
ID:     default_catalog.default_database.OrderCustomerLeft
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Customer, default_catalog.default_database.Orders
Primary Key: id
Timestamp  : -
Schema:
 - lastUpdated: BIGINT
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(lastUpdated=[$7], id=[$0], name=[$6], customerid=[$1])
  LogicalJoin(condition=[=($1, $4)], joinType=[left])
    LogicalTableScan(table=[[default_catalog, default_database, Orders]])
    LogicalTableScan(table=[[default_catalog, default_database, Customer]])
SQL: CREATE VIEW OrderCustomerLeft AS  SELECT c.lastUpdated, o.id, c.name, o.customerid  FROM Orders o LEFT JOIN Customer c on o.customerid = c.customerid;

=== OrderCustomerLeftExcluded
ID:     default_catalog.default_database.OrderCustomerLeftExcluded
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Customer, default_catalog.default_database.Orders
Primary Key: id
Timestamp  : time
Schema:
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], customerid=[$1])
  LogicalFilter(condition=[IS NULL($4)])
    LogicalJoin(condition=[=($1, $4)], joinType=[left])
      LogicalTableScan(table=[[default_catalog, default_database, Orders]])
      LogicalTableScan(table=[[default_catalog, default_database, Customer]])
SQL: CREATE VIEW OrderCustomerLeftExcluded AS  SELECT o.`time`, o.id, o.customerid  FROM Orders o LEFT JOIN Customer c on o.customerid = c.customerid WHERE c.customerid IS NULL;

=== OrderCustomerRight
ID:     default_catalog.default_database.OrderCustomerRight
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Customer, default_catalog.default_database.Orders
Primary Key: ouuid, id
Timestamp  : -
Schema:
 - ouuid: BIGINT NOT NULL
 - id: BIGINT
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT
Plan:
LogicalProject(ouuid=[coalesce($0, 0:BIGINT)], id=[$0], name=[$6], customerid=[$1])
  LogicalJoin(condition=[=($1, $4)], joinType=[right])
    LogicalTableScan(table=[[default_catalog, default_database, Orders]])
    LogicalTableScan(table=[[default_catalog, default_database, Customer]])
SQL: CREATE VIEW OrderCustomerRight AS  SELECT coalesce(o.id, 0) as ouuid, o.id, c.name, o.customerid  FROM Orders o RIGHT JOIN Customer c on o.customerid = c.customerid;

=== OrderCustomerRightExcluded
ID:     default_catalog.default_database.OrderCustomerRightExcluded
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Customer, default_catalog.default_database.Orders
Primary Key: 
Timestamp  : -
Schema:
 - lastUpdated: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
Plan:
LogicalProject(lastUpdated=[$7], customerid=[$4], name=[$6])
  LogicalFilter(condition=[IS NULL($0)])
    LogicalJoin(condition=[=($1, $4)], joinType=[right])
      LogicalTableScan(table=[[default_catalog, default_database, Orders]])
      LogicalTableScan(table=[[default_catalog, default_database, Customer]])
SQL: CREATE VIEW OrderCustomerRightExcluded AS  SELECT c.lastUpdated, c.customerid, c.name  FROM Orders o RIGHT JOIN Customer c on o.customerid = c.customerid WHERE o.id IS NULL;

=== Orders
ID:     default_catalog.default_database.Orders
Type:   state
Stage:  flink
Inputs: default_catalog.default_database._orders
Annotations:
 - mostRecentDistinct: true
 - stream-root: _orders__def
Primary Key: id
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3])
  LogicalFilter(condition=[=($4, 1)])
    LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], __sqrlinternal_rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalTableScan(table=[[default_catalog, default_database, _orders]])
SQL: CREATE VIEW `Orders`
AS
SELECT `id`, `customerid`, `time`, `entries`
FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC NULLS LAST) AS `__sqrlinternal_rownum`
  FROM `default_catalog`.`default_database`.`_orders`) AS `t`
WHERE `__sqrlinternal_rownum` = 1
=== _customer
ID:     default_catalog.default_database._customer
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._customer__def
Annotations:
 - stream-root: _customer__def
Primary Key: customerid, lastUpdated
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - lastUpdated: BIGINT NOT NULL
 - timestamp: TIMESTAMP_LTZ(3) *ROWTIME*
Plan:
LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4])
  LogicalWatermarkAssigner(rowtime=[timestamp], watermark=[-($4, 1:INTERVAL SECOND)])
    LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[TO_TIMESTAMP_LTZ($3, 0)])
      LogicalTableScan(table=[[default_catalog, default_database, _customer__def]])
SQL: CREATE VIEW `_customer`
AS
SELECT *
FROM `default_catalog`.`default_database`.`_customer__def`
=== _orders
ID:     default_catalog.default_database._orders
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._orders__def
Annotations:
 - features: DENORMALIZE (feature)
 - stream-root: _orders__def
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - entries: RecordType:peek_no_expand(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3])
  LogicalWatermarkAssigner(rowtime=[time], watermark=[-($2, 1:INTERVAL SECOND)])
    LogicalTableScan(table=[[default_catalog, default_database, _orders__def]])
SQL: CREATE VIEW `_orders`
AS
SELECT *
FROM `default_catalog`.`default_database`.`_orders__def`
>>>flink-sql-no-functions.sql
CREATE TEMPORARY TABLE `_customer__schema` (
  `customerid` BIGINT NOT NULL,
  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `lastUpdated` BIGINT NOT NULL
) WITH (
  'connector' = 'datagen'
);
CREATE TABLE `_customer__def` (
  `timestamp` AS TO_TIMESTAMP_LTZ(`lastUpdated`, 0),
  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED,
  WATERMARK FOR `timestamp` AS `timestamp` - INTERVAL '0.001' SECOND
) WITH (
  'format' = 'flexible-json',
  'path' = 'file:/mock',
  'source.monitor-interval' = '10 sec',
  'connector' = 'filesystem'
)
LIKE `_customer__schema`;
CREATE VIEW `_customer`
AS
SELECT *
FROM `default_catalog`.`default_database`.`_customer__def`;
CREATE TEMPORARY TABLE `_orders__schema` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL
) WITH (
  'connector' = 'datagen'
);
CREATE TABLE `_orders__def` (
  PRIMARY KEY (`id`, `time`) NOT ENFORCED,
  WATERMARK FOR `time` AS `time` - INTERVAL '0.001' SECOND
) WITH (
  'format' = 'flexible-json',
  'path' = 'file:/mock',
  'source.monitor-interval' = '10 sec',
  'connector' = 'filesystem'
)
LIKE `_orders__schema`;
CREATE VIEW `_orders`
AS
SELECT *
FROM `default_catalog`.`default_database`.`_orders__def`;
CREATE TEMPORARY TABLE `_product__schema` (
  `productid` BIGINT NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL
) WITH (
  'connector' = 'datagen'
);
CREATE TABLE `_product__def` (
  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED,
  WATERMARK FOR `_ingest_time` AS `_ingest_time` - INTERVAL '0.001' SECOND
) WITH (
  'format' = 'flexible-json',
  'path' = 'file:/mock',
  'source.monitor-interval' = '10 sec',
  'connector' = 'filesystem'
)
LIKE `_product__schema`;
CREATE VIEW `_product`
AS
SELECT *
FROM `default_catalog`.`default_database`.`_product__def`;
CREATE VIEW `Customer`
AS
SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`
FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC NULLS LAST) AS `__sqrlinternal_rownum`
  FROM `default_catalog`.`default_database`.`_customer`) AS `t`
WHERE `__sqrlinternal_rownum` = 1;
CREATE VIEW `Orders`
AS
SELECT `id`, `customerid`, `time`, `entries`
FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC NULLS LAST) AS `__sqrlinternal_rownum`
  FROM `default_catalog`.`default_database`.`_orders`) AS `t`
WHERE `__sqrlinternal_rownum` = 1;
CREATE VIEW `OrderCustomerLeft`
AS
SELECT `c`.`lastUpdated`, `o`.`id`, `c`.`name`, `o`.`customerid`
FROM `Orders` AS `o`
 LEFT JOIN `Customer` AS `c` ON `o`.`customerid` = `c`.`customerid`;
CREATE VIEW `OrderCustomer`
AS
SELECT `o`.`time`, `o`.`id`, `c`.`name`, `o`.`customerid`
FROM `Orders` AS `o`
 INNER JOIN `Customer` AS `c` ON `o`.`customerid` = `c`.`customerid`;
CREATE VIEW `OrderCustomerLeftExcluded`
AS
SELECT `o`.`time`, `o`.`id`, `o`.`customerid`
FROM `Orders` AS `o`
 LEFT JOIN `Customer` AS `c` ON `o`.`customerid` = `c`.`customerid`
WHERE `c`.`customerid` IS NULL;
CREATE VIEW `OrderCustomerRight`
AS
SELECT COALESCE(`o`.`id`, 0) AS `ouuid`, `o`.`id`, `c`.`name`, `o`.`customerid`
FROM `Orders` AS `o`
 RIGHT JOIN `Customer` AS `c` ON `o`.`customerid` = `c`.`customerid`;
CREATE VIEW `OrderCustomerRightExcluded`
AS
SELECT `c`.`lastUpdated`, `c`.`customerid`, `c`.`name`
FROM `Orders` AS `o`
 RIGHT JOIN `Customer` AS `c` ON `o`.`customerid` = `c`.`customerid`
WHERE `o`.`id` IS NULL;
CREATE VIEW `OrderCustomerConstant`
AS
SELECT `o`.`time`, `o`.`id`, `c`.`name`, `o`.`customerid`
FROM `Orders` AS `o`
 INNER JOIN `Customer` AS `c` ON `o`.`customerid` = `c`.`customerid` AND `c`.`name` = 'Robert' AND `o`.`id` > 5;
CREATE TABLE `Customer_1` (
  `customerid` BIGINT NOT NULL,
  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `lastUpdated` BIGINT NOT NULL,
  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE,
  PRIMARY KEY (`customerid`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'Customer_1'
);
CREATE TABLE `OrderCustomer_2` (
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `id` BIGINT NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `customerid` BIGINT NOT NULL,
  PRIMARY KEY (`id`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'OrderCustomer_2'
);
CREATE TABLE `OrderCustomerConstant_3` (
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `id` BIGINT NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `customerid` BIGINT NOT NULL,
  PRIMARY KEY (`id`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'OrderCustomerConstant_3'
);
CREATE TABLE `OrderCustomerLeft_4` (
  `lastUpdated` BIGINT,
  `id` BIGINT NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `customerid` BIGINT NOT NULL,
  PRIMARY KEY (`id`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'OrderCustomerLeft_4'
);
CREATE TABLE `OrderCustomerLeftExcluded_5` (
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  PRIMARY KEY (`id`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'OrderCustomerLeftExcluded_5'
);
CREATE TABLE `OrderCustomerRight_6` (
  `ouuid` BIGINT NOT NULL,
  `id` BIGINT,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `customerid` BIGINT,
  PRIMARY KEY (`ouuid`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'OrderCustomerRight_6'
);
CREATE TABLE `OrderCustomerRightExcluded_7` (
  `lastUpdated` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `__pk_hash` INTEGER NOT NULL,
  PRIMARY KEY (`__pk_hash`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'OrderCustomerRightExcluded_7'
);
CREATE TABLE `Orders_8` (
  `id` BIGINT NOT NULL,
  `customerid` BIGINT NOT NULL,
  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),
  PRIMARY KEY (`id`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'Orders_8'
);
EXECUTE STATEMENT SET BEGIN
INSERT INTO `default_catalog`.`default_database`.`Customer_1`
(SELECT *
 FROM `default_catalog`.`default_database`.`_customer`)
;
INSERT INTO `default_catalog`.`default_database`.`OrderCustomer_2`
 (SELECT *
  FROM `default_catalog`.`default_database`.`OrderCustomer`)
 ;
 INSERT INTO `default_catalog`.`default_database`.`OrderCustomerConstant_3`
  (SELECT *
   FROM `default_catalog`.`default_database`.`OrderCustomerConstant`)
  ;
  INSERT INTO `default_catalog`.`default_database`.`OrderCustomerLeft_4`
   (SELECT *
    FROM `default_catalog`.`default_database`.`OrderCustomerLeft`)
   ;
   INSERT INTO `default_catalog`.`default_database`.`OrderCustomerLeftExcluded_5`
    (SELECT *
     FROM `default_catalog`.`default_database`.`OrderCustomerLeftExcluded`)
    ;
    INSERT INTO `default_catalog`.`default_database`.`OrderCustomerRight_6`
     (SELECT *
      FROM `default_catalog`.`default_database`.`OrderCustomerRight`)
     ;
     INSERT INTO `default_catalog`.`default_database`.`OrderCustomerRightExcluded_7`
      (SELECT `lastUpdated`, `customerid`, `name`, 1 AS `__pk_hash`
       FROM `default_catalog`.`default_database`.`OrderCustomerRightExcluded`)
      ;
      INSERT INTO `default_catalog`.`default_database`.`Orders_8`
       (SELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`
        FROM `default_catalog`.`default_database`.`_orders`)
       ;
       END
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "statements" : [
    {
      "name" : "Customer_1",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"Customer_1\" (\"customerid\" BIGINT NOT NULL, \"email\" TEXT NOT NULL, \"name\" TEXT NOT NULL, \"lastUpdated\" BIGINT NOT NULL, \"timestamp\" TIMESTAMP WITH TIME ZONE  , PRIMARY KEY (\"customerid\"))",
      "fields" : [
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "email",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "lastUpdated",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "timestamp",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "OrderCustomer_2",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"OrderCustomer_2\" (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"id\" BIGINT NOT NULL, \"name\" TEXT NOT NULL, \"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\"))",
      "fields" : [
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerConstant_3",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"OrderCustomerConstant_3\" (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"id\" BIGINT NOT NULL, \"name\" TEXT NOT NULL, \"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\"))",
      "fields" : [
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerLeft_4",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"OrderCustomerLeft_4\" (\"lastUpdated\" BIGINT , \"id\" BIGINT NOT NULL, \"name\" TEXT , \"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\"))",
      "fields" : [
        {
          "name" : "lastUpdated",
          "type" : "BIGINT",
          "nullable" : true
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : true
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerLeftExcluded_5",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"OrderCustomerLeftExcluded_5\" (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"id\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\"))",
      "fields" : [
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerRight_6",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"OrderCustomerRight_6\" (\"ouuid\" BIGINT NOT NULL, \"id\" BIGINT , \"name\" TEXT NOT NULL, \"customerid\" BIGINT  , PRIMARY KEY (\"ouuid\"))",
      "fields" : [
        {
          "name" : "ouuid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : true
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "OrderCustomerRightExcluded_7",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"OrderCustomerRightExcluded_7\" (\"lastUpdated\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL, \"name\" TEXT NOT NULL, \"__pk_hash\" INTEGER NOT NULL , PRIMARY KEY (\"__pk_hash\"))",
      "fields" : [
        {
          "name" : "lastUpdated",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "__pk_hash",
          "type" : "INTEGER",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "Orders_8",
      "type" : "TABLE",
      "sql" : "CREATE TABLE IF NOT EXISTS \"Orders_8\" (\"id\" BIGINT NOT NULL, \"customerid\" BIGINT NOT NULL, \"time\" TIMESTAMP WITH TIME ZONE NOT NULL, \"entries\" JSONB  , PRIMARY KEY (\"id\"))",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "Customer",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"Customer\"(\"customerid\", \"email\", \"name\", \"lastUpdated\", \"timestamp\") AS SELECT *\nFROM \"Customer_1\"",
      "fields" : [
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "email",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "lastUpdated",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "timestamp",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "OrderCustomer",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomer\"(\"time\", \"id\", \"name\", \"customerid\") AS SELECT *\nFROM \"OrderCustomer_2\"",
      "fields" : [
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerConstant",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerConstant\"(\"time\", \"id\", \"name\", \"customerid\") AS SELECT *\nFROM \"OrderCustomerConstant_3\"",
      "fields" : [
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerLeft",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerLeft\"(\"lastUpdated\", \"id\", \"name\", \"customerid\") AS SELECT *\nFROM \"OrderCustomerLeft_4\"",
      "fields" : [
        {
          "name" : "lastUpdated",
          "type" : "BIGINT",
          "nullable" : true
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : true
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerLeftExcluded",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerLeftExcluded\"(\"time\", \"id\", \"customerid\") AS SELECT *\nFROM \"OrderCustomerLeftExcluded_5\"",
      "fields" : [
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "OrderCustomerRight",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerRight\"(\"ouuid\", \"id\", \"name\", \"customerid\") AS SELECT *\nFROM \"OrderCustomerRight_6\"",
      "fields" : [
        {
          "name" : "ouuid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : true
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : true
        }
      ]
    },
    {
      "name" : "OrderCustomerRightExcluded",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerRightExcluded\"(\"lastUpdated\", \"customerid\", \"name\") AS SELECT \"lastUpdated\", \"customerid\", \"name\"\nFROM \"OrderCustomerRightExcluded_7\"",
      "fields" : [
        {
          "name" : "lastUpdated",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "name",
          "type" : "TEXT",
          "nullable" : false
        }
      ]
    },
    {
      "name" : "Orders",
      "type" : "VIEW",
      "sql" : "CREATE OR REPLACE VIEW \"Orders\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"Orders_8\"",
      "fields" : [
        {
          "name" : "id",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "customerid",
          "type" : "BIGINT",
          "nullable" : false
        },
        {
          "name" : "time",
          "type" : "TIMESTAMP WITH TIME ZONE",
          "nullable" : false
        },
        {
          "name" : "entries",
          "type" : "JSONB",
          "nullable" : true
        }
      ]
    }
  ]
}
>>>vertx.json
{ }
