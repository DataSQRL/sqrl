>>>pipeline_explain.txt
=== Customer
ID:     customer_2
Type:   stream
Stage:  flink
Primary Key: customerid, lastUpdated
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - lastUpdated: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[customer_1]])

=== Customer
ID:     customer_3
Type:   state
Stage:  flink
Inputs: customer_2
Primary Key: customerid
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - lastUpdated: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=customerid limit=1 sort=#4: timestamp TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC 
Plan:
LogicalTableScan(table=[[customer_2]])

=== OrderCustomer
ID:     ordercustomer_1
Type:   state
Stage:  flink
Inputs: customer_3, orders_3
Primary Key: id
Timestamp  : time
Schema:
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], name=[$7], customerid=[$1])
  LogicalJoin(condition=[=($1, $5)], joinType=[inner]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 1, RIGHT]]
    LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
      LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
        LogicalTableScan(table=[[orders_3]])
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS FIRST)])
        LogicalTableScan(table=[[customer_3]])

=== OrderCustomerConstant
ID:     ordercustomerconstant_1
Type:   state
Stage:  flink
Inputs: customer_3, orders_3
Primary Key: id
Timestamp  : time
Schema:
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], name=[$7], customerid=[$1])
  LogicalJoin(condition=[AND(=($1, $5), =($7, CAST('Robert'):VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL), >($0, 5))], joinType=[inner]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 2, RIGHT]]
    LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
      LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
        LogicalTableScan(table=[[orders_3]])
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS FIRST)])
        LogicalTableScan(table=[[customer_3]])

=== OrderCustomerLeft
ID:     ordercustomerleft_1
Type:   state
Stage:  flink
Inputs: customer_3, orders_3
Primary Key: id
Timestamp  : __timestamp
Schema:
 - lastUpdated: BIGINT
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - customerid: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
Plan:
LogicalProject(lastUpdated=[$8], id=[$0], name=[$7], customerid=[$1], __timestamp=[GREATEST($2, $9)])
  LogicalJoin(condition=[=($1, $5)], joinType=[left]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 1, RIGHT]]
    LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
      LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
        LogicalTableScan(table=[[orders_3]])
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS FIRST)])
        LogicalTableScan(table=[[customer_3]])

=== OrderCustomerLeftExcluded
ID:     ordercustomerleftexcluded_1
Type:   state
Stage:  flink
Inputs: customer_3, orders_3
Primary Key: id
Timestamp  : time
Schema:
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
Plan:
LogicalProject(time=[$2], id=[$0], customerid=[$1])
  LogicalFilter(condition=[IS NULL($5)])
    LogicalJoin(condition=[=($1, $5)], joinType=[left]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 1, RIGHT]]
      LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
        LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
          LogicalTableScan(table=[[orders_3]])
      LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
        LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS FIRST)])
          LogicalTableScan(table=[[customer_3]])

=== OrderCustomerRight
ID:     ordercustomerright_1
Type:   state
Stage:  flink
Inputs: customer_3, orders_3
Primary Key: _customerid0, ouuid
Timestamp  : __timestamp
Schema:
 - ouuid: BIGINT NOT NULL
 - id: BIGINT
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT
 - _customerid0: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
Plan:
LogicalProject(ouuid=[coalesce($6, 0:BIGINT)], id=[$6], name=[$2], customerid=[$7], _customerid0=[$0], __timestamp=[GREATEST($4, $8)])
  LogicalJoin(condition=[=($7, $0)], joinType=[left]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 1, LEFT]]
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS FIRST)])
        LogicalTableScan(table=[[customer_3]])
    LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
      LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
        LogicalTableScan(table=[[orders_3]])

=== OrderCustomerRightExcluded
ID:     ordercustomerrightexcluded_1
Type:   state
Stage:  flink
Inputs: customer_3, orders_3
Primary Key: customerid
Timestamp  : __timestamp
Schema:
 - lastUpdated: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
Plan:
LogicalProject(lastUpdated=[$3], customerid=[$0], name=[$2], __timestamp=[GREATEST($4, $8)])
  LogicalFilter(condition=[IS NULL($6)])
    LogicalJoin(condition=[=($7, $0)], joinType=[left]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 1, LEFT]]
      LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
        LogicalProject(customerid=[$0], email=[$1], name=[$2], lastUpdated=[$3], timestamp=[$4], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS FIRST)])
          LogicalTableScan(table=[[customer_3]])
      LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
        LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
          LogicalTableScan(table=[[orders_3]])

=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]])

=== Orders
ID:     orders_3
Type:   state
Stage:  flink
Inputs: orders_2
Primary Key: id
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Post Processors:
 - topN: partition=id limit=1 sort=#2: time TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC 
Plan:
LogicalTableScan(table=[[orders_2]])

=== Product
ID:     product_2
Type:   stream
Stage:  flink
Primary Key: productid, name, description, category
Timestamp  : _ingest_time
Schema:
 - productid: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - category: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _ingest_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[product_1]])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptostring` AS 'com.datasqrl.time.TimestampToString' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofmonth` AS 'com.datasqrl.time.EndOfMonth' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepochmilli` AS 'com.datasqrl.time.TimestampToEpochMilli' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofweek` AS 'com.datasqrl.time.EndOfWeek' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `parsetimestamp` AS 'com.datasqrl.time.ParseTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochmillitotimestamp` AS 'com.datasqrl.time.EpochMilliToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofminute` AS 'com.datasqrl.time.EndOfMinute' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepoch` AS 'com.datasqrl.time.TimestampToEpoch' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofsecond` AS 'com.datasqrl.time.EndOfSecond' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochtotimestamp` AS 'com.datasqrl.time.EpochToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `atzone` AS 'com.datasqrl.time.AtZone' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofday` AS 'com.datasqrl.time.EndOfDay' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofhour` AS 'com.datasqrl.time.EndOfHour' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofyear` AS 'com.datasqrl.time.EndOfYear' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `customer_1` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` AS EPOCHTOTIMESTAMP(`lastUpdated`),\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED,\n  WATERMARK FOR `timestamp` AS `timestamp` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED,\n  WATERMARK FOR `time` AS `time` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `product_1` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED,\n  WATERMARK FOR `_ingest_time` AS `_ingest_time` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `customer_3` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`customerid`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'customer_3',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomer_1` (\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomer_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerconstant_1` (\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerconstant_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerleft_1` (\n  `lastUpdated` BIGINT,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,\n  `customerid` BIGINT NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerleft_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerleftexcluded_1` (\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerleftexcluded_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerright_1` (\n  `ouuid` BIGINT NOT NULL,\n  `id` BIGINT,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT,\n  `_customerid0` BIGINT NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE,\n  PRIMARY KEY (`_customerid0`, `ouuid`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerright_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomerrightexcluded_1` (\n  `lastUpdated` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE,\n  PRIMARY KEY (`customerid`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomerrightexcluded_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orders_3` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_3',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `product_2` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'product_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM `customer_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT `t0`.`time`, `t0`.`id`, `t2`.`name`, `t0`.`customerid`\nFROM (SELECT *\n  FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n    FROM `orders_1`) AS `t`\n  WHERE `_rownum` = 1) AS `t0`\n INNER JOIN (SELECT *\n  FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC) AS `_rownum`\n    FROM `customer_1`) AS `t1`\n  WHERE `_rownum` = 1) AS `t2` ON `t0`.`customerid` = `t2`.`customerid`;",
    "CREATE VIEW `table$3`\nAS\nSELECT `t0`.`time`, `t0`.`id`, `t2`.`name`, `t0`.`customerid`\nFROM (SELECT *\n  FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n    FROM `orders_1`) AS `t`\n  WHERE `_rownum` = 1) AS `t0`\n INNER JOIN (SELECT *\n  FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC) AS `_rownum`\n    FROM `customer_1`) AS `t1`\n  WHERE `_rownum` = 1) AS `t2` ON `t0`.`customerid` = `t2`.`customerid` AND `t2`.`name` = CAST('Robert' AS VARCHAR(65536) CHARACTER SET `UTF-16LE`) AND `t0`.`id` > 5;",
    "CREATE VIEW `table$4`\nAS\nSELECT `t2`.`lastUpdated`, `t0`.`id`, `t2`.`name`, `t0`.`customerid`, GREATEST(`t0`.`time`, `t2`.`timestamp`) AS `__timestamp`\nFROM (SELECT *\n  FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n    FROM `orders_1`) AS `t`\n  WHERE `_rownum` = 1) AS `t0`\n LEFT JOIN (SELECT *\n  FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC) AS `_rownum`\n    FROM `customer_1`) AS `t1`\n  WHERE `_rownum` = 1) AS `t2` ON `t0`.`customerid` = `t2`.`customerid`;",
    "CREATE VIEW `table$5`\nAS\nSELECT `t0`.`time`, `t0`.`id`, `t0`.`customerid`\nFROM (SELECT *\n  FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n    FROM `orders_1`) AS `t`\n  WHERE `_rownum` = 1) AS `t0`\n LEFT JOIN (SELECT *\n  FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC) AS `_rownum`\n    FROM `customer_1`) AS `t1`\n  WHERE `_rownum` = 1) AS `t2` ON `t0`.`customerid` = `t2`.`customerid`\nWHERE `t2`.`customerid` IS NULL;",
    "CREATE VIEW `table$6`\nAS\nSELECT COALESCE(`t2`.`id`, 0) AS `ouuid`, `t2`.`id`, `t0`.`name`, `t2`.`customerid`, `t0`.`customerid` AS `_customerid0`, GREATEST(`t0`.`timestamp`, `t2`.`time`) AS `__timestamp`\nFROM (SELECT *\n  FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC) AS `_rownum`\n    FROM `customer_1`) AS `t`\n  WHERE `_rownum` = 1) AS `t0`\n LEFT JOIN (SELECT *\n  FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n    FROM `orders_1`) AS `t1`\n  WHERE `_rownum` = 1) AS `t2` ON `t0`.`customerid` = `t2`.`customerid`;",
    "CREATE VIEW `table$7`\nAS\nSELECT `t0`.`lastUpdated`, `t0`.`customerid`, `t0`.`name`, GREATEST(`t0`.`timestamp`, `t2`.`time`) AS `__timestamp`\nFROM (SELECT *\n  FROM (SELECT `customerid`, `email`, `name`, `lastUpdated`, `timestamp`, ROW_NUMBER() OVER (PARTITION BY `customerid` ORDER BY `timestamp` DESC) AS `_rownum`\n    FROM `customer_1`) AS `t`\n  WHERE `_rownum` = 1) AS `t0`\n LEFT JOIN (SELECT *\n  FROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n    FROM `orders_1`) AS `t1`\n  WHERE `_rownum` = 1) AS `t2` ON `t0`.`customerid` = `t2`.`customerid`\nWHERE `t2`.`id` IS NULL;",
    "CREATE VIEW `table$8`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`\nFROM `orders_1`;",
    "CREATE VIEW `table$9`\nAS\nSELECT *\nFROM `product_1`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `customer_3`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `ordercustomer_1`\n (SELECT *\n  FROM `table$2`)\n ;\n INSERT INTO `ordercustomerconstant_1`\n  (SELECT *\n   FROM `table$3`)\n  ;\n  INSERT INTO `ordercustomerleft_1`\n   (SELECT *\n    FROM `table$4`)\n   ;\n   INSERT INTO `ordercustomerleftexcluded_1`\n    (SELECT *\n     FROM `table$5`)\n    ;\n    INSERT INTO `ordercustomerright_1`\n     (SELECT *\n      FROM `table$6`)\n     ;\n     INSERT INTO `ordercustomerrightexcluded_1`\n      (SELECT *\n       FROM `table$7`)\n      ;\n      INSERT INTO `orders_3`\n       (SELECT *\n        FROM `table$8`)\n       ;\n       INSERT INTO `product_2`\n        (SELECT *\n         FROM `table$9`)\n        ;\n        END;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "filesystem"
  ],
  "formats" : [
    "json"
  ]
}
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "customer_3",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"email\" TEXT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"lastUpdated\" BIGINT NOT NULL",
        "\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS customer_3 (\"customerid\" BIGINT NOT NULL,\"email\" TEXT NOT NULL,\"name\" TEXT NOT NULL,\"lastUpdated\" BIGINT NOT NULL,\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"customerid\"));"
    },
    {
      "name" : "ordercustomer_1",
      "columns" : [
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomer_1 (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "ordercustomerconstant_1",
      "columns" : [
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerconstant_1 (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "ordercustomerleft_1",
      "columns" : [
        "\"lastUpdated\" BIGINT ",
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT ",
        "\"customerid\" BIGINT NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE "
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerleft_1 (\"lastUpdated\" BIGINT ,\"id\" BIGINT NOT NULL,\"name\" TEXT ,\"customerid\" BIGINT NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE  , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "ordercustomerleftexcluded_1",
      "columns" : [
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerleftexcluded_1 (\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "ordercustomerright_1",
      "columns" : [
        "\"ouuid\" BIGINT NOT NULL",
        "\"id\" BIGINT ",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT ",
        "\"_customerid0\" BIGINT NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE "
      ],
      "primaryKeys" : [
        "\"_customerid0\"",
        "\"ouuid\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerright_1 (\"ouuid\" BIGINT NOT NULL,\"id\" BIGINT ,\"name\" TEXT NOT NULL,\"customerid\" BIGINT ,\"_customerid0\" BIGINT NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE  , PRIMARY KEY (\"_customerid0\",\"ouuid\"));"
    },
    {
      "name" : "ordercustomerrightexcluded_1",
      "columns" : [
        "\"lastUpdated\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE "
      ],
      "primaryKeys" : [
        "\"customerid\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomerrightexcluded_1 (\"lastUpdated\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE  , PRIMARY KEY (\"customerid\"));"
    },
    {
      "name" : "orders_3",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_3 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "product_2",
      "columns" : [
        "\"productid\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"description\" TEXT NOT NULL",
        "\"category\" TEXT NOT NULL",
        "\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"productid\"",
        "\"name\"",
        "\"description\"",
        "\"category\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS product_2 (\"productid\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"description\" TEXT NOT NULL,\"category\" TEXT NOT NULL,\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"productid\",\"name\",\"description\",\"category\"));"
    },
    {
      "indexName" : "ordercustomerright_1_hash_c0",
      "tableName" : "ordercustomerright_1",
      "columns" : [
        "ouuid"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS ordercustomerright_1_hash_c0 ON ordercustomerright_1 USING hash (\"ouuid\");"
    },
    {
      "indexName" : "product_2_btree_c0c2",
      "tableName" : "product_2",
      "columns" : [
        "productid",
        "description"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c0c2 ON product_2 USING btree (\"productid\",\"description\");"
    },
    {
      "indexName" : "product_2_btree_c1c2c3",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "description",
        "category"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c2c3 ON product_2 USING btree (\"name\",\"description\",\"category\");"
    },
    {
      "indexName" : "product_2_btree_c1c3c0",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c3c0 ON product_2 USING btree (\"name\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c2c3c0",
      "tableName" : "product_2",
      "columns" : [
        "description",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c2c3c0 ON product_2 USING btree (\"description\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c3c0",
      "tableName" : "product_2",
      "columns" : [
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c3c0 ON product_2 USING btree (\"category\",\"productid\");"
    }
  ],
  "views" : [
    {
      "name" : "Product",
      "sql" : "CREATE OR REPLACE VIEW \"Product\"(\"productid\", \"name\", \"description\", \"category\", \"_ingest_time\") AS SELECT *\nFROM \"product_2\"\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\", \"category\";"
    },
    {
      "name" : "Customer",
      "sql" : "CREATE OR REPLACE VIEW \"Customer\"(\"customerid\", \"email\", \"name\", \"lastUpdated\", \"timestamp\") AS SELECT *\nFROM \"customer_3\"\nORDER BY \"customerid\";"
    },
    {
      "name" : "OrderCustomerRightExcluded",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerRightExcluded\"(\"lastUpdated\", \"customerid\", \"name\", \"__timestamp\") AS SELECT *\nFROM \"ordercustomerrightexcluded_1\"\nORDER BY \"customerid\";"
    },
    {
      "name" : "OrderCustomerLeftExcluded",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerLeftExcluded\"(\"time\", \"id\", \"customerid\") AS SELECT *\nFROM \"ordercustomerleftexcluded_1\"\nORDER BY \"id\";"
    },
    {
      "name" : "Orders",
      "sql" : "CREATE OR REPLACE VIEW \"Orders\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"orders_3\"\nORDER BY \"id\";"
    },
    {
      "name" : "OrderCustomer",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomer\"(\"time\", \"id\", \"name\", \"customerid\") AS SELECT *\nFROM \"ordercustomer_1\"\nORDER BY \"id\";"
    },
    {
      "name" : "OrderCustomerConstant",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerConstant\"(\"time\", \"id\", \"name\", \"customerid\") AS SELECT *\nFROM \"ordercustomerconstant_1\"\nORDER BY \"id\";"
    },
    {
      "name" : "OrderCustomerRight",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerRight\"(\"ouuid\", \"id\", \"name\", \"customerid\", \"_customerid0\", \"__timestamp\") AS SELECT *\nFROM \"ordercustomerright_1\"\nORDER BY \"_customerid0\", \"ouuid\";"
    },
    {
      "name" : "OrderCustomerLeft",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomerLeft\"(\"lastUpdated\", \"id\", \"name\", \"customerid\", \"__timestamp\") AS SELECT *\nFROM \"ordercustomerleft_1\"\nORDER BY \"id\";"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Customer",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_3\"\nORDER BY \"customerid\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_3\"\nWHERE \"customerid\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomer",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer_1\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerConstant",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerconstant_1\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerconstant_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerLeft",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleft_1\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleft_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerLeftExcluded",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleftexcluded_1\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerleftexcluded_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerRight",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerright_1\"\nORDER BY \"_customerid0\", \"ouuid\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "ouuid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerright_1\"\nWHERE \"ouuid\" = $1\nORDER BY \"_customerid0\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "ouuid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomerRightExcluded",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerrightexcluded_1\"\nWHERE \"customerid\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomerrightexcluded_1\"\nORDER BY \"customerid\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_3\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_3\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Product",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"category\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\", \"category\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3 AND \"category\" = $4\nORDER BY \"_ingest_time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "type Customer {\n  customerid: Float!\n  email: String!\n  name: String!\n  lastUpdated: Float!\n  timestamp: DateTime!\n}\n\n\"An RFC-3339 compliant Full Date Scalar\"\nscalar Date\n\n\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\n\"A JSON scalar\"\nscalar JSON\n\n\"24-hour clock time value string in the format `hh:mm:ss` or `hh:mm:ss.sss`.\"\nscalar LocalTime\n\ntype OrderCustomer {\n  time: DateTime!\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomerConstant {\n  time: DateTime!\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomerLeft {\n  lastUpdated: Float\n  id: Float!\n  name: String\n  customerid: Float!\n}\n\ntype OrderCustomerLeftExcluded {\n  time: DateTime!\n  id: Float!\n  customerid: Float!\n}\n\ntype OrderCustomerRight {\n  ouuid: Float!\n  id: Float\n  name: String!\n  customerid: Float\n}\n\ntype OrderCustomerRightExcluded {\n  lastUpdated: Float!\n  customerid: Float!\n  name: String!\n}\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype Product {\n  productid: Float!\n  name: String!\n  description: String!\n  category: String!\n}\n\ntype Query {\n  Customer(customerid: Float, limit: Int = 10, offset: Int = 0): [Customer!]\n  OrderCustomer(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomer!]\n  OrderCustomerConstant(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerConstant!]\n  OrderCustomerLeft(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerLeft!]\n  OrderCustomerLeftExcluded(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerLeftExcluded!]\n  OrderCustomerRight(ouuid: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerRight!]\n  OrderCustomerRightExcluded(customerid: Float, limit: Int = 10, offset: Int = 0): [OrderCustomerRightExcluded!]\n  Orders(id: Float, limit: Int = 10, offset: Int = 0): [Orders!]\n  Product(productid: Float, name: String, description: String, category: String, limit: Int = 10, offset: Int = 0): [Product!]\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n"
    }
  }
}
