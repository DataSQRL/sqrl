>>>pipeline_explain.txt
=== Package
ID:     default_catalog.default_database.Package
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.Submission
Primary Key: name
Timestamp  : -
Schema:
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
Plan:
LogicalAggregate(group=[{0}])
  LogicalProject(name=[$0])
    LogicalTableScan(table=[[default_catalog, default_database, Submission]])
SQL: CREATE VIEW Package AS  SELECT DISTINCT name FROM Submission;

=== Submission
ID:     default_catalog.default_database.Submission
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._SubmissionRaw
Primary Key: -
Timestamp  : event_time
Schema:
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - version: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - variant: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - latest: BOOLEAN NOT NULL
 - type: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - license: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - repository: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - homepage: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - documentation: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - readme: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - keywords: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL ARRAY NOT NULL
 - uniqueId: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - file: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - hash: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - authorId: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - submissionTime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - event_time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - variant0: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - repoURL: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
Plan:
LogicalProject(name=[$0], version=[$1], variant=[$2], latest=[$3], type=[$4], license=[$5], repository=[$6], homepage=[$7], documentation=[$8], readme=[$9], description=[$10], keywords=[$11], uniqueId=[$12], file=[$13], hash=[$14], authorId=[$15], submissionTime=[$16], event_time=[$17], variant0=[COALESCE($2, 'default')], repoURL=[CONCAT('https://repository.datasqrl.com/', $13)])
  LogicalTableScan(table=[[default_catalog, default_database, _SubmissionRaw]])
SQL: CREATE VIEW Submission AS  SELECT *,  COALESCE(variant, 'default') AS variant0,
                     concat('https://repository.datasqrl.com/',file) AS repoURL
              FROM _SubmissionRaw;

=== SubmissionTopics
ID:     default_catalog.default_database.SubmissionTopics
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database.Submission
Primary Key: -
Timestamp  : -
Schema:
 - pkgName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - topicName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - submissionTime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalProject(pkgName=[$0], topicName=[$20], submissionTime=[$16])
  LogicalCorrelate(correlation=[$cor1], joinType=[inner], requiredColumns=[{11}])
    LogicalTableScan(table=[[default_catalog, default_database, Submission]])
    LogicalProject(name=[$0])
      Uncollect
        LogicalProject(keywords=[$cor1.keywords])
          LogicalValues(tuples=[[{ 0 }]])
SQL: CREATE VIEW SubmissionTopics AS  SELECT s.name AS pkgName, k.name AS topicName, s.submissionTime
                    FROM Submission s CROSS JOIN UNNEST(keywords) k(name);

=== TopicPackages
ID:     default_catalog.default_database.TopicPackages
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.SubmissionTopics
Annotations:
 - sort: [2 DESC-nulls-last, 0 ASC-nulls-first]
Primary Key: pkgName, topicName
Timestamp  : -
Schema:
 - pkgName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - topicName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - numSubmissions: BIGINT NOT NULL
 - lastSubmission: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalAggregate(group=[{0, 1}], numSubmissions=[COUNT()], lastSubmission=[MAX($2)])
  LogicalProject(pkgName=[$0], topicName=[$1], submissionTime=[$2])
    LogicalTableScan(table=[[default_catalog, default_database, SubmissionTopics]])
SQL: CREATE VIEW TopicPackages AS  SELECT pkgName, topicName, COUNT(1) AS numSubmissions, MAX(submissionTime) AS lastSubmission
                 FROM SubmissionTopics
                 GROUP BY pkgName, topicName ORDER BY numSubmissions DESC, pkgName ASC;

=== TopicSearch
ID:     default_catalog.default_database.TopicSearch
Type:   state
Stage:  flink
Inputs: default_catalog.default_database.SubmissionTopics
Annotations:
 - sort: [1 DESC-nulls-last, 0 ASC-nulls-first]
Primary Key: topicName
Timestamp  : -
Schema:
 - topicName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - numPackages: BIGINT NOT NULL
Plan:
LogicalAggregate(group=[{0}], numPackages=[COUNT(DISTINCT $1)])
  LogicalProject(topicName=[$1], pkgName=[$0])
    LogicalTableScan(table=[[default_catalog, default_database, SubmissionTopics]])
SQL: CREATE VIEW TopicSearch AS  SELECT topicName, COUNT(DISTINCT pkgName) AS numPackages
               FROM SubmissionTopics
               GROUP BY topicName ORDER BY numPackages DESC, topicName ASC;

=== _SubmissionRaw
ID:     default_catalog.default_database._SubmissionRaw
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._SubmissionRaw__base
Primary Key: -
Timestamp  : event_time
Schema:
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - version: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - variant: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - latest: BOOLEAN NOT NULL
 - type: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - license: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - repository: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - homepage: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - documentation: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - readme: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - keywords: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL ARRAY NOT NULL
 - uniqueId: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - file: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - hash: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - authorId: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - submissionTime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - event_time: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
Plan:
LogicalWatermarkAssigner(rowtime=[event_time], watermark=[-($17, 1:INTERVAL SECOND)])
  LogicalProject(name=[$0], version=[$1], variant=[$2], latest=[$3], type=[$4], license=[$5], repository=[$6], homepage=[$7], documentation=[$8], readme=[$9], description=[$10], keywords=[$11], uniqueId=[$12], file=[$13], hash=[$14], authorId=[$15], submissionTime=[$16], event_time=[NOW()])
    LogicalTableScan(table=[[default_catalog, default_database, _SubmissionRaw]])
SQL: CREATE VIEW `_SubmissionRaw__view`
AS
SELECT `_SubmissionRaw`.`name`, `_SubmissionRaw`.`version`, `_SubmissionRaw`.`variant`, `_SubmissionRaw`.`latest`, `_SubmissionRaw`.`type`, `_SubmissionRaw`.`license`, `_SubmissionRaw`.`repository`, `_SubmissionRaw`.`homepage`, `_SubmissionRaw`.`documentation`, `_SubmissionRaw`.`readme`, `_SubmissionRaw`.`description`, `_SubmissionRaw`.`keywords`, `_SubmissionRaw`.`uniqueId`, `_SubmissionRaw`.`file`, `_SubmissionRaw`.`hash`, `_SubmissionRaw`.`authorId`, `_SubmissionRaw`.`submissionTime`, `_SubmissionRaw`.`event_time`
FROM `default_catalog`.`default_database`.`_SubmissionRaw` AS `_SubmissionRaw`
>>>flink-sql-no-functions.sql
CREATE TABLE `_SubmissionRaw` (
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `version` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `variant` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `latest` BOOLEAN NOT NULL,
  `type` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `license` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `repository` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `homepage` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `documentation` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `readme` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `keywords` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL ARRAY NOT NULL,
  `uniqueId` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `file` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `hash` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `authorId` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `submissionTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `event_time` AS `NOW`(),
  WATERMARK FOR `event_time` AS `event_time` - INTERVAL '0.001' SECOND
) WITH (
  'connector' = 'filesystem',
  'format' = 'flexible-json',
  'path' = '${DATA_PATH}/submission.jsonl',
  'source.monitor-interval' = '10 sec'
);
CREATE VIEW `Submission`
AS
SELECT *, COALESCE(`variant`, 'default') AS `variant0`, `concat`('https://repository.datasqrl.com/', `file`) AS `repoURL`
FROM `_SubmissionRaw`;
CREATE VIEW `Package`
AS
SELECT DISTINCT `name`
FROM `Submission`;
CREATE VIEW `SubmissionTopics`
AS
SELECT `s`.`name` AS `pkgName`, `k`.`name` AS `topicName`, `s`.`submissionTime`
FROM `Submission` AS `s`
 CROSS JOIN UNNEST(`keywords`) AS `k` (`name`);
CREATE VIEW `TopicPackages`
AS
SELECT `pkgName`, `topicName`, COUNT(1) AS `numSubmissions`, MAX(`submissionTime`) AS `lastSubmission`
FROM `SubmissionTopics`
GROUP BY `pkgName`, `topicName`;
CREATE VIEW `TopicSearch`
AS
SELECT `topicName`, COUNT(DISTINCT `pkgName`) AS `numPackages`
FROM `SubmissionTopics`
GROUP BY `topicName`;
CREATE TABLE `Package_1` (
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  PRIMARY KEY (`name`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'Package_1',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `Submission_2` (
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `version` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `variant` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `latest` BOOLEAN NOT NULL,
  `type` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `license` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `repository` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `homepage` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `documentation` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `readme` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `keywords` RAW('com.datasqrl.flinkrunner.stdlib.json.FlinkJsonType', 'AERjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIuc3RkbGliLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXJTbmFwc2hvdAAAAAM='),
  `uniqueId` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `file` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `hash` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `authorId` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `submissionTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `event_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `variant0` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `repoURL` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `__pk_hash` CHAR(32) CHARACTER SET `UTF-16LE`,
  PRIMARY KEY (`__pk_hash`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'Submission_2',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `SubmissionTopics_3` (
  `pkgName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `topicName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `submissionTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `__pk_hash` CHAR(32) CHARACTER SET `UTF-16LE`,
  PRIMARY KEY (`__pk_hash`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'SubmissionTopics_3',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `TopicPackages_4` (
  `pkgName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `topicName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `numSubmissions` BIGINT NOT NULL,
  `lastSubmission` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  PRIMARY KEY (`pkgName`, `topicName`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'TopicPackages_4',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
CREATE TABLE `TopicSearch_5` (
  `topicName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `numPackages` BIGINT NOT NULL,
  PRIMARY KEY (`topicName`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'password' = '${JDBC_PASSWORD}',
  'table-name' = 'TopicSearch_5',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'username' = '${JDBC_USERNAME}'
);
EXECUTE STATEMENT SET BEGIN
INSERT INTO `default_catalog`.`default_database`.`Package_1`
(SELECT *
 FROM `default_catalog`.`default_database`.`Package`)
;
INSERT INTO `default_catalog`.`default_database`.`Submission_2`
 (SELECT `name`, `version`, `variant`, `latest`, `type`, `license`, `repository`, `homepage`, `documentation`, `readme`, `description`, `to_jsonb`(`keywords`) AS `keywords`, `uniqueId`, `file`, `hash`, `authorId`, `submissionTime`, `event_time`, `variant0`, `repoURL`, `hash_columns`(`name`, `version`, `variant`, `latest`, `type`, `license`, `repository`, `homepage`, `documentation`, `readme`, `description`, `keywords`, `uniqueId`, `file`, `hash`, `authorId`, `submissionTime`, `event_time`, `variant0`, `repoURL`) AS `__pk_hash`
  FROM `default_catalog`.`default_database`.`Submission`)
 ;
 INSERT INTO `default_catalog`.`default_database`.`SubmissionTopics_3`
  (SELECT `pkgName`, `topicName`, `submissionTime`, `hash_columns`(`pkgName`, `topicName`, `submissionTime`) AS `__pk_hash`
   FROM `default_catalog`.`default_database`.`SubmissionTopics`)
  ;
  INSERT INTO `default_catalog`.`default_database`.`TopicPackages_4`
   (SELECT *
    FROM `default_catalog`.`default_database`.`TopicPackages`)
   ;
   INSERT INTO `default_catalog`.`default_database`.`TopicSearch_5`
    (SELECT *
     FROM `default_catalog`.`default_database`.`TopicSearch`)
    ;
    END
>>>postgres-schema.sql
CREATE TABLE IF NOT EXISTS "Package_1" ("name" TEXT NOT NULL , PRIMARY KEY ("name"));
CREATE TABLE IF NOT EXISTS "Submission_2" ("name" TEXT NOT NULL, "version" TEXT NOT NULL, "variant" TEXT NOT NULL, "latest" BOOLEAN NOT NULL, "type" TEXT NOT NULL, "license" TEXT NOT NULL, "repository" TEXT NOT NULL, "homepage" TEXT NOT NULL, "documentation" TEXT NOT NULL, "readme" TEXT NOT NULL, "description" TEXT NOT NULL, "keywords" JSONB , "uniqueId" TEXT NOT NULL, "file" TEXT NOT NULL, "hash" TEXT NOT NULL, "authorId" TEXT NOT NULL, "submissionTime" TIMESTAMP WITH TIME ZONE NOT NULL, "event_time" TIMESTAMP WITH TIME ZONE NOT NULL, "variant0" TEXT NOT NULL, "repoURL" TEXT NOT NULL, "__pk_hash" TEXT  , PRIMARY KEY ("__pk_hash"));
CREATE TABLE IF NOT EXISTS "SubmissionTopics_3" ("pkgName" TEXT NOT NULL, "topicName" TEXT NOT NULL, "submissionTime" TIMESTAMP WITH TIME ZONE NOT NULL, "__pk_hash" TEXT  , PRIMARY KEY ("__pk_hash"));
CREATE TABLE IF NOT EXISTS "TopicPackages_4" ("pkgName" TEXT NOT NULL, "topicName" TEXT NOT NULL, "numSubmissions" BIGINT NOT NULL, "lastSubmission" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY ("pkgName","topicName"));
CREATE TABLE IF NOT EXISTS "TopicSearch_5" ("topicName" TEXT NOT NULL, "numPackages" BIGINT NOT NULL , PRIMARY KEY ("topicName"));

CREATE INDEX IF NOT EXISTS "Submission_2_btree_c0c1c2" ON "Submission_2" USING btree ("name","version","variant");
CREATE INDEX IF NOT EXISTS "Submission_2_btree_c0c2" ON "Submission_2" USING btree ("name","variant");
CREATE INDEX IF NOT EXISTS "Submission_2_btree_c0c3" ON "Submission_2" USING btree ("name","latest")
>>>postgres-views.sql
CREATE OR REPLACE VIEW "Submission"("name", "version", "variant", "latest", "type", "license", "repository", "homepage", "documentation", "readme", "description", "keywords", "uniqueId", "file", "hash", "authorId", "submissionTime", "event_time", "variant0", "repoURL") AS SELECT "name", "version", "variant", "latest", "type", "license", "repository", "homepage", "documentation", "readme", "description", "keywords", "uniqueId", "file", "hash", "authorId", "submissionTime", "event_time", "variant0", "repoURL"
FROM "Submission_2";
CREATE OR REPLACE VIEW "SubmissionTopics"("pkgName", "topicName", "submissionTime") AS SELECT "pkgName", "topicName", "submissionTime"
FROM "SubmissionTopics_3"
>>>vertx.json
{
  "model" : {
    "queries" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Package",
        "exec" : {
          "arguments" : [
            {
              "type" : "variable",
              "path" : "offset"
            },
            {
              "type" : "variable",
              "path" : "name"
            },
            {
              "type" : "variable",
              "path" : "limit"
            }
          ],
          "query" : {
            "type" : "SqlQuery",
            "sql" : "SELECT *\nFROM \"Package_1\"\nWHERE \"name\" = $1 OR $1 IS NULL",
            "parameters" : [
              {
                "type" : "arg",
                "path" : "name"
              }
            ],
            "pagination" : "LIMIT_AND_OFFSET",
            "database" : "POSTGRES"
          }
        }
      },
      {
        "type" : "args",
        "parentType" : "Package",
        "fieldName" : "latest",
        "exec" : {
          "arguments" : [ ],
          "query" : {
            "type" : "SqlQuery",
            "sql" : "SELECT *\nFROM (SELECT \"name\", \"version\", \"variant\", \"latest\", \"type\", \"license\", \"repository\", \"homepage\", \"documentation\", \"readme\", \"description\", \"keywords\", \"uniqueId\", \"file\", \"hash\", \"authorId\", \"submissionTime\", \"event_time\", \"variant0\", \"repoURL\"\n  FROM \"Submission_2\") AS \"t\"\nWHERE $1 = \"name\" AND \"latest\" = TRUE\nORDER BY \"submissionTime\" DESC NULLS LAST\nFETCH NEXT 1 ROWS ONLY",
            "parameters" : [
              {
                "type" : "source",
                "key" : "name"
              }
            ],
            "pagination" : "NONE",
            "database" : "POSTGRES"
          }
        }
      },
      {
        "type" : "args",
        "parentType" : "Package",
        "fieldName" : "versions",
        "exec" : {
          "arguments" : [
            {
              "type" : "variable",
              "path" : "offset"
            },
            {
              "type" : "variable",
              "path" : "version"
            },
            {
              "type" : "variable",
              "path" : "variant"
            },
            {
              "type" : "variable",
              "path" : "limit"
            }
          ],
          "query" : {
            "type" : "SqlQuery",
            "sql" : "SELECT *\nFROM (SELECT \"name\", \"version\", \"variant\", \"latest\", \"type\", \"license\", \"repository\", \"homepage\", \"documentation\", \"readme\", \"description\", \"keywords\", \"uniqueId\", \"file\", \"hash\", \"authorId\", \"submissionTime\", \"event_time\", \"variant0\", \"repoURL\"\n  FROM \"Submission_2\") AS \"t\"\nWHERE $3 = \"name\" AND ($1 IS NULL OR $1 = \"version\") AND ($2 IS NULL OR $2 = \"variant\")\nORDER BY \"submissionTime\" DESC NULLS LAST",
            "parameters" : [
              {
                "type" : "arg",
                "path" : "version"
              },
              {
                "type" : "arg",
                "path" : "variant"
              },
              {
                "type" : "source",
                "key" : "name"
              }
            ],
            "pagination" : "LIMIT_AND_OFFSET",
            "database" : "POSTGRES"
          }
        }
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "TopicSearch",
        "exec" : {
          "arguments" : [
            {
              "type" : "variable",
              "path" : "offset"
            },
            {
              "type" : "variable",
              "path" : "topicName"
            },
            {
              "type" : "variable",
              "path" : "limit"
            }
          ],
          "query" : {
            "type" : "SqlQuery",
            "sql" : "SELECT *\nFROM (SELECT \"topicName\", \"numPackages\"\n  FROM \"TopicSearch_5\"\n  ORDER BY \"numPackages\" DESC NULLS LAST, \"topicName\" NULLS FIRST) AS \"t\"\nWHERE \"topicName\" = $1 OR $1 IS NULL",
            "parameters" : [
              {
                "type" : "arg",
                "path" : "topicName"
              }
            ],
            "pagination" : "LIMIT_AND_OFFSET",
            "database" : "POSTGRES"
          }
        }
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "TopicPackages",
        "exec" : {
          "arguments" : [
            {
              "type" : "variable",
              "path" : "offset"
            },
            {
              "type" : "variable",
              "path" : "topicName"
            },
            {
              "type" : "variable",
              "path" : "limit"
            }
          ],
          "query" : {
            "type" : "SqlQuery",
            "sql" : "SELECT *\nFROM (SELECT \"pkgName\", \"topicName\", \"numSubmissions\", \"lastSubmission\"\n  FROM \"TopicPackages_4\"\n  ORDER BY \"numSubmissions\" DESC NULLS LAST, \"pkgName\" NULLS FIRST) AS \"t\"\nWHERE \"topicName\" = $1",
            "parameters" : [
              {
                "type" : "arg",
                "path" : "topicName"
              }
            ],
            "pagination" : "LIMIT_AND_OFFSET",
            "database" : "POSTGRES"
          }
        }
      },
      {
        "type" : "args",
        "parentType" : "TopicPackages",
        "fieldName" : "latest",
        "exec" : {
          "arguments" : [ ],
          "query" : {
            "type" : "SqlQuery",
            "sql" : "SELECT *\nFROM (SELECT \"name\", \"version\", \"variant\", \"latest\", \"type\", \"license\", \"repository\", \"homepage\", \"documentation\", \"readme\", \"description\", \"keywords\", \"uniqueId\", \"file\", \"hash\", \"authorId\", \"submissionTime\", \"event_time\", \"variant0\", \"repoURL\"\n  FROM \"Submission_2\") AS \"t\"\nWHERE $1 = \"name\" AND \"latest\" = TRUE\nORDER BY \"submissionTime\" DESC NULLS LAST\nFETCH NEXT 1 ROWS ONLY",
            "parameters" : [
              {
                "type" : "source",
                "key" : "pkgName"
              }
            ],
            "pagination" : "NONE",
            "database" : "POSTGRES"
          }
        }
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "schema" : "type Package {\n  name: String!\n  latest: Submission\n  versions(version: String!, variant: String!, limit: Int = 10, offset: Int = 0): [Submission!]\n}\n\ntype Query {\n  Package(name: String!, limit: Int = 10, offset: Int = 0): [Package!]\n  TopicSearch(topicName: String, limit: Int = 10, offset: Int = 0): [TopicSearch!]\n  TopicPackages(topicName: String!, limit: Int = 10, offset: Int = 0): [TopicPackages!]\n}\n\ntype Submission {\n  name: String!\n  version: String!\n  variant: String!\n  latest: Boolean!\n  type: String\n  license: String\n  repository: String\n  homepage: String\n  documentation: String\n  readme: String\n  description: String\n  uniqueId: String!\n  keywords: [String!]\n  repoURL: String!\n  file: String!\n  hash: String!\n  submissionTime: String!\n}\n\ntype TopicSearch {\n  topicName: String!\n  numPackages: Int!\n}\n\ntype TopicPackages {\n  topicName: String!\n  pkgName: String!\n  lastSubmission: String!\n  numSubmissions: Int!\n  latest: Submission\n}"
    }
  }
}
