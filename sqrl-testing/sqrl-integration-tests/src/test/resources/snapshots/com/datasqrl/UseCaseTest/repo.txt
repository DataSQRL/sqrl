>>>pipeline_explain.txt
=== Package
ID:     package$1
Type:   state
Stage:  streams
Inputs: submission$2
Primary Key: name
Timestamp  : _submissionTime
Schema:
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _submissionTime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=name limit=1 sort=#1: _submissionTime TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last 
Plan:
LogicalProject(name=[$0], _submissionTime=[$15])
  LogicalTableScan(table=[[submission$2]])

=== Submission
ID:     submission$2
Type:   stream
Stage:  streams
Primary Key: _uuid, submissionTime
Timestamp  : submissionTime
Schema:
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - version: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - variant: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - latest: BOOLEAN NOT NULL
 - type: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - license: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - repository: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - homepage: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - documentation: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - readme: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - uniqueId: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - file: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - hash: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - authorid: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - submissionTime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - keywords: RecordType(INTEGER NOT NULL _idx, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL name) NOT NULL ARRAY NOT NULL
 - _uuid: CHAR(36) CHARACTER SET "UTF-16LE" NOT NULL
 - variant0: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - repoURL: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
Plan:
LogicalProject(name=[$0], version=[$1], variant=[$2], latest=[$3], type=[$4], license=[$5], repository=[$6], homepage=[$7], documentation=[$8], readme=[$9], description=[$10], uniqueId=[$11], file=[$12], hash=[$13], authorid=[$14], submissionTime=[$15], keywords=[$16], _uuid=[$17], variant0=[COALESCE($2, 'default')], repoURL=[CONCAT('https://repository.datasqrl.com/', $12)]) hints[WatermarkHint options:[15]]
  LogicalTableScan(table=[[submission$1]])

=== TopicPackages
ID:     topicpackages$1
Type:   state
Stage:  streams
Inputs: submission$2
Primary Key: pkgName, topicName
Timestamp  : lastSubmission
Schema:
 - pkgName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - topicName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - numSubmissions: BIGINT NOT NULL
 - lastSubmission: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - sort: #2: numSubmissions BIGINT DESC
Plan:
LogicalAggregate(group=[{0, 1}], numSubmissions=[COUNT()], lastSubmission=[MAX($2)])
  LogicalProject(pkgName=[$0], topicName=[$21], submissionTime=[$15], _uuid=[$17], _idx=[$20])
    LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{16}])
      LogicalTableScan(table=[[submission$2]])
      LogicalTableFunctionScan(invocation=[Submission.keywords($cor0.keywords)], rowType=[RecordType(INTEGER _idx, VARCHAR(2147483647) name)], elementType=[class [Ljava.lang.Object;])

=== TopicSearch
ID:     topicsearch$1
Type:   state
Stage:  streams
Inputs: submission$2
Primary Key: topicName
Timestamp  : __timestamp
Schema:
 - topicName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - numPackages: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - sort: #1: numPackages BIGINT DESC
Plan:
LogicalAggregate(group=[{0}], numPackages=[COUNT()], __timestamp=[MAX($2)])
  LogicalProject(topicName=[$21], _uuid=[$17], submissionTime=[$15], _idx=[$20])
    LogicalCorrelate(correlation=[$cor1], joinType=[inner], requiredColumns=[{16}])
      LogicalTableScan(table=[[submission$2]])
      LogicalTableFunctionScan(invocation=[Submission.keywords($cor1.keywords)], rowType=[RecordType(INTEGER _idx, VARCHAR(2147483647) name)], elementType=[class [Ljava.lang.Object;])

>>>schema.graphqls
"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

type Package {
  name: String!
  latest(limit: Int = 10, offset: Int = 0): [Submission!]
  versions(limit: Int = 10, offset: Int = 0): [Submission!]
}

type Query {
  Package(name: String, limit: Int = 10, offset: Int = 0): [Package!]
  Submission(submissionTime: DateTime, limit: Int = 10, offset: Int = 0): [Submission!]
  TopicPackages(pkgName: String, topicName: String, limit: Int = 10, offset: Int = 0): [TopicPackages!]
  TopicSearch(topicName: String, limit: Int = 10, offset: Int = 0): [TopicSearch!]
}

type Submission {
  name: String!
  version: String!
  variant: String
  latest: Boolean!
  type: String
  license: String
  repository: String
  homepage: String
  documentation: String
  readme: String
  description: String
  uniqueId: String!
  file: String!
  hash: String!
  authorid: String!
  submissionTime: DateTime!
  variant0: String!
  repoURL: String!
  keywords(limit: Int = 10, offset: Int = 0): [keywords!]
}

type TopicPackages {
  pkgName: String!
  topicName: String!
  numSubmissions: Float!
  lastSubmission: DateTime!
  latest(limit: Int = 10, offset: Int = 0): [Submission!]
}

type TopicSearch {
  topicName: String!
  numPackages: Float!
}

type keywords {
  name: String!
}

>>>database-schema.sql
CREATE TABLE IF NOT EXISTS package$1 ("name" TEXT NOT NULL,"_submissionTime" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY ("name"));
CREATE TABLE IF NOT EXISTS submission$2 ("name" TEXT NOT NULL,"version" TEXT NOT NULL,"variant" TEXT ,"latest" BOOLEAN NOT NULL,"type" TEXT ,"license" TEXT ,"repository" TEXT ,"homepage" TEXT ,"documentation" TEXT ,"readme" TEXT ,"description" TEXT ,"uniqueId" TEXT NOT NULL,"file" TEXT NOT NULL,"hash" TEXT NOT NULL,"authorid" TEXT NOT NULL,"submissionTime" TIMESTAMP WITH TIME ZONE NOT NULL,"keywords" JSONB NOT NULL,"_uuid" TEXT NOT NULL,"variant0" TEXT NOT NULL,"repoURL" TEXT NOT NULL , PRIMARY KEY ("_uuid","submissionTime"));
CREATE TABLE IF NOT EXISTS topicpackages$1 ("pkgName" TEXT NOT NULL,"topicName" TEXT NOT NULL,"numSubmissions" BIGINT NOT NULL,"lastSubmission" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY ("pkgName","topicName"));
CREATE TABLE IF NOT EXISTS topicsearch$1 ("topicName" TEXT NOT NULL,"numPackages" BIGINT NOT NULL,"__timestamp" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY ("topicName"));
CREATE INDEX IF NOT EXISTS submission$2_hash_c0 ON submission$2 USING hash ("name");
CREATE INDEX IF NOT EXISTS submission$2_hash_c15 ON submission$2 USING hash ("submissionTime");
CREATE INDEX IF NOT EXISTS topicpackages$1_hash_c1 ON topicpackages$1 USING hash ("topicName");
>>>flink-plan.sql
CREATE TEMPORARY FUNCTION IF NOT EXISTS `uuid` AS 'com.datasqrl.secure.Uuid' LANGUAGE JAVA;

CREATE TEMPORARY TABLE `submission$1` (
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `version` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `variant` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `latest` BOOLEAN NOT NULL,
  `type` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `license` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `repository` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `homepage` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `documentation` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `readme` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `uniqueId` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `file` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `hash` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `authorid` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `submissionTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `keywords` ROW(`_idx` INTEGER NOT NULL, `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL) NOT NULL ARRAY NOT NULL,
  `_uuid` AS UUID(),
  PRIMARY KEY (`_uuid`, `submissionTime`) NOT ENFORCED,
  WATERMARK FOR `submissionTime` AS (`submissionTime` - INTERVAL '0.001' SECOND)
) WITH (
  'format' = 'json',
  'path' = '/mnt/build/data',
  'source.monitor-interval' = '0',
  'connector' = 'filesystem',
  'source.path.regex-pattern' = 'to be determined'
);

CREATE TEMPORARY TABLE `package$1` (
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `_submissionTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  PRIMARY KEY (`name`) NOT ENFORCED
) WITH (
  'password' = 'postgres',
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'table-name' = 'package$1',
  'user' = 'postgres',
  'url' = 'jdbc:postgresql://database:5432/datasqrl'
);

CREATE TEMPORARY TABLE `submission$2` (
  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `version` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `variant` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `latest` BOOLEAN NOT NULL,
  `type` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `license` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `repository` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `homepage` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `documentation` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `readme` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `uniqueId` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `file` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `hash` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `authorid` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `submissionTime` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `keywords` ROW(`_idx` INTEGER NOT NULL, `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL) NOT NULL ARRAY NOT NULL,
  `_uuid` CHAR(36) CHARACTER SET `UTF-16LE` NOT NULL,
  `variant0` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `repoURL` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  PRIMARY KEY (`_uuid`, `submissionTime`) NOT ENFORCED
) WITH (
  'password' = 'postgres',
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'table-name' = 'submission$2',
  'user' = 'postgres',
  'url' = 'jdbc:postgresql://database:5432/datasqrl'
);

CREATE TEMPORARY TABLE `topicpackages$1` (
  `pkgName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `topicName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `numSubmissions` BIGINT NOT NULL,
  `lastSubmission` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  PRIMARY KEY (`pkgName`, `topicName`) NOT ENFORCED
) WITH (
  'password' = 'postgres',
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'table-name' = 'topicpackages$1',
  'user' = 'postgres',
  'url' = 'jdbc:postgresql://database:5432/datasqrl'
);

CREATE TEMPORARY TABLE `topicsearch$1` (
  `topicName` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `numPackages` BIGINT NOT NULL,
  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  PRIMARY KEY (`topicName`) NOT ENFORCED
) WITH (
  'password' = 'postgres',
  'connector' = 'jdbc-sqrl',
  'driver' = 'org.postgresql.Driver',
  'table-name' = 'topicsearch$1',
  'user' = 'postgres',
  'url' = 'jdbc:postgresql://database:5432/datasqrl'
);

EXECUTE STATEMENT SET BEGIN
INSERT INTO `package$1`
(SELECT `name`, `submissionTime` AS `_submissionTime`
FROM `submission$1`)
;
INSERT INTO `submission$2`
(SELECT `name`, `version`, `variant`, `latest`, `type`, `license`, `repository`, `homepage`, `documentation`, `readme`, `description`, `uniqueId`, `file`, `hash`, `authorid`, `submissionTime`, `keywords`, `_uuid`, COALESCE(`variant`, 'default') AS `variant0`, CONCAT('https://repository.datasqrl.com/', `file`) AS `repoURL`
FROM `submission$1`)
;
INSERT INTO `topicpackages$1`
(SELECT `$cor0`.`name` AS `pkgName`, `t10`.`name` AS `topicName`, COUNT(*) AS `numSubmissions`, MAX(`$cor0`.`submissionTime`) AS `lastSubmission`
FROM (SELECT `name`, `version`, `variant`, `latest`, `type`, `license`, `repository`, `homepage`, `documentation`, `readme`, `description`, `uniqueId`, `file`, `hash`, `authorid`, `submissionTime`, `keywords`, `_uuid`, COALESCE(`variant`, 'default') AS `variant0`, CONCAT('https://repository.datasqrl.com/', `file`) AS `repoURL`
FROM `submission$1`) AS `$cor0`,
UNNEST(`$cor0`.`keywords`) AS `t10`
GROUP BY `$cor0`.`name`, `t10`.`name`)
;
INSERT INTO `topicsearch$1`
(SELECT `t10`.`name` AS `topicName`, COUNT(*) AS `numPackages`, MAX(`$cor1`.`submissionTime`) AS `__timestamp`
FROM (SELECT `name`, `version`, `variant`, `latest`, `type`, `license`, `repository`, `homepage`, `documentation`, `readme`, `description`, `uniqueId`, `file`, `hash`, `authorid`, `submissionTime`, `keywords`, `_uuid`, COALESCE(`variant`, 'default') AS `variant0`, CONCAT('https://repository.datasqrl.com/', `file`) AS `repoURL`
FROM `submission$1`) AS `$cor1`,
UNNEST(`$cor1`.`keywords`) AS `t10`
GROUP BY `t10`.`name`)
;
END;
