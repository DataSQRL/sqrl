>>>pipeline_explain.txt
=== Package
ID:     package$1
Type:   state
Stage:  streams
Inputs: submission$2
Primary Key: name
Timestamp  : _submissionTime
Schema:
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _submissionTime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=name limit=1 sort=#1: _submissionTime TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC-nulls-last 
Plan:
LogicalProject(name=[$0], _submissionTime=[$15])
  LogicalTableScan(table=[[submission$2]])

=== Submission
ID:     submission$2
Type:   stream
Stage:  streams
Primary Key: name, submissionTime
Timestamp  : submissionTime
Schema:
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - version: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - variant: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - latest: BOOLEAN NOT NULL
 - type: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - license: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - repository: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - homepage: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - documentation: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - readme: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - uniqueId: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - file: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - hash: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - authorid: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - submissionTime: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - keywords: RecordType(VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL name) NOT NULL ARRAY NOT NULL
 - variant0: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - repoURL: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
Plan:
LogicalProject(name=[$0], version=[$1], variant=[$2], latest=[$3], type=[$4], license=[$5], repository=[$6], homepage=[$7], documentation=[$8], readme=[$9], description=[$10], uniqueId=[$11], file=[$12], hash=[$13], authorid=[$14], submissionTime=[$15], keywords=[$16], variant0=[COALESCE($2, 'default')], repoURL=[CONCAT('https://repository.datasqrl.com/', $12)]) hints[WatermarkHint options:[15]]
  LogicalTableScan(table=[[submission$1]])

=== TopicPackages
ID:     topicpackages$1
Type:   state
Stage:  streams
Inputs: submission$2
Primary Key: pkgName, topicName
Timestamp  : lastSubmission
Schema:
 - pkgName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - topicName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - numSubmissions: BIGINT NOT NULL
 - lastSubmission: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - sort: #2: numSubmissions BIGINT DESC
Plan:
LogicalAggregate(group=[{0, 1}], numSubmissions=[COUNT()], lastSubmission=[MAX($2)])
  LogicalProject(pkgName=[$0], topicName=[$19], submissionTime=[$15])
    LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{16}])
      LogicalTableScan(table=[[submission$2]])
      LogicalTableFunctionScan(invocation=[Submission.keywords($cor0.keywords)], rowType=[RecordType(VARCHAR(2147483647) name)], elementType=[class [Ljava.lang.Object;])

=== TopicSearch
ID:     topicsearch$1
Type:   state
Stage:  streams
Inputs: submission$2
Primary Key: topicName
Timestamp  : __timestamp
Schema:
 - topicName: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - numPackages: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - sort: #1: numPackages BIGINT DESC
Plan:
LogicalAggregate(group=[{0}], numPackages=[COUNT()], __timestamp=[MAX($2)])
  LogicalProject(topicName=[$19], name=[$0], submissionTime=[$15])
    LogicalCorrelate(correlation=[$cor1], joinType=[inner], requiredColumns=[{16}])
      LogicalTableScan(table=[[submission$2]])
      LogicalTableFunctionScan(invocation=[Submission.keywords($cor1.keywords)], rowType=[RecordType(VARCHAR(2147483647) name)], elementType=[class [Ljava.lang.Object;])

>>>schema.graphqls
"An RFC-3339 compliant DateTime Scalar"
scalar DateTime

type Package {
  name: String!
  latest(limit: Int = 10, offset: Int = 0): [Submission!]
  versions(limit: Int = 10, offset: Int = 0): [Submission!]
}

type Query {
  Package(name: String, limit: Int = 10, offset: Int = 0): [Package!]
  Submission(name: String, submissionTime: DateTime, limit: Int = 10, offset: Int = 0): [Submission!]
  TopicPackages(pkgName: String, topicName: String, limit: Int = 10, offset: Int = 0): [TopicPackages!]
  TopicSearch(topicName: String, limit: Int = 10, offset: Int = 0): [TopicSearch!]
}

type Submission {
  name: String!
  version: String!
  variant: String
  latest: Boolean!
  type: String
  license: String
  repository: String
  homepage: String
  documentation: String
  readme: String
  description: String
  uniqueId: String!
  file: String!
  hash: String!
  authorid: String!
  submissionTime: DateTime!
  variant0: String!
  repoURL: String!
  keywords(limit: Int = 10, offset: Int = 0): [keywords!]
}

type TopicPackages {
  pkgName: String!
  topicName: String!
  numSubmissions: Float!
  lastSubmission: DateTime!
  latest(limit: Int = 10, offset: Int = 0): [Submission!]
}

type TopicSearch {
  topicName: String!
  numPackages: Float!
}

type keywords {
  name: String!
}

