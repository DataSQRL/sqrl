>>>pipeline_explain.txt
=== Schema
ID:     default_catalog.default_database.Schema
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Schema
Annotations:
 - stream-root: _Schema
 - sort: [0 DESC-nulls-last]
Primary Key: uuidField, timestampMillisField
Timestamp  : timestampMillisField
Schema:
 - uuidField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - timestampMillisField: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - nullableTimestampMillisField: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
 - timestampMicrosField: TIMESTAMP_WITH_LOCAL_TIME_ZONE(6) NOT NULL
 - nullableTimestampMicrosField: TIMESTAMP_WITH_LOCAL_TIME_ZONE(6)
 - dateField: DATE NOT NULL
 - nullableDateField: DATE
 - timeMillisField: TIME(0) NOT NULL
 - nullableTimeMillisField: TIME(0)
 - timeMicrosField: TIME(0) NOT NULL
 - nullableTimeMicrosField: TIME(0)
 - complexArrayField: RecordType:peek_no_expand(INTEGER NOT NULL itemFieldOne, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL itemFieldTwo) NOT NULL ARRAY NOT NULL
 - nullableComplexArrayField: RecordType:peek_no_expand(DOUBLE nullableItemFieldOne, BOOLEAN nullableItemFieldTwo) ARRAY
 - multiNestedRecord: RecordType:peek_no_expand(RecordType:peek_no_expand(VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL levelOneField, RecordType:peek_no_expand(INTEGER NOT NULL levelTwoField) NOT NULL nestedLevelTwo) NOT NULL nestedLevelOne) NOT NULL
 - stringField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - nullableStringField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - intField: INTEGER NOT NULL
 - nullableIntField: INTEGER
 - longField: BIGINT NOT NULL
 - nullableLongField: BIGINT
 - floatField: FLOAT NOT NULL
 - nullableFloatField: FLOAT
 - doubleField: DOUBLE NOT NULL
 - nullableDoubleField: DOUBLE
 - booleanField: BOOLEAN NOT NULL
 - nullableBooleanField: BOOLEAN
 - enumField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - nullableEnumField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - arrayField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL ARRAY NOT NULL
 - nullableArrayField: INTEGER ARRAY
 - nestedRecord: RecordType:peek_no_expand(VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL nestedStringField, INTEGER NOT NULL nestedIntField, FLOAT NOT NULL ARRAY NOT NULL nestedArrayField, (VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL) MAP NOT NULL nestedMapField) NOT NULL
 - nullableNestedRecord: RecordType:peek_no_expand(VARCHAR(2147483647) CHARACTER SET "UTF-16LE" nullableNestedStringField, BIGINT nullableNestedLongField)
 - decimalField: DECIMAL(10, 2) NOT NULL
 - mapField: (VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL) MAP NOT NULL
 - nullableMapField: (VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL) MAP
Plan:
LogicalProject(uuidField=[$0], timestampMillisField=[$1], nullableTimestampMillisField=[$2], timestampMicrosField=[$3], nullableTimestampMicrosField=[$4], dateField=[$5], nullableDateField=[$6], timeMillisField=[$7], nullableTimeMillisField=[$8], timeMicrosField=[$9], nullableTimeMicrosField=[$10], complexArrayField=[$11], nullableComplexArrayField=[$12], multiNestedRecord=[$13], stringField=[$14], nullableStringField=[$15], intField=[$16], nullableIntField=[$17], longField=[$18], nullableLongField=[$19], floatField=[$20], nullableFloatField=[$21], doubleField=[$22], nullableDoubleField=[$23], booleanField=[$24], nullableBooleanField=[$25], enumField=[$26], nullableEnumField=[$27], arrayField=[$28], nullableArrayField=[$29], nestedRecord=[$30], nullableNestedRecord=[$31], decimalField=[$32], mapField=[$33], nullableMapField=[$34])
  LogicalTableScan(table=[[default_catalog, default_database, _Schema]])
SQL: CREATE VIEW Schema AS  SELECT * FROM _Schema ORDER BY uuidField DESC;

=== _Schema
ID:     default_catalog.default_database._Schema
Type:   stream
Stage:  flink
Inputs: default_catalog.default_database._Schema__base
Annotations:
 - features: DENORMALIZE (feature)
 - stream-root: _Schema
Primary Key: uuidField, timestampMillisField
Timestamp  : timestampMillisField
Schema:
 - uuidField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - timestampMillisField: TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL
 - nullableTimestampMillisField: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)
 - timestampMicrosField: TIMESTAMP_WITH_LOCAL_TIME_ZONE(6) NOT NULL
 - nullableTimestampMicrosField: TIMESTAMP_WITH_LOCAL_TIME_ZONE(6)
 - dateField: DATE NOT NULL
 - nullableDateField: DATE
 - timeMillisField: TIME(0) NOT NULL
 - nullableTimeMillisField: TIME(0)
 - timeMicrosField: TIME(0) NOT NULL
 - nullableTimeMicrosField: TIME(0)
 - complexArrayField: RecordType:peek_no_expand(INTEGER NOT NULL itemFieldOne, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL itemFieldTwo) NOT NULL ARRAY NOT NULL
 - nullableComplexArrayField: RecordType:peek_no_expand(DOUBLE nullableItemFieldOne, BOOLEAN nullableItemFieldTwo) ARRAY
 - multiNestedRecord: RecordType:peek_no_expand(RecordType:peek_no_expand(VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL levelOneField, RecordType:peek_no_expand(INTEGER NOT NULL levelTwoField) NOT NULL nestedLevelTwo) NOT NULL nestedLevelOne) NOT NULL
 - stringField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - nullableStringField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - intField: INTEGER NOT NULL
 - nullableIntField: INTEGER
 - longField: BIGINT NOT NULL
 - nullableLongField: BIGINT
 - floatField: FLOAT NOT NULL
 - nullableFloatField: FLOAT
 - doubleField: DOUBLE NOT NULL
 - nullableDoubleField: DOUBLE
 - booleanField: BOOLEAN NOT NULL
 - nullableBooleanField: BOOLEAN
 - enumField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - nullableEnumField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE"
 - arrayField: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL ARRAY NOT NULL
 - nullableArrayField: INTEGER ARRAY
 - nestedRecord: RecordType:peek_no_expand(VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL nestedStringField, INTEGER NOT NULL nestedIntField, FLOAT NOT NULL ARRAY NOT NULL nestedArrayField, (VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL) MAP NOT NULL nestedMapField) NOT NULL
 - nullableNestedRecord: RecordType:peek_no_expand(VARCHAR(2147483647) CHARACTER SET "UTF-16LE" nullableNestedStringField, BIGINT nullableNestedLongField)
 - decimalField: DECIMAL(10, 2) NOT NULL
 - mapField: (VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL) MAP NOT NULL
 - nullableMapField: (VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL, VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL) MAP
Plan:
LogicalWatermarkAssigner(rowtime=[timestampMillisField], watermark=[$1])
  LogicalTableScan(table=[[default_catalog, default_database, _Schema]])
SQL: CREATE VIEW `_Schema__view`
AS
SELECT `_Schema`.`uuidField`, `_Schema`.`timestampMillisField`, `_Schema`.`nullableTimestampMillisField`, `_Schema`.`timestampMicrosField`, `_Schema`.`nullableTimestampMicrosField`, `_Schema`.`dateField`, `_Schema`.`nullableDateField`, `_Schema`.`timeMillisField`, `_Schema`.`nullableTimeMillisField`, `_Schema`.`timeMicrosField`, `_Schema`.`nullableTimeMicrosField`, `_Schema`.`complexArrayField`, `_Schema`.`nullableComplexArrayField`, `_Schema`.`multiNestedRecord`, `_Schema`.`stringField`, `_Schema`.`nullableStringField`, `_Schema`.`intField`, `_Schema`.`nullableIntField`, `_Schema`.`longField`, `_Schema`.`nullableLongField`, `_Schema`.`floatField`, `_Schema`.`nullableFloatField`, `_Schema`.`doubleField`, `_Schema`.`nullableDoubleField`, `_Schema`.`booleanField`, `_Schema`.`nullableBooleanField`, `_Schema`.`enumField`, `_Schema`.`nullableEnumField`, `_Schema`.`arrayField`, `_Schema`.`nullableArrayField`, `_Schema`.`nestedRecord`, `_Schema`.`nullableNestedRecord`, `_Schema`.`decimalField`, `_Schema`.`mapField`, `_Schema`.`nullableMapField`
FROM `default_catalog`.`default_database`.`_Schema` AS `_Schema`
>>>flink-sql-no-functions.sql
CREATE TEMPORARY TABLE `_Schema__schema` (
  `uuidField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `timestampMillisField` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `nullableTimestampMillisField` TIMESTAMP(3) WITH LOCAL TIME ZONE,
  `timestampMicrosField` TIMESTAMP(6) WITH LOCAL TIME ZONE NOT NULL,
  `nullableTimestampMicrosField` TIMESTAMP(6) WITH LOCAL TIME ZONE,
  `dateField` DATE NOT NULL,
  `nullableDateField` DATE,
  `timeMillisField` TIME(0) NOT NULL,
  `nullableTimeMillisField` TIME(0),
  `timeMicrosField` TIME(0) NOT NULL,
  `nullableTimeMicrosField` TIME(0),
  `complexArrayField` ROW(`itemFieldOne` INTEGER NOT NULL, `itemFieldTwo` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL) NOT NULL ARRAY NOT NULL,
  `nullableComplexArrayField` ROW(`nullableItemFieldOne` DOUBLE, `nullableItemFieldTwo` BOOLEAN) ARRAY,
  `multiNestedRecord` ROW(`nestedLevelOne` ROW(`levelOneField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL, `nestedLevelTwo` ROW(`levelTwoField` INTEGER NOT NULL) NOT NULL) NOT NULL) NOT NULL,
  `stringField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `nullableStringField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `intField` INTEGER NOT NULL,
  `nullableIntField` INTEGER,
  `longField` BIGINT NOT NULL,
  `nullableLongField` BIGINT,
  `floatField` FLOAT NOT NULL,
  `nullableFloatField` FLOAT,
  `doubleField` DOUBLE NOT NULL,
  `nullableDoubleField` DOUBLE,
  `booleanField` BOOLEAN NOT NULL,
  `nullableBooleanField` BOOLEAN,
  `enumField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `nullableEnumField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `arrayField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL ARRAY NOT NULL,
  `nullableArrayField` INTEGER ARRAY,
  `nestedRecord` ROW(`nestedStringField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL, `nestedIntField` INTEGER NOT NULL, `nestedArrayField` FLOAT NOT NULL ARRAY NOT NULL, `nestedMapField` MAP< VARCHAR(2147483647) CHARACTER SET `UTF-16LE`, VARCHAR(2147483647) CHARACTER SET `UTF-16LE` > NOT NULL) NOT NULL,
  `nullableNestedRecord` ROW(`nullableNestedStringField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`, `nullableNestedLongField` BIGINT),
  `decimalField` DECIMAL(10, 2) NOT NULL,
  `mapField` MAP< VARCHAR(2147483647) CHARACTER SET `UTF-16LE`, VARCHAR(2147483647) CHARACTER SET `UTF-16LE` > NOT NULL,
  `nullableMapField` MAP< VARCHAR(2147483647) CHARACTER SET `UTF-16LE`, VARCHAR(2147483647) CHARACTER SET `UTF-16LE` >
) WITH (
  'connector' = 'datagen'
);
CREATE TABLE `_Schema` (
  PRIMARY KEY (`uuidField`, `timestampMillisField`) NOT ENFORCED,
  WATERMARK FOR `timestampMillisField` AS `timestampMillisField`
) WITH (
  'format' = 'json',
  'json.timestamp-format.standard' = 'ISO-8601',
  'path' = '${DATA_PATH}/schema.jsonl',
  'connector' = 'filesystem'
)
LIKE `_Schema__schema`;
CREATE VIEW `Schema`
AS
SELECT *
FROM `_Schema`;
CREATE VIEW `MySchema`
AS
SELECT *
FROM `Schema`;
CREATE TABLE `Schema_1` (
  `uuidField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `timestampMillisField` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,
  `nullableTimestampMillisField` TIMESTAMP(3) WITH LOCAL TIME ZONE,
  `timestampMicrosField` TIMESTAMP(6) WITH LOCAL TIME ZONE NOT NULL,
  `nullableTimestampMicrosField` TIMESTAMP(6) WITH LOCAL TIME ZONE,
  `dateField` DATE NOT NULL,
  `nullableDateField` DATE,
  `timeMillisField` TIME(0) NOT NULL,
  `nullableTimeMillisField` TIME(0),
  `timeMicrosField` TIME(0) NOT NULL,
  `nullableTimeMicrosField` TIME(0),
  `complexArrayField` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `nullableComplexArrayField` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `multiNestedRecord` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `stringField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `nullableStringField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `intField` INTEGER NOT NULL,
  `nullableIntField` INTEGER,
  `longField` BIGINT NOT NULL,
  `nullableLongField` BIGINT,
  `floatField` FLOAT NOT NULL,
  `nullableFloatField` FLOAT,
  `doubleField` DOUBLE NOT NULL,
  `nullableDoubleField` DOUBLE,
  `booleanField` BOOLEAN NOT NULL,
  `nullableBooleanField` BOOLEAN,
  `enumField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,
  `nullableEnumField` VARCHAR(2147483647) CHARACTER SET `UTF-16LE`,
  `arrayField` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `nullableArrayField` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `nestedRecord` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `nullableNestedRecord` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `decimalField` DECIMAL(10, 2) NOT NULL,
  `mapField` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  `nullableMapField` RAW('com.datasqrl.flinkrunner.types.json.FlinkJsonType', 'AENjb20uZGF0YXNxcmwuZmxpbmtydW5uZXIudHlwZXMuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAw=='),
  PRIMARY KEY (`uuidField`, `timestampMillisField`) NOT ENFORCED
) WITH (
  'connector' = 'jdbc-sqrl',
  'password' = '${JDBC_PASSWORD}',
  'driver' = 'org.postgresql.Driver',
  'username' = '${JDBC_USERNAME}',
  'url' = 'jdbc:postgresql://${JDBC_AUTHORITY}',
  'table-name' = 'Schema_1'
);
EXECUTE STATEMENT SET BEGIN
INSERT INTO `default_catalog`.`default_database`.`Schema_1`
(SELECT `uuidField`, `timestampMillisField`, `nullableTimestampMillisField`, `timestampMicrosField`, `nullableTimestampMicrosField`, `dateField`, `nullableDateField`, `timeMillisField`, `nullableTimeMillisField`, `timeMicrosField`, `nullableTimeMicrosField`, `to_jsonb`(`complexArrayField`) AS `complexArrayField`, `to_jsonb`(`nullableComplexArrayField`) AS `nullableComplexArrayField`, `to_jsonb`(`multiNestedRecord`) AS `multiNestedRecord`, `stringField`, `nullableStringField`, `intField`, `nullableIntField`, `longField`, `nullableLongField`, `floatField`, `nullableFloatField`, `doubleField`, `nullableDoubleField`, `booleanField`, `nullableBooleanField`, `enumField`, `nullableEnumField`, `to_jsonb`(`arrayField`) AS `arrayField`, `to_jsonb`(`nullableArrayField`) AS `nullableArrayField`, `to_jsonb`(`nestedRecord`) AS `nestedRecord`, `to_jsonb`(`nullableNestedRecord`) AS `nullableNestedRecord`, `decimalField`, `to_jsonb`(`mapField`) AS `mapField`, `to_jsonb`(`nullableMapField`) AS `nullableMapField`
 FROM `default_catalog`.`default_database`.`Schema`)
;
END
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres-schema.sql
CREATE TABLE IF NOT EXISTS "Schema_1" ("uuidField" TEXT NOT NULL, "timestampMillisField" TIMESTAMP WITH TIME ZONE NOT NULL, "nullableTimestampMillisField" TIMESTAMP WITH TIME ZONE , "timestampMicrosField" TIMESTAMP WITH TIME ZONE NOT NULL, "nullableTimestampMicrosField" TIMESTAMP WITH TIME ZONE , "dateField" DATE NOT NULL, "nullableDateField" DATE , "timeMillisField" TIME WITHOUT TIME ZONE NOT NULL, "nullableTimeMillisField" TIME WITHOUT TIME ZONE , "timeMicrosField" TIME WITHOUT TIME ZONE NOT NULL, "nullableTimeMicrosField" TIME WITHOUT TIME ZONE , "complexArrayField" JSONB , "nullableComplexArrayField" JSONB , "multiNestedRecord" JSONB , "stringField" TEXT NOT NULL, "nullableStringField" TEXT , "intField" INTEGER NOT NULL, "nullableIntField" INTEGER , "longField" BIGINT NOT NULL, "nullableLongField" BIGINT , "floatField" FLOAT NOT NULL, "nullableFloatField" FLOAT , "doubleField" DOUBLE PRECISION NOT NULL, "nullableDoubleField" DOUBLE PRECISION , "booleanField" BOOLEAN NOT NULL, "nullableBooleanField" BOOLEAN , "enumField" TEXT NOT NULL, "nullableEnumField" TEXT , "arrayField" JSONB , "nullableArrayField" JSONB , "nestedRecord" JSONB , "nullableNestedRecord" JSONB , "decimalField" NUMERIC NOT NULL, "mapField" JSONB , "nullableMapField" JSONB  , PRIMARY KEY ("uuidField","timestampMillisField"))
>>>postgres-views.sql
CREATE OR REPLACE VIEW "Schema"("uuidField", "timestampMillisField", "nullableTimestampMillisField", "timestampMicrosField", "nullableTimestampMicrosField", "dateField", "nullableDateField", "timeMillisField", "nullableTimeMillisField", "timeMicrosField", "nullableTimeMicrosField", "complexArrayField", "nullableComplexArrayField", "multiNestedRecord", "stringField", "nullableStringField", "intField", "nullableIntField", "longField", "nullableLongField", "floatField", "nullableFloatField", "doubleField", "nullableDoubleField", "booleanField", "nullableBooleanField", "enumField", "nullableEnumField", "arrayField", "nullableArrayField", "nestedRecord", "nullableNestedRecord", "decimalField", "mapField", "nullableMapField") AS SELECT *
FROM (SELECT "uuidField", "timestampMillisField", "nullableTimestampMillisField", "timestampMicrosField", "nullableTimestampMicrosField", "dateField", "nullableDateField", "timeMillisField", "nullableTimeMillisField", "timeMicrosField", "nullableTimeMicrosField", "complexArrayField", "nullableComplexArrayField", "multiNestedRecord", "stringField", "nullableStringField", "intField", "nullableIntField", "longField", "nullableLongField", "floatField", "nullableFloatField", "doubleField", "nullableDoubleField", "booleanField", "nullableBooleanField", "enumField", "nullableEnumField", "arrayField", "nullableArrayField", "nestedRecord", "nullableNestedRecord", "decimalField", "mapField", "nullableMapField"
  FROM "Schema_1"
  ORDER BY "uuidField" DESC NULLS LAST) AS "t1"
>>>vertx.json
{
  "model" : {
    "queries" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Schema",
        "exec" : {
          "arguments" : [
            {
              "type" : "variable",
              "path" : "offset"
            },
            {
              "type" : "variable",
              "path" : "limit"
            }
          ],
          "query" : {
            "type" : "SqlQuery",
            "sql" : "SELECT *\nFROM (SELECT \"uuidField\", \"timestampMillisField\", \"nullableTimestampMillisField\", \"timestampMicrosField\", \"nullableTimestampMicrosField\", \"dateField\", \"nullableDateField\", \"timeMillisField\", \"nullableTimeMillisField\", \"timeMicrosField\", \"nullableTimeMicrosField\", \"complexArrayField\", \"nullableComplexArrayField\", \"multiNestedRecord\", \"stringField\", \"nullableStringField\", \"intField\", \"nullableIntField\", \"longField\", \"nullableLongField\", \"floatField\", \"nullableFloatField\", \"doubleField\", \"nullableDoubleField\", \"booleanField\", \"nullableBooleanField\", \"enumField\", \"nullableEnumField\", \"arrayField\", \"nullableArrayField\", \"nestedRecord\", \"nullableNestedRecord\", \"decimalField\", \"mapField\", \"nullableMapField\"\n  FROM \"Schema_1\"\n  ORDER BY \"uuidField\" DESC NULLS LAST) AS \"t\"",
            "parameters" : [ ],
            "pagination" : "LIMIT_AND_OFFSET",
            "database" : "POSTGRES"
          }
        }
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "operations" : [
      {
        "function" : {
          "name" : "GetSchema",
          "parameters" : {
            "type" : "object",
            "properties" : {
              "offset" : {
                "type" : "integer"
              },
              "limit" : {
                "type" : "integer"
              }
            },
            "required" : [ ]
          }
        },
        "format" : "JSON",
        "apiQuery" : {
          "query" : "query Schema($limit: Int = 10, $offset: Int = 0) {\nSchema(limit: $limit, offset: $offset) {\nuuidField\ntimestampMillisField\nnullableTimestampMillisField\ntimestampMicrosField\nnullableTimestampMicrosField\ndateField\nnullableDateField\ntimeMillisField\nnullableTimeMillisField\ntimeMicrosField\nnullableTimeMicrosField\ncomplexArrayField {\nitemFieldOne\nitemFieldTwo\n}\nnullableComplexArrayField {\nnullableItemFieldOne\nnullableItemFieldTwo\n}\nmultiNestedRecord {\nnestedLevelOne {\nlevelOneField\n}\n}\nstringField\nnullableStringField\nintField\nnullableIntField\nlongField\nnullableLongField\nfloatField\nnullableFloatField\ndoubleField\nnullableDoubleField\nbooleanField\nnullableBooleanField\nenumField\nnullableEnumField\narrayField\nnullableArrayField\nnestedRecord {\nnestedStringField\nnestedIntField\nnestedArrayField\nnestedMapField\n}\nnullableNestedRecord {\nnullableNestedStringField\nnullableNestedLongField\n}\ndecimalField\nmapField\nnullableMapField\n}\n\n}",
          "queryName" : "Schema",
          "operationType" : "QUERY"
        },
        "mcpMethod" : "TOOL",
        "restMethod" : "GET",
        "uriTemplate" : "queries/Schema{?offset,limit}"
      }
    ],
    "schema" : {
      "type" : "string",
      "schema" : "\"An RFC-3339 compliant Full Date Scalar\"\nscalar Date\n\n\"A slightly refined version of RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\n\"An arbitrary precision signed integer\"\nscalar GraphQLBigInteger\n\n\"A JSON scalar\"\nscalar JSON\n\n\"24-hour clock time value string in the format `hh:mm:ss` or `hh:mm:ss.sss`.\"\nscalar LocalTime\n\ntype Query {\n  Schema(limit: Int = 10, offset: Int = 0): [Schema!]\n}\n\ntype Schema {\n  uuidField: String!\n  timestampMillisField: DateTime!\n  nullableTimestampMillisField: DateTime\n  timestampMicrosField: DateTime!\n  nullableTimestampMicrosField: DateTime\n  dateField: Date!\n  nullableDateField: Date\n  timeMillisField: LocalTime!\n  nullableTimeMillisField: LocalTime\n  timeMicrosField: LocalTime!\n  nullableTimeMicrosField: LocalTime\n  complexArrayField: [Schema_complexArrayFieldOutput]!\n  nullableComplexArrayField: [Schema_nullableComplexArrayFieldOutput]\n  multiNestedRecord: Schema_multiNestedRecordOutput!\n  stringField: String!\n  nullableStringField: String\n  intField: Int!\n  nullableIntField: Int\n  longField: GraphQLBigInteger!\n  nullableLongField: GraphQLBigInteger\n  floatField: Float!\n  nullableFloatField: Float\n  doubleField: Float!\n  nullableDoubleField: Float\n  booleanField: Boolean!\n  nullableBooleanField: Boolean\n  enumField: String!\n  nullableEnumField: String\n  arrayField: [String]!\n  nullableArrayField: [Int]\n  nestedRecord: Schema_nestedRecordOutput!\n  nullableNestedRecord: Schema_nullableNestedRecordOutput\n  decimalField: Float!\n  mapField: JSON!\n  nullableMapField: JSON\n}\n\ntype Schema_complexArrayFieldOutput {\n  itemFieldOne: Int!\n  itemFieldTwo: String!\n}\n\ntype Schema_multiNestedRecordOutput {\n  nestedLevelOne: Schema_multiNestedRecord_nestedLevelOneOutput!\n}\n\ntype Schema_multiNestedRecord_nestedLevelOneOutput {\n  levelOneField: String!\n  nestedLevelTwo: Schema_multiNestedRecord_nestedLevelOne_nestedLevelTwoOutput!\n}\n\ntype Schema_multiNestedRecord_nestedLevelOne_nestedLevelTwoOutput {\n  levelTwoField: Int!\n}\n\ntype Schema_nestedRecordOutput {\n  nestedStringField: String!\n  nestedIntField: Int!\n  nestedArrayField: [Float]!\n  nestedMapField: JSON!\n}\n\ntype Schema_nullableComplexArrayFieldOutput {\n  nullableItemFieldOne: Float\n  nullableItemFieldTwo: Boolean\n}\n\ntype Schema_nullableNestedRecordOutput {\n  nullableNestedStringField: String\n  nullableNestedLongField: GraphQLBigInteger\n}\n"
    }
  }
}
