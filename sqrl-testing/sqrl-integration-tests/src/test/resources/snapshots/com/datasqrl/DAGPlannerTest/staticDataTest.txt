>>>pipeline_explain.txt
=== Numbers2
ID:     numbers2_1
Type:   state
Stage:  flink
Primary Key: id
Timestamp  : -
Schema:
 - id: INTEGER NOT NULL
Plan:
LogicalValues(tuples=[[{ 1 }, { 2 }, { 3 }, { 4 }, { 4 }]])

=== Numbers
ID:     numbers_1
Type:   state
Stage:  flink
Primary Key: id
Timestamp  : -
Schema:
 - id: INTEGER NOT NULL
Plan:
LogicalValues(tuples=[[{ 1 }, { 2 }, { 3 }, { 4 }, { 5 }]])

=== NumbersLarge
ID:     numberslarge_1
Type:   state
Stage:  flink
Primary Key: id
Timestamp  : -
Schema:
 - id: INTEGER NOT NULL
Plan:
LogicalValues(tuples=[[{ 0 }, { 1 }, { 2 }, { 3 }, { 4 }, { 5 }, { 6 }, { 7 }, { 8 }, { 9 }, { 10 }, { 11 }, { 12 }, { 13 }, { 14 }, { 15 }, { 16 }, { 17 }, { 18 }, { 19 }, { 20 }, { 21 }, { 22 }, { 23 }, { 24 }, { 25 }, { 26 }, { 27 }, { 28 }, { 29 }, { 30 }, { 31 }, { 32 }, { 33 }, { 34 }, { 35 }, { 36 }, { 37 }, { 38 }, { 39 }, { 40 }, { 41 }, { 42 }, { 43 }, { 44 }, { 45 }, { 46 }, { 47 }, { 48 }, { 49 }, { 50 }, { 51 }, { 52 }, { 53 }, { 54 }, { 55 }, { 56 }, { 57 }, { 58 }, { 59 }, { 60 }, { 61 }, { 62 }, { 63 }, { 64 }, { 65 }, { 66 }, { 67 }, { 68 }, { 69 }, { 70 }, { 71 }, { 72 }, { 73 }, { 74 }, { 75 }, { 76 }, { 77 }, { 78 }, { 79 }, { 80 }, { 81 }, { 82 }, { 83 }, { 84 }, { 85 }, { 86 }, { 87 }, { 88 }, { 89 }, { 90 }, { 91 }, { 92 }, { 93 }, { 94 }, { 95 }, { 96 }, { 97 }, { 98 }, { 99 }, { 100 }, { 101 }, { 102 }, { 103 }, { 104 }, { 105 }, { 106 }, { 107 }, { 108 }, { 109 }, { 110 }, { 111 }, { 112 }, { 113 }, { 114 }, { 115 }, { 116 }, { 117 }, { 118 }, { 119 }, { 120 }, { 121 }, { 122 }, { 123 }, { 124 }, { 125 }, { 126 }, { 127 }, { 128 }, { 129 }, { 130 }, { 131 }, { 132 }, { 133 }, { 134 }, { 135 }, { 136 }, { 137 }, { 138 }, { 139 }, { 140 }, { 141 }, { 142 }, { 143 }, { 144 }, { 145 }, { 146 }, { 147 }, { 148 }, { 149 }, { 150 }, { 151 }, { 152 }, { 153 }, { 154 }, { 155 }, { 156 }, { 157 }, { 158 }, { 159 }, { 160 }, { 161 }, { 162 }, { 163 }, { 164 }, { 165 }, { 166 }, { 167 }, { 168 }, { 169 }, { 170 }, { 171 }, { 172 }, { 173 }, { 174 }, { 175 }, { 176 }, { 177 }, { 178 }, { 179 }, { 180 }, { 181 }, { 182 }, { 183 }, { 184 }, { 185 }, { 186 }, { 187 }, { 188 }, { 189 }, { 190 }, { 191 }, { 192 }, { 193 }, { 194 }, { 195 }, { 196 }, { 197 }, { 198 }, { 199 }, { 200 }, { 201 }, { 202 }, { 203 }, { 204 }, { 205 }, { 206 }, { 207 }, { 208 }, { 209 }, { 210 }, { 211 }, { 212 }, { 213 }, { 214 }, { 215 }, { 216 }, { 217 }, { 218 }, { 219 }, { 220 }, { 221 }, { 222 }, { 223 }, { 224 }, { 225 }, { 226 }, { 227 }, { 228 }, { 229 }, { 230 }, { 231 }, { 232 }, { 233 }, { 234 }, { 235 }, { 236 }, { 237 }, { 238 }, { 239 }, { 240 }, { 241 }, { 242 }, { 243 }, { 244 }, { 245 }, { 246 }, { 247 }, { 248 }, { 249 }, { 250 }, { 251 }, { 252 }, { 253 }, { 254 }, { 255 }, { 256 }, { 257 }, { 258 }, { 259 }, { 260 }, { 261 }, { 262 }, { 263 }, { 264 }, { 265 }, { 266 }, { 267 }, { 268 }, { 269 }, { 270 }, { 271 }, { 272 }, { 273 }, { 274 }, { 275 }, { 276 }, { 277 }, { 278 }, { 279 }, { 280 }, { 281 }, { 282 }, { 283 }, { 284 }, { 285 }, { 286 }, { 287 }, { 288 }, { 289 }, { 290 }, { 291 }, { 292 }, { 293 }, { 294 }, { 295 }, { 296 }, { 297 }, { 298 }, { 299 }, { 300 }, { 301 }, { 302 }, { 303 }, { 304 }, { 305 }, { 306 }, { 307 }, { 308 }, { 309 }, { 310 }, { 311 }, { 312 }, { 313 }, { 314 }, { 315 }, { 316 }, { 317 }, { 318 }, { 319 }, { 320 }, { 321 }, { 322 }, { 323 }, { 324 }, { 325 }, { 326 }, { 327 }, { 328 }, { 329 }, { 330 }, { 331 }, { 332 }, { 333 }, { 334 }, { 335 }, { 336 }, { 337 }, { 338 }, { 339 }, { 340 }, { 341 }, { 342 }, { 343 }, { 344 }, { 345 }, { 346 }, { 347 }, { 348 }, { 349 }, { 350 }, { 351 }, { 352 }, { 353 }, { 354 }, { 355 }, { 356 }, { 357 }, { 358 }, { 359 }, { 360 }, { 361 }, { 362 }, { 363 }, { 364 }, { 365 }, { 366 }, { 367 }, { 368 }, { 369 }, { 370 }, { 371 }, { 372 }, { 373 }, { 374 }, { 375 }, { 376 }, { 377 }, { 378 }, { 379 }, { 380 }, { 381 }, { 382 }, { 383 }, { 384 }, { 385 }, { 386 }, { 387 }, { 388 }, { 389 }, { 390 }, { 391 }, { 392 }, { 393 }, { 394 }, { 395 }, { 396 }, { 397 }, { 398 }, { 399 }, { 400 }, { 401 }, { 402 }, { 403 }, { 404 }, { 405 }, { 406 }, { 407 }, { 408 }, { 409 }, { 410 }, { 411 }, { 412 }, { 413 }, { 414 }, { 415 }, { 416 }, { 417 }, { 418 }, { 419 }, { 420 }, { 421 }, { 422 }, { 423 }, { 424 }, { 425 }, { 426 }, { 427 }, { 428 }, { 429 }, { 430 }, { 431 }, { 432 }, { 433 }, { 434 }, { 435 }, { 436 }, { 437 }, { 438 }, { 439 }, { 440 }, { 441 }, { 442 }, { 443 }, { 444 }, { 445 }, { 446 }, { 447 }, { 448 }, { 449 }, { 450 }, { 451 }, { 452 }, { 453 }, { 454 }, { 455 }, { 456 }, { 457 }, { 458 }, { 459 }, { 460 }, { 461 }, { 462 }, { 463 }, { 464 }, { 465 }, { 466 }, { 467 }, { 468 }, { 469 }, { 470 }, { 471 }, { 472 }, { 473 }, { 474 }, { 475 }, { 476 }, { 477 }, { 478 }, { 479 }, { 480 }, { 481 }, { 482 }, { 483 }, { 484 }, { 485 }, { 486 }, { 487 }, { 488 }, { 489 }, { 490 }, { 491 }, { 492 }, { 493 }, { 494 }, { 495 }, { 496 }, { 497 }, { 498 }, { 499 }, { 500 }, { 501 }, { 502 }, { 503 }, { 504 }, { 505 }, { 506 }, { 507 }, { 508 }, { 509 }, { 510 }, { 511 }, { 512 }, { 513 }, { 514 }, { 515 }, { 516 }, { 517 }, { 518 }, { 519 }, { 520 }, { 521 }, { 522 }, { 523 }, { 524 }, { 525 }, { 526 }, { 527 }, { 528 }, { 529 }, { 530 }, { 531 }, { 532 }, { 533 }, { 534 }, { 535 }, { 536 }, { 537 }, { 538 }, { 539 }, { 540 }, { 541 }, { 542 }, { 543 }, { 544 }, { 545 }, { 546 }, { 547 }, { 548 }, { 549 }, { 550 }, { 551 }, { 552 }, { 553 }, { 554 }, { 555 }, { 556 }, { 557 }, { 558 }, { 559 }, { 560 }, { 561 }, { 562 }, { 563 }, { 564 }, { 565 }, { 566 }, { 567 }, { 568 }, { 569 }, { 570 }, { 571 }, { 572 }, { 573 }, { 574 }, { 575 }, { 576 }, { 577 }, { 578 }, { 579 }, { 580 }, { 581 }, { 582 }, { 583 }, { 584 }, { 585 }, { 586 }, { 587 }, { 588 }, { 589 }, { 590 }, { 591 }, { 592 }, { 593 }, { 594 }, { 595 }, { 596 }, { 597 }, { 598 }, { 599 }, { 600 }, { 601 }, { 602 }, { 603 }, { 604 }, { 605 }, { 606 }, { 607 }, { 608 }, { 609 }, { 610 }, { 611 }, { 612 }, { 613 }, { 614 }, { 615 }, { 616 }, { 617 }, { 618 }, { 619 }, { 620 }, { 621 }, { 622 }, { 623 }, { 624 }, { 625 }, { 626 }, { 627 }, { 628 }, { 629 }, { 630 }, { 631 }, { 632 }, { 633 }, { 634 }, { 635 }, { 636 }, { 637 }, { 638 }, { 639 }, { 640 }, { 641 }, { 642 }, { 643 }, { 644 }, { 645 }, { 646 }, { 647 }, { 648 }, { 649 }, { 650 }, { 651 }, { 652 }, { 653 }, { 654 }, { 655 }, { 656 }, { 657 }, { 658 }, { 659 }, { 660 }, { 661 }, { 662 }, { 663 }, { 664 }, { 665 }, { 666 }, { 667 }, { 668 }, { 669 }, { 670 }, { 671 }, { 672 }, { 673 }, { 674 }, { 675 }, { 676 }, { 677 }, { 678 }, { 679 }, { 680 }, { 681 }, { 682 }, { 683 }, { 684 }, { 685 }, { 686 }, { 687 }, { 688 }, { 689 }, { 690 }, { 691 }, { 692 }, { 693 }, { 694 }, { 695 }, { 696 }, { 697 }, { 698 }, { 699 }, { 700 }, { 701 }, { 702 }, { 703 }, { 704 }, { 705 }, { 706 }, { 707 }, { 708 }, { 709 }, { 710 }, { 711 }, { 712 }, { 713 }, { 714 }, { 715 }, { 716 }, { 717 }, { 718 }, { 719 }, { 720 }, { 721 }, { 722 }, { 723 }, { 724 }, { 725 }, { 726 }, { 727 }, { 728 }, { 729 }, { 730 }, { 731 }, { 732 }, { 733 }, { 734 }, { 735 }, { 736 }, { 737 }, { 738 }, { 739 }, { 740 }, { 741 }, { 742 }, { 743 }, { 744 }, { 745 }, { 746 }, { 747 }, { 748 }, { 749 }, { 750 }, { 751 }, { 752 }, { 753 }, { 754 }, { 755 }, { 756 }, { 757 }, { 758 }, { 759 }, { 760 }, { 761 }, { 762 }, { 763 }, { 764 }, { 765 }, { 766 }, { 767 }, { 768 }, { 769 }, { 770 }, { 771 }, { 772 }, { 773 }, { 774 }, { 775 }, { 776 }, { 777 }, { 778 }, { 779 }, { 780 }, { 781 }, { 782 }, { 783 }, { 784 }, { 785 }, { 786 }, { 787 }, { 788 }, { 789 }, { 790 }, { 791 }, { 792 }, { 793 }, { 794 }, { 795 }, { 796 }, { 797 }, { 798 }, { 799 }, { 800 }, { 801 }, { 802 }, { 803 }, { 804 }, { 805 }, { 806 }, { 807 }, { 808 }, { 809 }, { 810 }, { 811 }, { 812 }, { 813 }, { 814 }, { 815 }, { 816 }, { 817 }, { 818 }, { 819 }, { 820 }, { 821 }, { 822 }, { 823 }, { 824 }, { 825 }, { 826 }, { 827 }, { 828 }, { 829 }, { 830 }, { 831 }, { 832 }, { 833 }, { 834 }, { 835 }, { 836 }, { 837 }, { 838 }, { 839 }, { 840 }, { 841 }, { 842 }, { 843 }, { 844 }, { 845 }, { 846 }, { 847 }, { 848 }, { 849 }, { 850 }, { 851 }, { 852 }, { 853 }, { 854 }, { 855 }, { 856 }, { 857 }, { 858 }, { 859 }, { 860 }, { 861 }, { 862 }, { 863 }, { 864 }, { 865 }, { 866 }, { 867 }, { 868 }, { 869 }, { 870 }, { 871 }, { 872 }, { 873 }, { 874 }, { 875 }, { 876 }, { 877 }, { 878 }, { 879 }, { 880 }, { 881 }, { 882 }, { 883 }, { 884 }, { 885 }, { 886 }, { 887 }, { 888 }, { 889 }, { 890 }, { 891 }, { 892 }, { 893 }, { 894 }, { 895 }, { 896 }, { 897 }, { 898 }, { 899 }, { 900 }, { 901 }, { 902 }, { 903 }, { 904 }, { 905 }, { 906 }, { 907 }, { 908 }, { 909 }, { 910 }, { 911 }, { 912 }, { 913 }, { 914 }, { 915 }, { 916 }, { 917 }, { 918 }, { 919 }, { 920 }, { 921 }, { 922 }, { 923 }, { 924 }, { 925 }, { 926 }, { 927 }, { 928 }, { 929 }, { 930 }, { 931 }, { 932 }, { 933 }, { 934 }, { 935 }, { 936 }, { 937 }, { 938 }, { 939 }, { 940 }, { 941 }, { 942 }, { 943 }, { 944 }, { 945 }, { 946 }, { 947 }, { 948 }, { 949 }, { 950 }, { 951 }, { 952 }, { 953 }, { 954 }, { 955 }, { 956 }, { 957 }, { 958 }, { 959 }, { 960 }, { 961 }, { 962 }, { 963 }, { 964 }, { 965 }, { 966 }, { 967 }, { 968 }, { 969 }, { 970 }, { 971 }, { 972 }, { 973 }, { 974 }, { 975 }, { 976 }, { 977 }, { 978 }, { 979 }, { 980 }, { 981 }, { 982 }, { 983 }, { 984 }, { 985 }, { 986 }, { 987 }, { 988 }, { 989 }, { 990 }, { 991 }, { 992 }, { 993 }, { 994 }, { 995 }, { 996 }, { 997 }, { 998 }, { 999 }]])

=== OrderNumbers2
ID:     ordernumbers2_1
Type:   stream
Stage:  postgres
Inputs: orders_2
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalProject(id=[$0], time=[$2])
  LogicalJoin(condition=[=($1, CAST($4):BIGINT NOT NULL)], joinType=[inner]) hints[JoinCostHint options:[STREAM, STATIC, 1, RIGHT]]
    LogicalTableScan(table=[[orders_2]])
    LogicalValues(tuples=[[{ 1 }, { 2 }, { 3 }, { 4 }, { 4 }]])

=== OrderNumbers
ID:     ordernumbers_1
Type:   stream
Stage:  postgres
Inputs: numbers_1, orders_2
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalProject(id=[$0], time=[$2])
  LogicalJoin(condition=[=($1, CAST($4):BIGINT NOT NULL)], joinType=[inner]) hints[JoinCostHint options:[STREAM, STATIC, 1, RIGHT]]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[numbers_1]])

=== OrderPairs2
ID:     orderpairs2_1
Type:   stream
Stage:  postgres
Inputs: orders_2
Primary Key: id, time, pk
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - pk: INTEGER NOT NULL
Plan:
LogicalProject(id=[$0], time=[$2], pk=[$5])
  LogicalJoin(condition=[true], joinType=[inner]) hints[JoinCostHint options:[STREAM, STATIC, 0, NONE]]
    LogicalTableScan(table=[[orders_2]])
    LogicalValues(tuples=[[{ 1, 1 }, { 2, 2 }, { 3, 3 }, { 4, 4 }, { 4, 4 }]])

=== OrderPairs
ID:     orderpairs_1
Type:   stream
Stage:  postgres
Inputs: orders_2
Primary Key: id, time, _id0
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - _id0: INTEGER NOT NULL
Plan:
LogicalProject(id=[$0], time=[$2], _id0=[$4])
  LogicalJoin(condition=[true], joinType=[inner]) hints[JoinCostHint options:[STREAM, STATIC, 0, NONE]]
    LogicalTableScan(table=[[orders_2]])
    LogicalValues(tuples=[[{ 1, 1 }, { 2, 2 }, { 3, 3 }, { 4, 4 }, { 4, 4 }]])

=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED,\n  WATERMARK FOR `time` AS `time` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `numbers2_1` (\n  `id` INTEGER NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'numbers2_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `numbers_1` (\n  `id` INTEGER NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'numbers_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `numberslarge_1` (\n  `id` INTEGER NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'numberslarge_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orders_2` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM (VALUES (1),\n    (2),\n    (3),\n    (4),\n    (4)) AS `t` (`id`);",
    "CREATE VIEW `table$2`\nAS\nSELECT *\nFROM (VALUES (1),\n    (2),\n    (3),\n    (4),\n    (5)) AS `t` (`id`);",
    "CREATE VIEW `table$3`\nAS\nSELECT *\nFROM (VALUES (0),\n    (1),\n    (2),\n    (3),\n    (4),\n    (5),\n    (6),\n    (7),\n    (8),\n    (9),\n    (10),\n    (11),\n    (12),\n    (13),\n    (14),\n    (15),\n    (16),\n    (17),\n    (18),\n    (19),\n    (20),\n    (21),\n    (22),\n    (23),\n    (24),\n    (25),\n    (26),\n    (27),\n    (28),\n    (29),\n    (30),\n    (31),\n    (32),\n    (33),\n    (34),\n    (35),\n    (36),\n    (37),\n    (38),\n    (39),\n    (40),\n    (41),\n    (42),\n    (43),\n    (44),\n    (45),\n    (46),\n    (47),\n    (48),\n    (49),\n    (50),\n    (51),\n    (52),\n    (53),\n    (54),\n    (55),\n    (56),\n    (57),\n    (58),\n    (59),\n    (60),\n    (61),\n    (62),\n    (63),\n    (64),\n    (65),\n    (66),\n    (67),\n    (68),\n    (69),\n    (70),\n    (71),\n    (72),\n    (73),\n    (74),\n    (75),\n    (76),\n    (77),\n    (78),\n    (79),\n    (80),\n    (81),\n    (82),\n    (83),\n    (84),\n    (85),\n    (86),\n    (87),\n    (88),\n    (89),\n    (90),\n    (91),\n    (92),\n    (93),\n    (94),\n    (95),\n    (96),\n    (97),\n    (98),\n    (99),\n    (100),\n    (101),\n    (102),\n    (103),\n    (104),\n    (105),\n    (106),\n    (107),\n    (108),\n    (109),\n    (110),\n    (111),\n    (112),\n    (113),\n    (114),\n    (115),\n    (116),\n    (117),\n    (118),\n    (119),\n    (120),\n    (121),\n    (122),\n    (123),\n    (124),\n    (125),\n    (126),\n    (127),\n    (128),\n    (129),\n    (130),\n    (131),\n    (132),\n    (133),\n    (134),\n    (135),\n    (136),\n    (137),\n    (138),\n    (139),\n    (140),\n    (141),\n    (142),\n    (143),\n    (144),\n    (145),\n    (146),\n    (147),\n    (148),\n    (149),\n    (150),\n    (151),\n    (152),\n    (153),\n    (154),\n    (155),\n    (156),\n    (157),\n    (158),\n    (159),\n    (160),\n    (161),\n    (162),\n    (163),\n    (164),\n    (165),\n    (166),\n    (167),\n    (168),\n    (169),\n    (170),\n    (171),\n    (172),\n    (173),\n    (174),\n    (175),\n    (176),\n    (177),\n    (178),\n    (179),\n    (180),\n    (181),\n    (182),\n    (183),\n    (184),\n    (185),\n    (186),\n    (187),\n    (188),\n    (189),\n    (190),\n    (191),\n    (192),\n    (193),\n    (194),\n    (195),\n    (196),\n    (197),\n    (198),\n    (199),\n    (200),\n    (201),\n    (202),\n    (203),\n    (204),\n    (205),\n    (206),\n    (207),\n    (208),\n    (209),\n    (210),\n    (211),\n    (212),\n    (213),\n    (214),\n    (215),\n    (216),\n    (217),\n    (218),\n    (219),\n    (220),\n    (221),\n    (222),\n    (223),\n    (224),\n    (225),\n    (226),\n    (227),\n    (228),\n    (229),\n    (230),\n    (231),\n    (232),\n    (233),\n    (234),\n    (235),\n    (236),\n    (237),\n    (238),\n    (239),\n    (240),\n    (241),\n    (242),\n    (243),\n    (244),\n    (245),\n    (246),\n    (247),\n    (248),\n    (249),\n    (250),\n    (251),\n    (252),\n    (253),\n    (254),\n    (255),\n    (256),\n    (257),\n    (258),\n    (259),\n    (260),\n    (261),\n    (262),\n    (263),\n    (264),\n    (265),\n    (266),\n    (267),\n    (268),\n    (269),\n    (270),\n    (271),\n    (272),\n    (273),\n    (274),\n    (275),\n    (276),\n    (277),\n    (278),\n    (279),\n    (280),\n    (281),\n    (282),\n    (283),\n    (284),\n    (285),\n    (286),\n    (287),\n    (288),\n    (289),\n    (290),\n    (291),\n    (292),\n    (293),\n    (294),\n    (295),\n    (296),\n    (297),\n    (298),\n    (299),\n    (300),\n    (301),\n    (302),\n    (303),\n    (304),\n    (305),\n    (306),\n    (307),\n    (308),\n    (309),\n    (310),\n    (311),\n    (312),\n    (313),\n    (314),\n    (315),\n    (316),\n    (317),\n    (318),\n    (319),\n    (320),\n    (321),\n    (322),\n    (323),\n    (324),\n    (325),\n    (326),\n    (327),\n    (328),\n    (329),\n    (330),\n    (331),\n    (332),\n    (333),\n    (334),\n    (335),\n    (336),\n    (337),\n    (338),\n    (339),\n    (340),\n    (341),\n    (342),\n    (343),\n    (344),\n    (345),\n    (346),\n    (347),\n    (348),\n    (349),\n    (350),\n    (351),\n    (352),\n    (353),\n    (354),\n    (355),\n    (356),\n    (357),\n    (358),\n    (359),\n    (360),\n    (361),\n    (362),\n    (363),\n    (364),\n    (365),\n    (366),\n    (367),\n    (368),\n    (369),\n    (370),\n    (371),\n    (372),\n    (373),\n    (374),\n    (375),\n    (376),\n    (377),\n    (378),\n    (379),\n    (380),\n    (381),\n    (382),\n    (383),\n    (384),\n    (385),\n    (386),\n    (387),\n    (388),\n    (389),\n    (390),\n    (391),\n    (392),\n    (393),\n    (394),\n    (395),\n    (396),\n    (397),\n    (398),\n    (399),\n    (400),\n    (401),\n    (402),\n    (403),\n    (404),\n    (405),\n    (406),\n    (407),\n    (408),\n    (409),\n    (410),\n    (411),\n    (412),\n    (413),\n    (414),\n    (415),\n    (416),\n    (417),\n    (418),\n    (419),\n    (420),\n    (421),\n    (422),\n    (423),\n    (424),\n    (425),\n    (426),\n    (427),\n    (428),\n    (429),\n    (430),\n    (431),\n    (432),\n    (433),\n    (434),\n    (435),\n    (436),\n    (437),\n    (438),\n    (439),\n    (440),\n    (441),\n    (442),\n    (443),\n    (444),\n    (445),\n    (446),\n    (447),\n    (448),\n    (449),\n    (450),\n    (451),\n    (452),\n    (453),\n    (454),\n    (455),\n    (456),\n    (457),\n    (458),\n    (459),\n    (460),\n    (461),\n    (462),\n    (463),\n    (464),\n    (465),\n    (466),\n    (467),\n    (468),\n    (469),\n    (470),\n    (471),\n    (472),\n    (473),\n    (474),\n    (475),\n    (476),\n    (477),\n    (478),\n    (479),\n    (480),\n    (481),\n    (482),\n    (483),\n    (484),\n    (485),\n    (486),\n    (487),\n    (488),\n    (489),\n    (490),\n    (491),\n    (492),\n    (493),\n    (494),\n    (495),\n    (496),\n    (497),\n    (498),\n    (499),\n    (500),\n    (501),\n    (502),\n    (503),\n    (504),\n    (505),\n    (506),\n    (507),\n    (508),\n    (509),\n    (510),\n    (511),\n    (512),\n    (513),\n    (514),\n    (515),\n    (516),\n    (517),\n    (518),\n    (519),\n    (520),\n    (521),\n    (522),\n    (523),\n    (524),\n    (525),\n    (526),\n    (527),\n    (528),\n    (529),\n    (530),\n    (531),\n    (532),\n    (533),\n    (534),\n    (535),\n    (536),\n    (537),\n    (538),\n    (539),\n    (540),\n    (541),\n    (542),\n    (543),\n    (544),\n    (545),\n    (546),\n    (547),\n    (548),\n    (549),\n    (550),\n    (551),\n    (552),\n    (553),\n    (554),\n    (555),\n    (556),\n    (557),\n    (558),\n    (559),\n    (560),\n    (561),\n    (562),\n    (563),\n    (564),\n    (565),\n    (566),\n    (567),\n    (568),\n    (569),\n    (570),\n    (571),\n    (572),\n    (573),\n    (574),\n    (575),\n    (576),\n    (577),\n    (578),\n    (579),\n    (580),\n    (581),\n    (582),\n    (583),\n    (584),\n    (585),\n    (586),\n    (587),\n    (588),\n    (589),\n    (590),\n    (591),\n    (592),\n    (593),\n    (594),\n    (595),\n    (596),\n    (597),\n    (598),\n    (599),\n    (600),\n    (601),\n    (602),\n    (603),\n    (604),\n    (605),\n    (606),\n    (607),\n    (608),\n    (609),\n    (610),\n    (611),\n    (612),\n    (613),\n    (614),\n    (615),\n    (616),\n    (617),\n    (618),\n    (619),\n    (620),\n    (621),\n    (622),\n    (623),\n    (624),\n    (625),\n    (626),\n    (627),\n    (628),\n    (629),\n    (630),\n    (631),\n    (632),\n    (633),\n    (634),\n    (635),\n    (636),\n    (637),\n    (638),\n    (639),\n    (640),\n    (641),\n    (642),\n    (643),\n    (644),\n    (645),\n    (646),\n    (647),\n    (648),\n    (649),\n    (650),\n    (651),\n    (652),\n    (653),\n    (654),\n    (655),\n    (656),\n    (657),\n    (658),\n    (659),\n    (660),\n    (661),\n    (662),\n    (663),\n    (664),\n    (665),\n    (666),\n    (667),\n    (668),\n    (669),\n    (670),\n    (671),\n    (672),\n    (673),\n    (674),\n    (675),\n    (676),\n    (677),\n    (678),\n    (679),\n    (680),\n    (681),\n    (682),\n    (683),\n    (684),\n    (685),\n    (686),\n    (687),\n    (688),\n    (689),\n    (690),\n    (691),\n    (692),\n    (693),\n    (694),\n    (695),\n    (696),\n    (697),\n    (698),\n    (699),\n    (700),\n    (701),\n    (702),\n    (703),\n    (704),\n    (705),\n    (706),\n    (707),\n    (708),\n    (709),\n    (710),\n    (711),\n    (712),\n    (713),\n    (714),\n    (715),\n    (716),\n    (717),\n    (718),\n    (719),\n    (720),\n    (721),\n    (722),\n    (723),\n    (724),\n    (725),\n    (726),\n    (727),\n    (728),\n    (729),\n    (730),\n    (731),\n    (732),\n    (733),\n    (734),\n    (735),\n    (736),\n    (737),\n    (738),\n    (739),\n    (740),\n    (741),\n    (742),\n    (743),\n    (744),\n    (745),\n    (746),\n    (747),\n    (748),\n    (749),\n    (750),\n    (751),\n    (752),\n    (753),\n    (754),\n    (755),\n    (756),\n    (757),\n    (758),\n    (759),\n    (760),\n    (761),\n    (762),\n    (763),\n    (764),\n    (765),\n    (766),\n    (767),\n    (768),\n    (769),\n    (770),\n    (771),\n    (772),\n    (773),\n    (774),\n    (775),\n    (776),\n    (777),\n    (778),\n    (779),\n    (780),\n    (781),\n    (782),\n    (783),\n    (784),\n    (785),\n    (786),\n    (787),\n    (788),\n    (789),\n    (790),\n    (791),\n    (792),\n    (793),\n    (794),\n    (795),\n    (796),\n    (797),\n    (798),\n    (799),\n    (800),\n    (801),\n    (802),\n    (803),\n    (804),\n    (805),\n    (806),\n    (807),\n    (808),\n    (809),\n    (810),\n    (811),\n    (812),\n    (813),\n    (814),\n    (815),\n    (816),\n    (817),\n    (818),\n    (819),\n    (820),\n    (821),\n    (822),\n    (823),\n    (824),\n    (825),\n    (826),\n    (827),\n    (828),\n    (829),\n    (830),\n    (831),\n    (832),\n    (833),\n    (834),\n    (835),\n    (836),\n    (837),\n    (838),\n    (839),\n    (840),\n    (841),\n    (842),\n    (843),\n    (844),\n    (845),\n    (846),\n    (847),\n    (848),\n    (849),\n    (850),\n    (851),\n    (852),\n    (853),\n    (854),\n    (855),\n    (856),\n    (857),\n    (858),\n    (859),\n    (860),\n    (861),\n    (862),\n    (863),\n    (864),\n    (865),\n    (866),\n    (867),\n    (868),\n    (869),\n    (870),\n    (871),\n    (872),\n    (873),\n    (874),\n    (875),\n    (876),\n    (877),\n    (878),\n    (879),\n    (880),\n    (881),\n    (882),\n    (883),\n    (884),\n    (885),\n    (886),\n    (887),\n    (888),\n    (889),\n    (890),\n    (891),\n    (892),\n    (893),\n    (894),\n    (895),\n    (896),\n    (897),\n    (898),\n    (899),\n    (900),\n    (901),\n    (902),\n    (903),\n    (904),\n    (905),\n    (906),\n    (907),\n    (908),\n    (909),\n    (910),\n    (911),\n    (912),\n    (913),\n    (914),\n    (915),\n    (916),\n    (917),\n    (918),\n    (919),\n    (920),\n    (921),\n    (922),\n    (923),\n    (924),\n    (925),\n    (926),\n    (927),\n    (928),\n    (929),\n    (930),\n    (931),\n    (932),\n    (933),\n    (934),\n    (935),\n    (936),\n    (937),\n    (938),\n    (939),\n    (940),\n    (941),\n    (942),\n    (943),\n    (944),\n    (945),\n    (946),\n    (947),\n    (948),\n    (949),\n    (950),\n    (951),\n    (952),\n    (953),\n    (954),\n    (955),\n    (956),\n    (957),\n    (958),\n    (959),\n    (960),\n    (961),\n    (962),\n    (963),\n    (964),\n    (965),\n    (966),\n    (967),\n    (968),\n    (969),\n    (970),\n    (971),\n    (972),\n    (973),\n    (974),\n    (975),\n    (976),\n    (977),\n    (978),\n    (979),\n    (980),\n    (981),\n    (982),\n    (983),\n    (984),\n    (985),\n    (986),\n    (987),\n    (988),\n    (989),\n    (990),\n    (991),\n    (992),\n    (993),\n    (994),\n    (995),\n    (996),\n    (997),\n    (998),\n    (999)) AS `t` (`id`);",
    "CREATE VIEW `table$4`\nAS\nSELECT `id`, `customerid`, `time`, `default_catalog`.`default_database`.`ToJson`(`entries`) AS `entries`\nFROM `orders_1`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `numbers2_1`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `numbers_1`\n (SELECT *\n  FROM `table$2`)\n ;\n INSERT INTO `numberslarge_1`\n  (SELECT *\n   FROM `table$3`)\n  ;\n  INSERT INTO `orders_2`\n   (SELECT *\n    FROM `table$4`)\n   ;\n   END;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "filesystem"
  ],
  "formats" : [
    "json"
  ]
}
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "numbers2_1",
      "columns" : [
        "\"id\" INTEGER NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS numbers2_1 (\"id\" INTEGER NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "numbers_1",
      "columns" : [
        "\"id\" INTEGER NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS numbers_1 (\"id\" INTEGER NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "numberslarge_1",
      "columns" : [
        "\"id\" INTEGER NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS numberslarge_1 (\"id\" INTEGER NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "orders_2",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_2 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "indexName" : "orders_2_hash_c1",
      "tableName" : "orders_2",
      "columns" : [
        "customerid"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_hash_c1 ON orders_2 USING hash (\"customerid\");"
    },
    {
      "indexName" : "orders_2_hash_c2",
      "tableName" : "orders_2",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_hash_c2 ON orders_2 USING hash (\"time\");"
    }
  ],
  "views" : [
    {
      "name" : "Orders",
      "sql" : "CREATE OR REPLACE VIEW \"Orders\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\";"
    },
    {
      "name" : "NumbersLarge",
      "sql" : "CREATE OR REPLACE VIEW \"NumbersLarge\"(\"id\") AS SELECT *\nFROM \"numberslarge_1\"\nORDER BY \"id\";"
    },
    {
      "name" : "OrderNumbers",
      "sql" : "CREATE OR REPLACE VIEW \"OrderNumbers\"(\"id\", \"time\") AS SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\nFROM \"orders_2\"\n INNER JOIN \"numbers_1\" ON \"orders_2\".\"customerid\" = CAST(\"numbers_1\".\"id\" AS BIGINT)\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\";"
    },
    {
      "name" : "OrderNumbers2",
      "sql" : "CREATE OR REPLACE VIEW \"OrderNumbers2\"(\"id\", \"time\") AS SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\nFROM \"orders_2\"\n INNER JOIN (VALUES (1),\n    (2),\n    (3),\n    (4),\n    (4)) AS \"t\" (\"id\") ON \"orders_2\".\"customerid\" = CAST(\"t\".\"id\" AS BIGINT)\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\";"
    },
    {
      "name" : "Numbers",
      "sql" : "CREATE OR REPLACE VIEW \"Numbers\"(\"id\") AS SELECT *\nFROM \"numbers_1\"\nORDER BY \"id\";"
    },
    {
      "name" : "OrderPairs",
      "sql" : "CREATE OR REPLACE VIEW \"OrderPairs\"(\"id\", \"time\", \"_id0\") AS SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"id\" AS \"_id0\"\nFROM \"orders_2\",\n  (VALUES (1, 1),\n    (2, 2),\n    (3, 3),\n    (4, 4),\n    (4, 4)) AS \"t\" (\"id\", \"pk\")\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\", \"t\".\"id\";"
    },
    {
      "name" : "OrderPairs2",
      "sql" : "CREATE OR REPLACE VIEW \"OrderPairs2\"(\"id\", \"time\", \"pk\") AS SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\nFROM \"orders_2\",\n  (VALUES (1, 1),\n    (2, 2),\n    (3, 3),\n    (4, 4),\n    (4, 4)) AS \"t\" (\"id\", \"pk\")\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\", \"t\".\"pk\";"
    },
    {
      "name" : "Numbers2",
      "sql" : "CREATE OR REPLACE VIEW \"Numbers2\"(\"id\") AS SELECT *\nFROM \"numbers2_1\"\nORDER BY \"id\";"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Numbers",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"numbers_1\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"numbers_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Numbers2",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"numbers2_1\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"numbers2_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "NumbersLarge",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"numberslarge_1\"\nWHERE \"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"numberslarge_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderNumbers",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\n  FROM \"orders_2\"\n   INNER JOIN \"numbers_1\" ON \"orders_2\".\"customerid\" = CAST(\"numbers_1\".\"id\" AS BIGINT)) AS \"t\"\nWHERE \"t\".\"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\n  FROM \"orders_2\"\n   INNER JOIN \"numbers_1\" ON \"orders_2\".\"customerid\" = CAST(\"numbers_1\".\"id\" AS BIGINT)) AS \"t\"\nWHERE \"t\".\"id\" = $1 AND \"t\".\"time\" = $2\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\n  FROM \"orders_2\"\n   INNER JOIN \"numbers_1\" ON \"orders_2\".\"customerid\" = CAST(\"numbers_1\".\"id\" AS BIGINT)) AS \"t\"\nWHERE \"t\".\"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\nFROM \"orders_2\"\n INNER JOIN \"numbers_1\" ON \"orders_2\".\"customerid\" = CAST(\"numbers_1\".\"id\" AS BIGINT)\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderNumbers2",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\n  FROM \"orders_2\"\n   INNER JOIN (VALUES (1),\n      (2),\n      (3),\n      (4),\n      (4)) AS \"t\" (\"id\") ON \"orders_2\".\"customerid\" = CAST(\"t\".\"id\" AS BIGINT)) AS \"t0\"\nWHERE \"t0\".\"id\" = $1 AND \"t0\".\"time\" = $2\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\n  FROM \"orders_2\"\n   INNER JOIN (VALUES (1),\n      (2),\n      (3),\n      (4),\n      (4)) AS \"t\" (\"id\") ON \"orders_2\".\"customerid\" = CAST(\"t\".\"id\" AS BIGINT)) AS \"t0\"\nWHERE \"t0\".\"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\n  FROM \"orders_2\"\n   INNER JOIN (VALUES (1),\n      (2),\n      (3),\n      (4),\n      (4)) AS \"t\" (\"id\") ON \"orders_2\".\"customerid\" = CAST(\"t\".\"id\" AS BIGINT)) AS \"t0\"\nWHERE \"t0\".\"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"orders_2\".\"id\", \"orders_2\".\"time\"\nFROM \"orders_2\"\n INNER JOIN (VALUES (1),\n    (2),\n    (3),\n    (4),\n    (4)) AS \"t\" (\"id\") ON \"orders_2\".\"customerid\" = CAST(\"t\".\"id\" AS BIGINT)\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderPairs",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"id\" AS \"_id0\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\", \"_id0\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"id\" AS \"_id0\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"id\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"_id0\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"id\" AS \"_id0\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"id\" = $1 AND \"t0\".\"time\" = $2\nORDER BY \"time\" DESC NULLS LAST, \"_id0\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"id\" AS \"_id0\"\nFROM \"orders_2\",\n  (VALUES (1, 1),\n    (2, 2),\n    (3, 3),\n    (4, 4),\n    (4, 4)) AS \"t\" (\"id\", \"pk\")\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\", \"t\".\"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderPairs2",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"id\" = $1 AND \"t0\".\"time\" = $2\nORDER BY \"time\" DESC NULLS LAST, \"pk\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "pk"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"id\" = $1 AND \"t0\".\"time\" = $2 AND \"t0\".\"pk\" = $3\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "pk"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"id\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"pk\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "pk"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"id\" = $1 AND \"t0\".\"pk\" = $2\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "pk"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\", \"pk\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "pk"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"time\" = $1 AND \"t0\".\"pk\" = $2\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "pk"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "pk"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM (SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\n  FROM \"orders_2\",\n    (VALUES (1, 1),\n      (2, 2),\n      (3, 3),\n      (4, 4),\n      (4, 4)) AS \"t\" (\"id\", \"pk\")) AS \"t0\"\nWHERE \"t0\".\"pk\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "pk"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT \"orders_2\".\"id\", \"orders_2\".\"time\", \"t\".\"pk\"\nFROM \"orders_2\",\n  (VALUES (1, 1),\n    (2, 2),\n    (3, 3),\n    (4, 4),\n    (4, 4)) AS \"t\" (\"id\", \"pk\")\nORDER BY \"orders_2\".\"time\" DESC NULLS LAST, \"orders_2\".\"id\", \"t\".\"pk\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "\"An RFC-3339 compliant Full Date Scalar\"\nscalar Date\n\n\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\n\"A JSON scalar\"\nscalar JSON\n\n\"24-hour clock time value string in the format `hh:mm:ss` or `hh:mm:ss.sss`.\"\nscalar LocalTime\n\ntype Numbers {\n  id: Int!\n}\n\ntype Numbers2 {\n  id: Int!\n}\n\ntype NumbersLarge {\n  id: Int!\n}\n\ntype OrderNumbers {\n  id: Float!\n  time: DateTime!\n}\n\ntype OrderNumbers2 {\n  id: Float!\n  time: DateTime!\n}\n\ntype OrderPairs {\n  id: Float!\n  time: DateTime!\n}\n\ntype OrderPairs2 {\n  id: Float!\n  time: DateTime!\n  pk: Int!\n}\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype Query {\n  Numbers(id: Int, limit: Int = 10, offset: Int = 0): [Numbers!]\n  Numbers2(id: Int, limit: Int = 10, offset: Int = 0): [Numbers2!]\n  NumbersLarge(id: Int, limit: Int = 10, offset: Int = 0): [NumbersLarge!]\n  OrderNumbers(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [OrderNumbers!]\n  OrderNumbers2(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [OrderNumbers2!]\n  OrderPairs(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [OrderPairs!]\n  OrderPairs2(id: Float, time: DateTime, pk: Int, limit: Int = 10, offset: Int = 0): [OrderPairs2!]\n  Orders(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [Orders!]\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n"
    }
  }
}
