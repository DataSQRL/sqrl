>>>pipeline_explain.txt
=== OrderAgg1
ID:     orderagg1_1
Type:   state
Stage:  flink
Inputs: orders_2
Primary Key: customerid
Timestamp  : __timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - count: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalAggregate(group=[{1}], count=[COUNT()], __timestamp=[MAX($2)])
  LogicalTableScan(table=[[orders_2]])

=== OrderAgg2
ID:     orderagg2_1
Type:   state
Stage:  flink
Inputs: orders_2
Primary Key: customerid
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - count: BIGINT NOT NULL
Plan:
LogicalAggregate(group=[{1}], timestamp=[MAX($2)], count=[COUNT()])
  LogicalTableScan(table=[[orders_2]])

=== OrderAgg3
ID:     orderagg3_1
Type:   state
Stage:  flink
Inputs: ordersstate_1
Primary Key: customerid
Timestamp  : __timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - count: BIGINT NOT NULL
 - __timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalAggregate(group=[{1}], count=[COUNT()], __timestamp=[MAX($2)])
  LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
    LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
      LogicalTableScan(table=[[ordersstate_1]])

=== OrderAgg4
ID:     orderagg4_1
Type:   state
Stage:  flink
Inputs: ordersstate_1
Primary Key: customerid
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - count: BIGINT NOT NULL
Plan:
LogicalAggregate(group=[{1}], timestamp=[MAX($2)], count=[COUNT()])
  LogicalFilter(condition=[=($4, 1)]) hints[DedupHint]
    LogicalProject(id=[$0], customerid=[$1], time=[$2], entries=[$3], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS FIRST)])
      LogicalTableScan(table=[[ordersstate_1]])

=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]], hints=[[[WatermarkHint inheritPath:[] options:[2]]]]) hints[WatermarkHint options:[2]]

=== OrdersState
ID:     ordersstate_1
Type:   state
Stage:  flink
Inputs: orders_2
Primary Key: id
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Post Processors:
 - topN: partition=id limit=1 sort=#2: time TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC 
Plan:
LogicalTableScan(table=[[orders_2]])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED,\n  WATERMARK FOR `time` AS `time` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `orderagg1_1` (\n  `customerid` BIGINT NOT NULL,\n  `count` BIGINT NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`customerid`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orderagg1_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orderagg2_1` (\n  `customerid` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `count` BIGINT NOT NULL,\n  PRIMARY KEY (`customerid`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orderagg2_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orderagg3_1` (\n  `customerid` BIGINT NOT NULL,\n  `count` BIGINT NOT NULL,\n  `__timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`customerid`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orderagg3_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orderagg4_1` (\n  `customerid` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `count` BIGINT NOT NULL,\n  PRIMARY KEY (`customerid`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orderagg4_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orders_2` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordersstate_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordersstate_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT `customerid`, COUNT(*) AS `count`, MAX(`time`) AS `__timestamp`\nFROM `orders_1`\nGROUP BY `customerid`;",
    "CREATE VIEW `table$2`\nAS\nSELECT `customerid`, MAX(`time`) AS `timestamp`, COUNT(*) AS `count`\nFROM `orders_1`\nGROUP BY `customerid`;",
    "CREATE VIEW `table$3`\nAS\nSELECT `customerid`, COUNT(*) AS `count`, MAX(`time`) AS `__timestamp`\nFROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n  FROM `orders_1`) AS `t0`\nWHERE `_rownum` = 1\nGROUP BY `customerid`;",
    "CREATE VIEW `table$4`\nAS\nSELECT `customerid`, MAX(`time`) AS `timestamp`, COUNT(*) AS `count`\nFROM (SELECT `id`, `customerid`, `time`, `entries`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `time` DESC) AS `_rownum`\n  FROM `orders_1`) AS `t0`\nWHERE `_rownum` = 1\nGROUP BY `customerid`;",
    "CREATE VIEW `table$5`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`\nFROM `orders_1`;",
    "CREATE VIEW `table$6`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`\nFROM `orders_1`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `orderagg1_1`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `orderagg2_1`\n (SELECT *\n  FROM `table$2`)\n ;\n INSERT INTO `orderagg3_1`\n  (SELECT *\n   FROM `table$3`)\n  ;\n  INSERT INTO `orderagg4_1`\n   (SELECT *\n    FROM `table$4`)\n   ;\n   INSERT INTO `orders_2`\n    (SELECT *\n     FROM `table$5`)\n    ;\n    INSERT INTO `ordersstate_1`\n     (SELECT *\n      FROM `table$6`)\n     ;\n     END;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "filesystem"
  ],
  "formats" : [
    "json"
  ]
}
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "orderagg1_1",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"count\" BIGINT NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orderagg1_1 (\"customerid\" BIGINT NOT NULL,\"count\" BIGINT NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"customerid\"));"
    },
    {
      "name" : "orderagg2_1",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"count\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orderagg2_1 (\"customerid\" BIGINT NOT NULL,\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL,\"count\" BIGINT NOT NULL , PRIMARY KEY (\"customerid\"));"
    },
    {
      "name" : "orderagg3_1",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"count\" BIGINT NOT NULL",
        "\"__timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orderagg3_1 (\"customerid\" BIGINT NOT NULL,\"count\" BIGINT NOT NULL,\"__timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"customerid\"));"
    },
    {
      "name" : "orderagg4_1",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"count\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orderagg4_1 (\"customerid\" BIGINT NOT NULL,\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL,\"count\" BIGINT NOT NULL , PRIMARY KEY (\"customerid\"));"
    },
    {
      "name" : "orders_2",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_2 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "name" : "ordersstate_1",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordersstate_1 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "indexName" : "orders_2_hash_c2",
      "tableName" : "orders_2",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_hash_c2 ON orders_2 USING hash (\"time\");"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderAgg1",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
<<<<<<< HEAD
<<<<<<< HEAD
              "sql" : "SELECT *\nFROM \"orderagg1_1\"\nWHERE \"customerid\" = $1",
=======
              "sql" : "SELECT \"customerid\", \"count\", \"__timestamp\", 1 AS \"__pk\"\nFROM \"orderagg1_1\"\nWHERE \"customerid\" = $1\nORDER BY '1'",
>>>>>>> 1644ef409 (Bump to flink 1.19)
=======
              "sql" : "SELECT \"customerid\", \"count\", \"__timestamp\", 1 AS \"__pk\"\nFROM \"orderagg1_1\"\nWHERE \"customerid\" = $1\nORDER BY 1",
>>>>>>> 77e0bf85a (Fix conformance)
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg1_1\"\nORDER BY \"customerid\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderAgg2",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg2_1\"\nORDER BY \"customerid\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
<<<<<<< HEAD
<<<<<<< HEAD
              "sql" : "SELECT *\nFROM \"orderagg2_1\"\nWHERE \"customerid\" = $1",
=======
              "sql" : "SELECT \"customerid\", \"timestamp\", \"count\", 1 AS \"__pk\"\nFROM \"orderagg2_1\"\nWHERE \"customerid\" = $1\nORDER BY '1'",
>>>>>>> 1644ef409 (Bump to flink 1.19)
=======
              "sql" : "SELECT \"customerid\", \"timestamp\", \"count\", 1 AS \"__pk\"\nFROM \"orderagg2_1\"\nWHERE \"customerid\" = $1\nORDER BY 1",
>>>>>>> 77e0bf85a (Fix conformance)
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderAgg3",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
<<<<<<< HEAD
<<<<<<< HEAD
              "sql" : "SELECT *\nFROM \"orderagg3_1\"\nWHERE \"customerid\" = $1",
=======
              "sql" : "SELECT \"customerid\", \"count\", \"__timestamp\", 1 AS \"__pk\"\nFROM \"orderagg3_1\"\nWHERE \"customerid\" = $1\nORDER BY '1'",
>>>>>>> 1644ef409 (Bump to flink 1.19)
=======
              "sql" : "SELECT \"customerid\", \"count\", \"__timestamp\", 1 AS \"__pk\"\nFROM \"orderagg3_1\"\nWHERE \"customerid\" = $1\nORDER BY 1",
>>>>>>> 77e0bf85a (Fix conformance)
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg3_1\"\nORDER BY \"customerid\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderAgg4",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orderagg4_1\"\nORDER BY \"customerid\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
<<<<<<< HEAD
<<<<<<< HEAD
              "sql" : "SELECT *\nFROM \"orderagg4_1\"\nWHERE \"customerid\" = $1",
=======
              "sql" : "SELECT \"customerid\", \"timestamp\", \"count\", 1 AS \"__pk\"\nFROM \"orderagg4_1\"\nWHERE \"customerid\" = $1\nORDER BY '1'",
>>>>>>> 1644ef409 (Bump to flink 1.19)
=======
              "sql" : "SELECT \"customerid\", \"timestamp\", \"count\", 1 AS \"__pk\"\nFROM \"orderagg4_1\"\nWHERE \"customerid\" = $1\nORDER BY 1",
>>>>>>> 77e0bf85a (Fix conformance)
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
<<<<<<< HEAD
<<<<<<< HEAD
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST",
=======
              "sql" : "SELECT \"id\", \"customerid\", \"time\", \"entries\", 1 AS \"__pk\"\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST, '1'",
>>>>>>> 1644ef409 (Bump to flink 1.19)
=======
              "sql" : "SELECT \"id\", \"customerid\", \"time\", \"entries\", 1 AS \"__pk\"\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST, 1",
>>>>>>> 77e0bf85a (Fix conformance)
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrdersState",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordersstate_1\"\nORDER BY \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
<<<<<<< HEAD
<<<<<<< HEAD
              "sql" : "SELECT *\nFROM \"ordersstate_1\"\nWHERE \"id\" = $1",
=======
              "sql" : "SELECT \"id\", \"customerid\", \"time\", \"entries\", 1 AS \"__pk\"\nFROM \"ordersstate_1\"\nWHERE \"id\" = $1\nORDER BY '1'",
>>>>>>> 1644ef409 (Bump to flink 1.19)
=======
              "sql" : "SELECT \"id\", \"customerid\", \"time\", \"entries\", 1 AS \"__pk\"\nFROM \"ordersstate_1\"\nWHERE \"id\" = $1\nORDER BY 1",
>>>>>>> 77e0bf85a (Fix conformance)
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype OrderAgg1 {\n  customerid: Float!\n  count: Float!\n}\n\ntype OrderAgg2 {\n  customerid: Float!\n  timestamp: DateTime!\n  count: Float!\n}\n\ntype OrderAgg3 {\n  customerid: Float!\n  count: Float!\n}\n\ntype OrderAgg4 {\n  customerid: Float!\n  timestamp: DateTime!\n  count: Float!\n}\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype OrdersState {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype Query {\n  OrderAgg1(customerid: Float, limit: Int = 10, offset: Int = 0): [OrderAgg1!]\n  OrderAgg2(customerid: Float, limit: Int = 10, offset: Int = 0): [OrderAgg2!]\n  OrderAgg3(customerid: Float, limit: Int = 10, offset: Int = 0): [OrderAgg3!]\n  OrderAgg4(customerid: Float, limit: Int = 10, offset: Int = 0): [OrderAgg4!]\n  Orders(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [Orders!]\n  OrdersState(id: Float, limit: Int = 10, offset: Int = 0): [OrdersState!]\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n\ntype entries_ {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n"
    }
  }
}
