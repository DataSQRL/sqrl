>>>pipeline_explain.txt
=== Customer
ID:     customer_2
Type:   stream
Stage:  flink
Primary Key: customerid, lastUpdated
Timestamp  : timestamp
Schema:
 - customerid: BIGINT NOT NULL
 - email: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - lastUpdated: BIGINT NOT NULL
 - timestamp: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[customer_1]])

=== OrderCustomer2
ID:     ordercustomer2_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: id, _time, _lastUpdated
Timestamp  : _time
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - _lastUpdated: BIGINT NOT NULL
Plan:
LogicalProject(id=[$0], name=[$6], customerid=[$1], _time=[$2], _lastUpdated=[$7])
  LogicalJoin(condition=[AND(=($1, $4), >($2, $8), <=($2, +($8, *(86400000:INTERVAL DAY, 31))))], joinType=[inner]) hints[IntervalJoin]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[customer_2]])

=== OrderCustomer3
ID:     ordercustomer3_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: id, _time, _lastUpdated
Timestamp  : _time
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - _lastUpdated: BIGINT NOT NULL
Plan:
LogicalProject(id=[$0], name=[$6], customerid=[$1], _time=[$2], _lastUpdated=[$7])
  LogicalJoin(condition=[AND(=($1, $4), >=($2, +($8, *(86400000:INTERVAL DAY, 2))), <=($2, +($8, *(86400000:INTERVAL DAY, 31))))], joinType=[inner]) hints[IntervalJoin]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[customer_2]])

=== OrderCustomer
ID:     ordercustomer_1
Type:   stream
Stage:  flink
Inputs: customer_2, orders_2
Primary Key: id, _time, _lastUpdated
Timestamp  : _time
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - customerid: BIGINT NOT NULL
 - _time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - _lastUpdated: BIGINT NOT NULL
Plan:
LogicalProject(id=[$0], name=[$6], customerid=[$1], _time=[$2], _lastUpdated=[$7])
  LogicalJoin(condition=[AND(=($1, $4), >($2, $8), <=($2, +($8, *(86400000:INTERVAL DAY, 31))))], joinType=[inner]) hints[IntervalJoin]
    LogicalTableScan(table=[[orders_2]])
    LogicalTableScan(table=[[customer_2]])

=== Orders
ID:     orders_2
Type:   stream
Stage:  flink
Primary Key: id, time
Timestamp  : time
Schema:
 - id: BIGINT NOT NULL
 - customerid: BIGINT NOT NULL
 - time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - entries: RecordType(BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY NOT NULL
Plan:
LogicalTableScan(table=[[orders_1]])

=== Product
ID:     product_2
Type:   stream
Stage:  flink
Primary Key: productid, name, description, category
Timestamp  : _ingest_time
Schema:
 - productid: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - category: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - _ingest_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[product_1]])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptostring` AS 'com.datasqrl.time.TimestampToString' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofmonth` AS 'com.datasqrl.time.EndOfMonth' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepochmilli` AS 'com.datasqrl.time.TimestampToEpochMilli' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofweek` AS 'com.datasqrl.time.EndOfWeek' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `parsetimestamp` AS 'com.datasqrl.time.ParseTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochmillitotimestamp` AS 'com.datasqrl.time.EpochMilliToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `ToJson` AS 'com.datasqrl.json.ToJson' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofminute` AS 'com.datasqrl.time.EndOfMinute' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `timestamptoepoch` AS 'com.datasqrl.time.TimestampToEpoch' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofsecond` AS 'com.datasqrl.time.EndOfSecond' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `epochtotimestamp` AS 'com.datasqrl.time.EpochToTimestamp' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `atzone` AS 'com.datasqrl.time.AtZone' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofday` AS 'com.datasqrl.time.EndOfDay' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofhour` AS 'com.datasqrl.time.EndOfHour' LANGUAGE JAVA;",
    "CREATE TEMPORARY FUNCTION IF NOT EXISTS `endofyear` AS 'com.datasqrl.time.EndOfYear' LANGUAGE JAVA;",
    "CREATE TEMPORARY TABLE `customer_1` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` AS EPOCHTOTIMESTAMP(`lastUpdated`),\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED,\n  WATERMARK FOR `timestamp` AS `timestamp` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `orders_1` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` ROW(`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE) NOT NULL ARRAY NOT NULL,\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED,\n  WATERMARK FOR `time` AS `time` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `product_1` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED,\n  WATERMARK FOR `_ingest_time` AS `_ingest_time` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'json',\n  'path' = 'file:/mock',\n  'source.monitor-interval' = '10000',\n  'connector' = 'filesystem',\n  'source.path.regex-pattern' = ''\n);",
    "CREATE TEMPORARY TABLE `customer_2` (\n  `customerid` BIGINT NOT NULL,\n  `email` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `lastUpdated` BIGINT NOT NULL,\n  `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`customerid`, `lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'customer_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomer2_1` (\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `_lastUpdated` BIGINT NOT NULL,\n  PRIMARY KEY (`id`, `_time`, `_lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomer2_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomer3_1` (\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `_lastUpdated` BIGINT NOT NULL,\n  PRIMARY KEY (`id`, `_time`, `_lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomer3_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `ordercustomer_1` (\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `_lastUpdated` BIGINT NOT NULL,\n  PRIMARY KEY (`id`, `_time`, `_lastUpdated`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'ordercustomer_1',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `orders_2` (\n  `id` BIGINT NOT NULL,\n  `customerid` BIGINT NOT NULL,\n  `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `entries` RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI='),\n  PRIMARY KEY (`id`, `time`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'orders_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE TEMPORARY TABLE `product_2` (\n  `productid` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `category` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`productid`, `name`, `description`, `category`) NOT ENFORCED\n) WITH (\n  'password' = '${JDBC_PASSWORD}',\n  'connector' = 'jdbc-sqrl',\n  'driver' = 'org.postgresql.Driver',\n  'table-name' = 'product_2',\n  'url' = '${JDBC_URL}',\n  'username' = '${JDBC_USERNAME}'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM `customer_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `orders_1`.`time` AS `_time`, `customer_1`.`lastUpdated` AS `_lastUpdated`\nFROM `orders_1`\n INNER JOIN `customer_1` ON `orders_1`.`customerid` = `customer_1`.`customerid` AND `orders_1`.`time` > `customer_1`.`timestamp` AND `orders_1`.`time` <= `customer_1`.`timestamp` + INTERVAL '1' DAY * 31;",
    "CREATE VIEW `table$3`\nAS\nSELECT `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `orders_1`.`time` AS `_time`, `customer_1`.`lastUpdated` AS `_lastUpdated`\nFROM `orders_1`\n INNER JOIN `customer_1` ON `orders_1`.`customerid` = `customer_1`.`customerid` AND `orders_1`.`time` >= `customer_1`.`timestamp` + INTERVAL '1' DAY * 2 AND `orders_1`.`time` <= `customer_1`.`timestamp` + INTERVAL '1' DAY * 31;",
    "CREATE VIEW `table$4`\nAS\nSELECT `orders_1`.`id`, `customer_1`.`name`, `orders_1`.`customerid`, `orders_1`.`time` AS `_time`, `customer_1`.`lastUpdated` AS `_lastUpdated`\nFROM `orders_1`\n INNER JOIN `customer_1` ON `orders_1`.`customerid` = `customer_1`.`customerid` AND `orders_1`.`time` > `customer_1`.`timestamp` AND `orders_1`.`time` <= `customer_1`.`timestamp` + INTERVAL '1' DAY * 31;",
    "CREATE VIEW `table$5`\nAS\nSELECT `id`, `customerid`, `time`, TOJSON(`entries`) AS `entries`\nFROM `orders_1`;",
    "CREATE VIEW `table$6`\nAS\nSELECT *\nFROM `product_1`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `customer_2`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `ordercustomer2_1`\n (SELECT *\n  FROM `table$2`)\n ;\n INSERT INTO `ordercustomer3_1`\n  (SELECT *\n   FROM `table$3`)\n  ;\n  INSERT INTO `ordercustomer_1`\n   (SELECT *\n    FROM `table$4`)\n   ;\n   INSERT INTO `orders_2`\n    (SELECT *\n     FROM `table$5`)\n    ;\n    INSERT INTO `product_2`\n     (SELECT *\n      FROM `table$6`)\n     ;\n     END;"
  ],
  "connectors" : [
    "jdbc-sqrl",
    "filesystem"
  ],
  "formats" : [
    "json"
  ],
  "compliedPlan" : "{\n  \"flinkVersion\" : \"1.19\",\n  \"nodes\" : [ {\n    \"id\" : 393,\n    \"type\" : \"stream-exec-table-source-scan_1\",\n    \"scanTableSource\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`customer_1`\"\n      }\n    },\n    \"outputType\" : \"ROW<`customerid` BIGINT NOT NULL, `email` VARCHAR(2147483647) NOT NULL, `name` VARCHAR(2147483647) NOT NULL, `lastUpdated` BIGINT NOT NULL, `timestamp` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL>\",\n    \"description\" : \"TableSourceScan(table=[[default_catalog, default_database, customer_1]], fields=[customerid, email, name, lastUpdated, timestamp])\",\n    \"inputProperties\" : [ ]\n  }, {\n    \"id\" : 394,\n    \"type\" : \"stream-exec-watermark-assigner_1\",\n    \"watermarkExpr\" : {\n      \"kind\" : \"CALL\",\n      \"syntax\" : \"BINARY\",\n      \"internalName\" : \"$-$1\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 4,\n        \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n      }, {\n        \"kind\" : \"LITERAL\",\n        \"value\" : \"1\",\n        \"type\" : \"INTERVAL SECOND(6) NOT NULL\"\n      } ],\n      \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n    },\n    \"rowtimeFieldIndex\" : 4,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"email\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"timestamp\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"WatermarkAssigner(rowtime=[timestamp], watermark=[(timestamp - 1:INTERVAL SECOND)])\"\n  }, {\n    \"id\" : 395,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`customer_2`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputUpsertKey\" : [ 0, 3 ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"email\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"timestamp\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.customer_2], fields=[customerid, email, name, lastUpdated, timestamp])\"\n  }, {\n    \"id\" : 396,\n    \"type\" : \"stream-exec-table-source-scan_1\",\n    \"scanTableSource\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`orders_1`\"\n      }\n    },\n    \"outputType\" : \"ROW<`id` BIGINT NOT NULL, `customerid` BIGINT NOT NULL, `time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL, `entries` ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL>\",\n    \"description\" : \"TableSourceScan(table=[[default_catalog, default_database, orders_1]], fields=[id, customerid, time, entries])\",\n    \"inputProperties\" : [ ]\n  }, {\n    \"id\" : 397,\n    \"type\" : \"stream-exec-watermark-assigner_1\",\n    \"watermarkExpr\" : {\n      \"kind\" : \"CALL\",\n      \"syntax\" : \"BINARY\",\n      \"internalName\" : \"$-$1\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 2,\n        \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n      }, {\n        \"kind\" : \"LITERAL\",\n        \"value\" : \"1\",\n        \"type\" : \"INTERVAL SECOND(6) NOT NULL\"\n      } ],\n      \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n    },\n    \"rowtimeFieldIndex\" : 2,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"entries\",\n        \"fieldType\" : \"ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL\"\n      } ]\n    },\n    \"description\" : \"WatermarkAssigner(rowtime=[time], watermark=[(time - 1:INTERVAL SECOND)])\"\n  }, {\n    \"id\" : 398,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 1,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"Calc(select=[id, customerid, time])\"\n  }, {\n    \"id\" : 399,\n    \"type\" : \"stream-exec-exchange_1\",\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"HASH\",\n        \"keys\" : [ 1 ]\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"Exchange(distribution=[hash[customerid]])\"\n  }, {\n    \"id\" : 400,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : \"VARCHAR(2147483647) NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 3,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 4,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"timestamp\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"Calc(select=[customerid, name, lastUpdated, timestamp])\"\n  }, {\n    \"id\" : 401,\n    \"type\" : \"stream-exec-exchange_1\",\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"HASH\",\n        \"keys\" : [ 0 ]\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"timestamp\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"Exchange(distribution=[hash[customerid]])\"\n  }, {\n    \"id\" : 402,\n    \"type\" : \"stream-exec-interval-join_1\",\n    \"intervalJoinSpec\" : {\n      \"joinSpec\" : {\n        \"joinType\" : \"INNER\",\n        \"leftKeys\" : [ 1 ],\n        \"rightKeys\" : [ 0 ],\n        \"filterNulls\" : [ true ],\n        \"nonEquiCondition\" : null\n      },\n      \"windowBounds\" : {\n        \"isEventTime\" : true,\n        \"leftLowerBound\" : 1,\n        \"leftUpperBound\" : 2678400000,\n        \"leftTimeIndex\" : 2,\n        \"rightTimeIndex\" : 3\n      }\n    },\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    }, {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"customerid0\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"timestamp\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"IntervalJoin(joinType=[InnerJoin], windowBounds=[isRowTime=true, leftLowerBound=1, leftUpperBound=2678400000, leftTimeIndex=2, rightTimeIndex=3], where=[((customerid = customerid0) AND (time > timestamp) AND (time <= (timestamp + 2678400000:INTERVAL DAY)))], select=[id, customerid, time, customerid0, name, lastUpdated, timestamp])\"\n  }, {\n    \"id\" : 403,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 4,\n      \"type\" : \"VARCHAR(2147483647) NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 1,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 5,\n      \"type\" : \"BIGINT NOT NULL\"\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"_lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      } ]\n    },\n    \"description\" : \"Calc(select=[id, name, customerid, time AS _time, lastUpdated AS _lastUpdated])\"\n  }, {\n    \"id\" : 404,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`ordercustomer2_1`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"_lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.ordercustomer2_1], fields=[id, name, customerid, _time, _lastUpdated])\"\n  }, {\n    \"id\" : 405,\n    \"type\" : \"stream-exec-interval-join_1\",\n    \"intervalJoinSpec\" : {\n      \"joinSpec\" : {\n        \"joinType\" : \"INNER\",\n        \"leftKeys\" : [ 1 ],\n        \"rightKeys\" : [ 0 ],\n        \"filterNulls\" : [ true ],\n        \"nonEquiCondition\" : null\n      },\n      \"windowBounds\" : {\n        \"isEventTime\" : true,\n        \"leftLowerBound\" : 172800000,\n        \"leftUpperBound\" : 2678400000,\n        \"leftTimeIndex\" : 2,\n        \"rightTimeIndex\" : 3\n      }\n    },\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    }, {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"customerid0\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"timestamp\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"IntervalJoin(joinType=[InnerJoin], windowBounds=[isRowTime=true, leftLowerBound=172800000, leftUpperBound=2678400000, leftTimeIndex=2, rightTimeIndex=3], where=[((customerid = customerid0) AND (time >= (timestamp + 172800000:INTERVAL DAY)) AND (time <= (timestamp + 2678400000:INTERVAL DAY)))], select=[id, customerid, time, customerid0, name, lastUpdated, timestamp])\"\n  }, {\n    \"id\" : 406,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 4,\n      \"type\" : \"VARCHAR(2147483647) NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 1,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 5,\n      \"type\" : \"BIGINT NOT NULL\"\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"_lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      } ]\n    },\n    \"description\" : \"Calc(select=[id, name, customerid, time AS _time, lastUpdated AS _lastUpdated])\"\n  }, {\n    \"id\" : 407,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`ordercustomer3_1`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"_lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.ordercustomer3_1], fields=[id, name, customerid, _time, _lastUpdated])\"\n  }, {\n    \"id\" : 408,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`ordercustomer_1`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"_lastUpdated\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.ordercustomer_1], fields=[id, name, customerid, _time, _lastUpdated])\"\n  }, {\n    \"id\" : 409,\n    \"type\" : \"stream-exec-calc_1\",\n    \"projection\" : [ {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 0,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 1,\n      \"type\" : \"BIGINT NOT NULL\"\n    }, {\n      \"kind\" : \"INPUT_REF\",\n      \"inputIndex\" : 2,\n      \"type\" : {\n        \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n        \"nullable\" : false,\n        \"precision\" : 3,\n        \"kind\" : \"ROWTIME\"\n      }\n    }, {\n      \"kind\" : \"CALL\",\n      \"catalogName\" : \"`default_catalog`.`default_database`.`TOJSON`\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 3,\n        \"type\" : \"ARRAY<ROW<`productid` BIGINT NOT NULL, `quantity` BIGINT NOT NULL, `unit_price` DOUBLE NOT NULL, `discount` DOUBLE> NOT NULL> NOT NULL\"\n      } ],\n      \"type\" : \"RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI=')\"\n    } ],\n    \"condition\" : null,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"entries\",\n        \"fieldType\" : \"RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI=')\"\n      } ]\n    },\n    \"description\" : \"Calc(select=[id, customerid, time, TOJSON(entries) AS entries])\"\n  }, {\n    \"id\" : 410,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`orders_2`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputUpsertKey\" : [ 0, 2 ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"id\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"customerid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      }, {\n        \"name\" : \"entries\",\n        \"fieldType\" : \"RAW('com.datasqrl.json.FlinkJsonType', 'ADFjb20uZGF0YXNxcmwuanNvbi5GbGlua0pzb25UeXBlU2VyaWFsaXplclNuYXBzaG90AAAAAQApY29tLmRhdGFzcXJsLmpzb24uRmxpbmtKc29uVHlwZVNlcmlhbGl6ZXI=')\"\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.orders_2], fields=[id, customerid, time, entries])\"\n  }, {\n    \"id\" : 411,\n    \"type\" : \"stream-exec-table-source-scan_1\",\n    \"scanTableSource\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`product_1`\"\n      }\n    },\n    \"outputType\" : \"ROW<`productid` BIGINT NOT NULL, `name` VARCHAR(2147483647) NOT NULL, `description` VARCHAR(2147483647) NOT NULL, `category` VARCHAR(2147483647) NOT NULL, `_ingest_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL>\",\n    \"description\" : \"TableSourceScan(table=[[default_catalog, default_database, product_1]], fields=[productid, name, description, category, _ingest_time])\",\n    \"inputProperties\" : [ ]\n  }, {\n    \"id\" : 412,\n    \"type\" : \"stream-exec-watermark-assigner_1\",\n    \"watermarkExpr\" : {\n      \"kind\" : \"CALL\",\n      \"syntax\" : \"BINARY\",\n      \"internalName\" : \"$-$1\",\n      \"operands\" : [ {\n        \"kind\" : \"INPUT_REF\",\n        \"inputIndex\" : 4,\n        \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n      }, {\n        \"kind\" : \"LITERAL\",\n        \"value\" : \"1\",\n        \"type\" : \"INTERVAL SECOND(6) NOT NULL\"\n      } ],\n      \"type\" : \"TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL\"\n    },\n    \"rowtimeFieldIndex\" : 4,\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"productid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"description\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"category\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"_ingest_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"WatermarkAssigner(rowtime=[_ingest_time], watermark=[(_ingest_time - 1:INTERVAL SECOND)])\"\n  }, {\n    \"id\" : 413,\n    \"type\" : \"stream-exec-sink_1\",\n    \"configuration\" : {\n      \"table.exec.sink.keyed-shuffle\" : \"AUTO\",\n      \"table.exec.sink.not-null-enforcer\" : \"ERROR\",\n      \"table.exec.sink.rowtime-inserter\" : \"ENABLED\",\n      \"table.exec.sink.type-length-enforcer\" : \"IGNORE\",\n      \"table.exec.sink.upsert-materialize\" : \"AUTO\"\n    },\n    \"dynamicTableSink\" : {\n      \"table\" : {\n        \"identifier\" : \"`default_catalog`.`default_database`.`product_2`\"\n      }\n    },\n    \"inputChangelogMode\" : [ \"INSERT\" ],\n    \"inputUpsertKey\" : [ 0, 1, 2, 3 ],\n    \"inputProperties\" : [ {\n      \"requiredDistribution\" : {\n        \"type\" : \"UNKNOWN\"\n      },\n      \"damBehavior\" : \"PIPELINED\",\n      \"priority\" : 0\n    } ],\n    \"outputType\" : {\n      \"type\" : \"ROW\",\n      \"fields\" : [ {\n        \"name\" : \"productid\",\n        \"fieldType\" : \"BIGINT NOT NULL\"\n      }, {\n        \"name\" : \"name\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"description\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"category\",\n        \"fieldType\" : \"VARCHAR(2147483647) NOT NULL\"\n      }, {\n        \"name\" : \"_ingest_time\",\n        \"fieldType\" : {\n          \"type\" : \"TIMESTAMP_WITH_LOCAL_TIME_ZONE\",\n          \"nullable\" : false,\n          \"precision\" : 3,\n          \"kind\" : \"ROWTIME\"\n        }\n      } ]\n    },\n    \"description\" : \"Sink(table=[default_catalog.default_database.product_2], fields=[productid, name, description, category, _ingest_time])\"\n  } ],\n  \"edges\" : [ {\n    \"source\" : 393,\n    \"target\" : 394,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 394,\n    \"target\" : 395,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 396,\n    \"target\" : 397,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 397,\n    \"target\" : 398,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 398,\n    \"target\" : 399,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 394,\n    \"target\" : 400,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 400,\n    \"target\" : 401,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 399,\n    \"target\" : 402,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 401,\n    \"target\" : 402,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 402,\n    \"target\" : 403,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 403,\n    \"target\" : 404,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 399,\n    \"target\" : 405,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 401,\n    \"target\" : 405,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 405,\n    \"target\" : 406,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 406,\n    \"target\" : 407,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 403,\n    \"target\" : 408,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 397,\n    \"target\" : 409,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 409,\n    \"target\" : 410,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 411,\n    \"target\" : 412,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  }, {\n    \"source\" : 412,\n    \"target\" : 413,\n    \"shuffle\" : {\n      \"type\" : \"FORWARD\"\n    },\n    \"shuffleMode\" : \"PIPELINED\"\n  } ]\n}"
}
>>>kafka.json
{
  "topics" : [ ]
}
>>>postgres.json
{
  "ddl" : [
    {
      "name" : "customer_2",
      "columns" : [
        "\"customerid\" BIGINT NOT NULL",
        "\"email\" TEXT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"lastUpdated\" BIGINT NOT NULL",
        "\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"customerid\"",
        "\"lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS customer_2 (\"customerid\" BIGINT NOT NULL,\"email\" TEXT NOT NULL,\"name\" TEXT NOT NULL,\"lastUpdated\" BIGINT NOT NULL,\"timestamp\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"customerid\",\"lastUpdated\"));"
    },
    {
      "name" : "ordercustomer2_1",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"_lastUpdated\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"_time\"",
        "\"_lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomer2_1 (\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"customerid\" BIGINT NOT NULL,\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"_lastUpdated\" BIGINT NOT NULL , PRIMARY KEY (\"id\",\"_time\",\"_lastUpdated\"));"
    },
    {
      "name" : "ordercustomer3_1",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"_lastUpdated\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"_time\"",
        "\"_lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomer3_1 (\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"customerid\" BIGINT NOT NULL,\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"_lastUpdated\" BIGINT NOT NULL , PRIMARY KEY (\"id\",\"_time\",\"_lastUpdated\"));"
    },
    {
      "name" : "ordercustomer_1",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"_lastUpdated\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"_time\"",
        "\"_lastUpdated\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS ordercustomer_1 (\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"customerid\" BIGINT NOT NULL,\"_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"_lastUpdated\" BIGINT NOT NULL , PRIMARY KEY (\"id\",\"_time\",\"_lastUpdated\"));"
    },
    {
      "name" : "orders_2",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customerid\" BIGINT NOT NULL",
        "\"time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"entries\" JSONB NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\"",
        "\"time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS orders_2 (\"id\" BIGINT NOT NULL,\"customerid\" BIGINT NOT NULL,\"time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"entries\" JSONB NOT NULL , PRIMARY KEY (\"id\",\"time\"));"
    },
    {
      "name" : "product_2",
      "columns" : [
        "\"productid\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"description\" TEXT NOT NULL",
        "\"category\" TEXT NOT NULL",
        "\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"productid\"",
        "\"name\"",
        "\"description\"",
        "\"category\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS product_2 (\"productid\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"description\" TEXT NOT NULL,\"category\" TEXT NOT NULL,\"_ingest_time\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"productid\",\"name\",\"description\",\"category\"));"
    },
    {
      "indexName" : "customer_2_hash_c3",
      "tableName" : "customer_2",
      "columns" : [
        "lastUpdated"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS customer_2_hash_c3 ON customer_2 USING hash (\"lastUpdated\");"
    },
    {
      "indexName" : "orders_2_hash_c2",
      "tableName" : "orders_2",
      "columns" : [
        "time"
      ],
      "type" : "HASH",
      "sql" : "CREATE INDEX IF NOT EXISTS orders_2_hash_c2 ON orders_2 USING hash (\"time\");"
    },
    {
      "indexName" : "product_2_btree_c0c2",
      "tableName" : "product_2",
      "columns" : [
        "productid",
        "description"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c0c2 ON product_2 USING btree (\"productid\",\"description\");"
    },
    {
      "indexName" : "product_2_btree_c1c2c3",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "description",
        "category"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c2c3 ON product_2 USING btree (\"name\",\"description\",\"category\");"
    },
    {
      "indexName" : "product_2_btree_c1c3c0",
      "tableName" : "product_2",
      "columns" : [
        "name",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c1c3c0 ON product_2 USING btree (\"name\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c2c3c0",
      "tableName" : "product_2",
      "columns" : [
        "description",
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c2c3c0 ON product_2 USING btree (\"description\",\"category\",\"productid\");"
    },
    {
      "indexName" : "product_2_btree_c3c0",
      "tableName" : "product_2",
      "columns" : [
        "category",
        "productid"
      ],
      "type" : "BTREE",
      "sql" : "CREATE INDEX IF NOT EXISTS product_2_btree_c3c0 ON product_2 USING btree (\"category\",\"productid\");"
    }
  ],
  "views" : [
    {
      "name" : "Product",
      "sql" : "CREATE OR REPLACE VIEW \"Product\"(\"productid\", \"name\", \"description\", \"category\", \"_ingest_time\") AS SELECT *\nFROM \"product_2\"\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\", \"category\";"
    },
    {
      "name" : "Customer",
      "sql" : "CREATE OR REPLACE VIEW \"Customer\"(\"customerid\", \"email\", \"name\", \"lastUpdated\", \"timestamp\") AS SELECT *\nFROM \"customer_2\"\nORDER BY \"timestamp\" DESC NULLS LAST, \"customerid\", \"lastUpdated\";"
    },
    {
      "name" : "Orders",
      "sql" : "CREATE OR REPLACE VIEW \"Orders\"(\"id\", \"customerid\", \"time\", \"entries\") AS SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\";"
    },
    {
      "name" : "OrderCustomer3",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomer3\"(\"id\", \"name\", \"customerid\", \"_time\", \"_lastUpdated\") AS SELECT *\nFROM \"ordercustomer3_1\"\nORDER BY \"_time\" DESC NULLS LAST, \"id\", \"_lastUpdated\";"
    },
    {
      "name" : "OrderCustomer2",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomer2\"(\"id\", \"name\", \"customerid\", \"_time\", \"_lastUpdated\") AS SELECT *\nFROM \"ordercustomer2_1\"\nORDER BY \"_time\" DESC NULLS LAST, \"id\", \"_lastUpdated\";"
    },
    {
      "name" : "OrderCustomer",
      "sql" : "CREATE OR REPLACE VIEW \"OrderCustomer\"(\"id\", \"name\", \"customerid\", \"_time\", \"_lastUpdated\") AS SELECT *\nFROM \"ordercustomer_1\"\nORDER BY \"_time\" DESC NULLS LAST, \"id\", \"_lastUpdated\";"
    }
  ]
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Customer",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nORDER BY \"timestamp\" DESC NULLS LAST, \"customerid\", \"lastUpdated\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nWHERE \"customerid\" = $1 AND \"lastUpdated\" = $2\nORDER BY \"timestamp\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "lastUpdated"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nWHERE \"lastUpdated\" = $1\nORDER BY \"timestamp\" DESC NULLS LAST, \"customerid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "lastUpdated"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "customerid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"customer_2\"\nWHERE \"customerid\" = $1\nORDER BY \"timestamp\" DESC NULLS LAST, \"lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "customerid"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomer",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer_1\"\nORDER BY \"_time\" DESC NULLS LAST, \"id\", \"_lastUpdated\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer_1\"\nWHERE \"id\" = $1\nORDER BY \"_time\" DESC NULLS LAST, \"_lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomer2",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer2_1\"\nORDER BY \"_time\" DESC NULLS LAST, \"id\", \"_lastUpdated\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer2_1\"\nWHERE \"id\" = $1\nORDER BY \"_time\" DESC NULLS LAST, \"_lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "OrderCustomer3",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer3_1\"\nWHERE \"id\" = $1\nORDER BY \"_time\" DESC NULLS LAST, \"_lastUpdated\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"ordercustomer3_1\"\nORDER BY \"_time\" DESC NULLS LAST, \"id\", \"_lastUpdated\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Orders",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"time\" = $1\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nORDER BY \"time\" DESC NULLS LAST, \"id\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"orders_2\"\nWHERE \"id\" = $1 AND \"time\" = $2\nORDER BY \"time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "time"
                }
              ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "Product",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"category\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"description\", \"category\"",
              "parameters" : [ ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"description\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"name\" = $1 AND \"description\" = $2 AND \"category\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"productid\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"description\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"category\" = $2\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"name\", \"description\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "category"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3 AND \"category\" = $4\nORDER BY \"_ingest_time\" DESC NULLS LAST",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "category"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "productid"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "name"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "description"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedJdbcQuery",
              "type" : "PagedJdbcQuery",
              "sql" : "SELECT *\nFROM \"product_2\"\nWHERE \"productid\" = $1 AND \"name\" = $2 AND \"description\" = $3\nORDER BY \"_ingest_time\" DESC NULLS LAST, \"category\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "productid"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "name"
                },
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "description"
                }
              ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "type Customer {\n  customerid: Float!\n  email: String!\n  name: String!\n  lastUpdated: Float!\n  timestamp: DateTime!\n}\n\n\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype OrderCustomer {\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomer2 {\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype OrderCustomer3 {\n  id: Float!\n  name: String!\n  customerid: Float!\n}\n\ntype Orders {\n  id: Float!\n  customerid: Float!\n  time: DateTime!\n  entries(limit: Int = 10, offset: Int = 0): [entries!]\n}\n\ntype Product {\n  productid: Float!\n  name: String!\n  description: String!\n  category: String!\n}\n\ntype Query {\n  Customer(customerid: Float, lastUpdated: Float, limit: Int = 10, offset: Int = 0): [Customer!]\n  OrderCustomer(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomer!]\n  OrderCustomer2(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomer2!]\n  OrderCustomer3(id: Float, limit: Int = 10, offset: Int = 0): [OrderCustomer3!]\n  Orders(id: Float, time: DateTime, limit: Int = 10, offset: Int = 0): [Orders!]\n  Product(productid: Float, name: String, description: String, category: String, limit: Int = 10, offset: Int = 0): [Product!]\n}\n\ntype entries {\n  productid: Float!\n  quantity: Float!\n  unit_price: Float!\n  discount: Float\n}\n"
    }
  }
}
