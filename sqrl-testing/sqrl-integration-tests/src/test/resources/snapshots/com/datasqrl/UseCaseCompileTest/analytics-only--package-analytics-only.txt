>>>pipeline_explain.txt
=== _Applications
ID:     _applications_2
Type:   stream
Stage:  flink
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[_applications_1]])

=== _Applications
ID:     _applications_3
Type:   state
Stage:  flink
Inputs: _applications_2
Primary Key: id
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=id limit=1 sort=#6: updated_at TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC 
Plan:
LogicalTableScan(table=[[_applications_2]])

=== _ApplicationUpdates
ID:     _applicationupdates_2
Type:   stream
Stage:  flink
Primary Key: loan_application_id, event_time
Timestamp  : event_time
Schema:
 - loan_application_id: BIGINT NOT NULL
 - status: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - message: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - event_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[_applicationupdates_1]])

=== _LoanTypes
ID:     _loantypes_2
Type:   stream
Stage:  flink
Primary Key: id, updated_at
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - interest_rate: DOUBLE NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - max_duration: BIGINT NOT NULL
 - min_duration: BIGINT NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Plan:
LogicalTableScan(table=[[_loantypes_1]])

=== _LoanTypes
ID:     _loantypes_3
Type:   state
Stage:  flink
Inputs: _loantypes_2
Primary Key: id
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - interest_rate: DOUBLE NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - max_duration: BIGINT NOT NULL
 - min_duration: BIGINT NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
Post Processors:
 - topN: partition=id limit=1 sort=#8: updated_at TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) DESC 
Plan:
LogicalTableScan(table=[[_loantypes_2]])

=== ApplicationInfo
ID:     applicationinfo_1
Type:   state
Stage:  iceberg
Inputs: _applications_3, _loantypes_3
Primary Key: id
Timestamp  : updated_at
Schema:
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - application_date: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - updated_at: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id0: BIGINT NOT NULL
 - name: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - description: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - interest_rate: DOUBLE NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - max_duration: BIGINT NOT NULL
 - min_duration: BIGINT NOT NULL
 - updated_at0: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id1: BIGINT
Plan:
LogicalProject(id=[$0], customer_id=[$1], loan_type_id=[$2], amount=[$3], duration=[$4], application_date=[$5], updated_at=[$6], id0=[$7], name=[$8], description=[$9], interest_rate=[$10], max_amount=[$11], min_amount=[$12], max_duration=[$13], min_duration=[$14], updated_at0=[$15], id1=[$16])
  LogicalJoin(condition=[=($16, $1)], joinType=[left]) hints[JoinCostHint options:[STATE, VERSIONED_STATE, 1, RIGHT]]
    LogicalJoin(condition=[=($7, $2)], joinType=[inner]) hints[JoinCostHint options:[VERSIONED_STATE, VERSIONED_STATE, 1, RIGHT]]
      LogicalTableScan(table=[[_applications_3]])
      LogicalTableScan(table=[[_loantypes_3]])
    LogicalTableScan(table=[[_loantypes_3]])

=== ApplicationStatus
ID:     applicationstatus_1
Type:   stream
Stage:  flink
Inputs: _applications_3, _applicationupdates_2, _loantypes_3
Primary Key: _loan_application_id, event_time
Timestamp  : event_time
Schema:
 - status: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - message: VARCHAR(2147483647) CHARACTER SET "UTF-16LE" NOT NULL
 - event_time: TIMESTAMP_WITH_LOCAL_TIME_ZONE(3) NOT NULL
 - id: BIGINT NOT NULL
 - customer_id: BIGINT NOT NULL
 - loan_type_id: BIGINT NOT NULL
 - amount: DOUBLE NOT NULL
 - duration: BIGINT NOT NULL
 - max_amount: DOUBLE NOT NULL
 - min_amount: DOUBLE NOT NULL
 - _loan_application_id: BIGINT NOT NULL
Plan:
LogicalProject(status=[$1], message=[$2], event_time=[$3], id=[$4], customer_id=[$5], loan_type_id=[$6], amount=[$7], duration=[$8], max_amount=[$16], min_amount=[$17], _loan_application_id=[$0])
  LogicalJoin(condition=[=($12, $6)], joinType=[inner]) hints[TemporalJoinHint options:[3]]
    LogicalJoin(condition=[=($4, $0)], joinType=[inner]) hints[TemporalJoinHint options:[3]]
      LogicalTableScan(table=[[_applicationupdates_2]])
      LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
        LogicalProject(id=[$0], customer_id=[$1], loan_type_id=[$2], amount=[$3], duration=[$4], application_date=[$5], updated_at=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS FIRST)])
          LogicalTableScan(table=[[_applications_3]])
    LogicalFilter(condition=[=($9, 1)]) hints[DedupHint]
      LogicalProject(id=[$0], name=[$1], description=[$2], interest_rate=[$3], max_amount=[$4], min_amount=[$5], max_duration=[$6], min_duration=[$7], updated_at=[$8], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $8 DESC NULLS FIRST)])
        LogicalTableScan(table=[[_loantypes_3]])

>>>flink.json
{
  "flinkSql" : [
    "CREATE TEMPORARY TABLE `_applications_1` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED,\n  WATERMARK FOR `updated_at` AS `updated_at` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'flexible-json',\n  'path' = '${DATA_PATH}/applications.jsonl',\n  'source.monitor-interval' = '1',\n  'connector' = 'filesystem'\n);",
    "CREATE TEMPORARY TABLE `_applicationupdates_1` (\n  `loan_application_id` BIGINT NOT NULL,\n  `status` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `message` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `event_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`loan_application_id`, `event_time`) NOT ENFORCED,\n  WATERMARK FOR `event_time` AS `event_time` - INTERVAL '0.0' SECOND\n) WITH (\n  'format' = 'flexible-json',\n  'path' = '${DATA_PATH}/application_updates.jsonl',\n  'connector' = 'filesystem'\n);",
    "CREATE TEMPORARY TABLE `_loantypes_1` (\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `interest_rate` DOUBLE NOT NULL,\n  `max_amount` DOUBLE NOT NULL,\n  `min_amount` DOUBLE NOT NULL,\n  `max_duration` BIGINT NOT NULL,\n  `min_duration` BIGINT NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`, `updated_at`) NOT ENFORCED,\n  WATERMARK FOR `updated_at` AS `updated_at` - INTERVAL '0.001' SECOND\n) WITH (\n  'format' = 'flexible-json',\n  'path' = '${DATA_PATH}/loan_types.jsonl',\n  'source.monitor-interval' = '1',\n  'connector' = 'filesystem'\n);",
    "CREATE TEMPORARY TABLE `_applications_3` (\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `application_date` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n)\nPARTITIONED BY (`loan_type_id`)\nWITH (\n  'catalog-type' = 'hadoop',\n  'warehouse' = '/tmp/duckdb',\n  'catalog-name' = 'mydatabase',\n  'connector' = 'iceberg',\n  'catalog-table' = '_applications_3'\n);",
    "CREATE TEMPORARY TABLE `_loantypes_3` (\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `description` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `interest_rate` DOUBLE NOT NULL,\n  `max_amount` DOUBLE NOT NULL,\n  `min_amount` DOUBLE NOT NULL,\n  `max_duration` BIGINT NOT NULL,\n  `min_duration` BIGINT NOT NULL,\n  `updated_at` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  PRIMARY KEY (`id`) NOT ENFORCED\n) WITH (\n  'catalog-type' = 'hadoop',\n  'warehouse' = '/tmp/duckdb',\n  'catalog-name' = 'mydatabase',\n  'connector' = 'iceberg',\n  'catalog-table' = '_loantypes_3'\n);",
    "CREATE TEMPORARY TABLE `applicationstatus_1` (\n  `status` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `message` VARCHAR(2147483647) CHARACTER SET `UTF-16LE` NOT NULL,\n  `event_time` TIMESTAMP(3) WITH LOCAL TIME ZONE NOT NULL,\n  `id` BIGINT NOT NULL,\n  `customer_id` BIGINT NOT NULL,\n  `loan_type_id` BIGINT NOT NULL,\n  `amount` DOUBLE NOT NULL,\n  `duration` BIGINT NOT NULL,\n  `max_amount` DOUBLE NOT NULL,\n  `min_amount` DOUBLE NOT NULL,\n  `_loan_application_id` BIGINT NOT NULL,\n  PRIMARY KEY (`_loan_application_id`, `event_time`) NOT ENFORCED\n)\nPARTITIONED BY (`customer_id`)\nWITH (\n  'catalog-type' = 'hadoop',\n  'warehouse' = '/tmp/duckdb',\n  'catalog-name' = 'mydatabase',\n  'connector' = 'iceberg',\n  'catalog-table' = 'applicationstatus_1'\n);",
    "CREATE VIEW `table$1`\nAS\nSELECT *\nFROM `_applications_1`;",
    "CREATE VIEW `table$2`\nAS\nSELECT *\nFROM `_loantypes_1`;",
    "CREATE VIEW `table$3`\nAS\nSELECT *\nFROM (SELECT `id`, `name`, `description`, `interest_rate`, `max_amount`, `min_amount`, `max_duration`, `min_duration`, `updated_at`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `updated_at` DESC) AS `_rownum`\n  FROM `_loantypes_1`) AS `t`\nWHERE `_rownum` = 1;",
    "CREATE VIEW `table$4`\nAS\nSELECT *\nFROM (SELECT `id`, `customer_id`, `loan_type_id`, `amount`, `duration`, `application_date`, `updated_at`, ROW_NUMBER() OVER (PARTITION BY `id` ORDER BY `updated_at` DESC) AS `_rownum`\n  FROM `_applications_1`) AS `t1`\nWHERE `_rownum` = 1;",
    "CREATE VIEW `table$5`\nAS\nSELECT `$cor0`.`status`, `$cor0`.`message`, `$cor0`.`event_time`, `$cor0`.`id`, `$cor0`.`customer_id`, `$cor0`.`loan_type_id`, `$cor0`.`amount`, `$cor0`.`duration`, `t0`.`max_amount`, `t0`.`min_amount`, `$cor0`.`loan_application_id` AS `_loan_application_id`\nFROM (SELECT *\n  FROM `_applicationupdates_1` AS `$cor1`\n   INNER JOIN `table$4` FOR SYSTEM_TIME AS OF `$cor1`.`event_time` AS `t2` ON `t2`.`id` = `$cor1`.`loan_application_id`) AS `$cor0`\n INNER JOIN `table$3` FOR SYSTEM_TIME AS OF `$cor0`.`event_time` AS `t0` ON `t0`.`id` = `$cor0`.`loan_type_id`;",
    "EXECUTE STATEMENT SET BEGIN\nINSERT INTO `_applications_3`\n(SELECT *\n FROM `table$1`)\n;\nINSERT INTO `_loantypes_3`\n (SELECT *\n  FROM `table$2`)\n ;\n INSERT INTO `applicationstatus_1`\n  (SELECT *\n   FROM `table$5`)\n  ;\n  END;"
  ],
  "connectors" : [
    "iceberg",
    "filesystem"
  ],
  "formats" : [
    "flexible-json"
  ]
}
>>>iceberg.json
{
  "ddl" : [
    {
      "name" : "_applications_3",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"customer_id\" BIGINT NOT NULL",
        "\"loan_type_id\" BIGINT NOT NULL",
        "\"amount\" DOUBLE PRECISION NOT NULL",
        "\"duration\" BIGINT NOT NULL",
        "\"application_date\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS _applications_3 (\"id\" BIGINT NOT NULL,\"customer_id\" BIGINT NOT NULL,\"loan_type_id\" BIGINT NOT NULL,\"amount\" DOUBLE PRECISION NOT NULL,\"duration\" BIGINT NOT NULL,\"application_date\" TIMESTAMP WITH TIME ZONE NOT NULL,\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "_loantypes_3",
      "columns" : [
        "\"id\" BIGINT NOT NULL",
        "\"name\" TEXT NOT NULL",
        "\"description\" TEXT NOT NULL",
        "\"interest_rate\" DOUBLE PRECISION NOT NULL",
        "\"max_amount\" DOUBLE PRECISION NOT NULL",
        "\"min_amount\" DOUBLE PRECISION NOT NULL",
        "\"max_duration\" BIGINT NOT NULL",
        "\"min_duration\" BIGINT NOT NULL",
        "\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL"
      ],
      "primaryKeys" : [
        "\"id\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS _loantypes_3 (\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"description\" TEXT NOT NULL,\"interest_rate\" DOUBLE PRECISION NOT NULL,\"max_amount\" DOUBLE PRECISION NOT NULL,\"min_amount\" DOUBLE PRECISION NOT NULL,\"max_duration\" BIGINT NOT NULL,\"min_duration\" BIGINT NOT NULL,\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"id\"));"
    },
    {
      "name" : "applicationstatus_1",
      "columns" : [
        "\"status\" TEXT NOT NULL",
        "\"message\" TEXT NOT NULL",
        "\"event_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
        "\"id\" BIGINT NOT NULL",
        "\"customer_id\" BIGINT NOT NULL",
        "\"loan_type_id\" BIGINT NOT NULL",
        "\"amount\" DOUBLE PRECISION NOT NULL",
        "\"duration\" BIGINT NOT NULL",
        "\"max_amount\" DOUBLE PRECISION NOT NULL",
        "\"min_amount\" DOUBLE PRECISION NOT NULL",
        "\"_loan_application_id\" BIGINT NOT NULL"
      ],
      "primaryKeys" : [
        "\"_loan_application_id\"",
        "\"event_time\""
      ],
      "sql" : "CREATE TABLE IF NOT EXISTS applicationstatus_1 (\"status\" TEXT NOT NULL,\"message\" TEXT NOT NULL,\"event_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"id\" BIGINT NOT NULL,\"customer_id\" BIGINT NOT NULL,\"loan_type_id\" BIGINT NOT NULL,\"amount\" DOUBLE PRECISION NOT NULL,\"duration\" BIGINT NOT NULL,\"max_amount\" DOUBLE PRECISION NOT NULL,\"min_amount\" DOUBLE PRECISION NOT NULL,\"_loan_application_id\" BIGINT NOT NULL , PRIMARY KEY (\"_loan_application_id\",\"event_time\"));"
    }
  ],
  "engines" : {
    "duckdb" : {
      "ddl" : [
        {
          "name" : "_applications_3",
          "columns" : [
            "\"id\" BIGINT NOT NULL",
            "\"customer_id\" BIGINT NOT NULL",
            "\"loan_type_id\" BIGINT NOT NULL",
            "\"amount\" DOUBLE PRECISION NOT NULL",
            "\"duration\" BIGINT NOT NULL",
            "\"application_date\" TIMESTAMP WITH TIME ZONE NOT NULL",
            "\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL"
          ],
          "primaryKeys" : [
            "\"id\""
          ],
          "sql" : "CREATE TABLE IF NOT EXISTS _applications_3 (\"id\" BIGINT NOT NULL,\"customer_id\" BIGINT NOT NULL,\"loan_type_id\" BIGINT NOT NULL,\"amount\" DOUBLE PRECISION NOT NULL,\"duration\" BIGINT NOT NULL,\"application_date\" TIMESTAMP WITH TIME ZONE NOT NULL,\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"id\"));"
        },
        {
          "name" : "_loantypes_3",
          "columns" : [
            "\"id\" BIGINT NOT NULL",
            "\"name\" TEXT NOT NULL",
            "\"description\" TEXT NOT NULL",
            "\"interest_rate\" DOUBLE PRECISION NOT NULL",
            "\"max_amount\" DOUBLE PRECISION NOT NULL",
            "\"min_amount\" DOUBLE PRECISION NOT NULL",
            "\"max_duration\" BIGINT NOT NULL",
            "\"min_duration\" BIGINT NOT NULL",
            "\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL"
          ],
          "primaryKeys" : [
            "\"id\""
          ],
          "sql" : "CREATE TABLE IF NOT EXISTS _loantypes_3 (\"id\" BIGINT NOT NULL,\"name\" TEXT NOT NULL,\"description\" TEXT NOT NULL,\"interest_rate\" DOUBLE PRECISION NOT NULL,\"max_amount\" DOUBLE PRECISION NOT NULL,\"min_amount\" DOUBLE PRECISION NOT NULL,\"max_duration\" BIGINT NOT NULL,\"min_duration\" BIGINT NOT NULL,\"updated_at\" TIMESTAMP WITH TIME ZONE NOT NULL , PRIMARY KEY (\"id\"));"
        },
        {
          "name" : "applicationstatus_1",
          "columns" : [
            "\"status\" TEXT NOT NULL",
            "\"message\" TEXT NOT NULL",
            "\"event_time\" TIMESTAMP WITH TIME ZONE NOT NULL",
            "\"id\" BIGINT NOT NULL",
            "\"customer_id\" BIGINT NOT NULL",
            "\"loan_type_id\" BIGINT NOT NULL",
            "\"amount\" DOUBLE PRECISION NOT NULL",
            "\"duration\" BIGINT NOT NULL",
            "\"max_amount\" DOUBLE PRECISION NOT NULL",
            "\"min_amount\" DOUBLE PRECISION NOT NULL",
            "\"_loan_application_id\" BIGINT NOT NULL"
          ],
          "primaryKeys" : [
            "\"_loan_application_id\"",
            "\"event_time\""
          ],
          "sql" : "CREATE TABLE IF NOT EXISTS applicationstatus_1 (\"status\" TEXT NOT NULL,\"message\" TEXT NOT NULL,\"event_time\" TIMESTAMP WITH TIME ZONE NOT NULL,\"id\" BIGINT NOT NULL,\"customer_id\" BIGINT NOT NULL,\"loan_type_id\" BIGINT NOT NULL,\"amount\" DOUBLE PRECISION NOT NULL,\"duration\" BIGINT NOT NULL,\"max_amount\" DOUBLE PRECISION NOT NULL,\"min_amount\" DOUBLE PRECISION NOT NULL,\"_loan_application_id\" BIGINT NOT NULL , PRIMARY KEY (\"_loan_application_id\",\"event_time\"));"
        }
      ],
      "views" : [ ]
    }
  }
}
>>>vertx.json
{
  "model" : {
    "coords" : [
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "ApplicationInfo",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "id"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedDuckDbQuery",
              "type" : "PagedDuckDbQuery",
              "sql" : "SELECT *\nFROM (SELECT \"t\".\"id\", \"t\".\"customer_id\", \"t\".\"loan_type_id\", \"t\".\"amount\", \"t\".\"duration\", \"t\".\"application_date\", \"t\".\"updated_at\", \"t0\".\"id\" AS \"id0\", \"t0\".\"name\", \"t0\".\"description\", \"t0\".\"interest_rate\", \"t0\".\"max_amount\", \"t0\".\"min_amount\", \"t0\".\"max_duration\", \"t0\".\"min_duration\", \"t0\".\"updated_at\" AS \"updated_at0\", \"t1\".\"id\" AS \"id1\"\n  FROM (SELECT *\n    FROM ICEBERG_SCAN('/tmp/duckdb/default_database/_applications_3', ALLOW_MOVED_PATHS = TRUE)) AS \"t\"\n   INNER JOIN (SELECT *\n    FROM ICEBERG_SCAN('/tmp/duckdb/default_database/_loantypes_3', ALLOW_MOVED_PATHS = TRUE)) AS \"t0\" ON \"t\".\"loan_type_id\" = \"t0\".\"id\"\n   LEFT JOIN (SELECT *\n    FROM ICEBERG_SCAN('/tmp/duckdb/default_database/_loantypes_3', ALLOW_MOVED_PATHS = TRUE)) AS \"t1\" ON \"t\".\"customer_id\" = \"t1\".\"id\") AS \"t2\"\nWHERE \"t2\".\"id\" = $1",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "id"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedDuckDbQuery",
              "type" : "PagedDuckDbQuery",
              "sql" : "SELECT \"t\".\"id\", \"t\".\"customer_id\", \"t\".\"loan_type_id\", \"t\".\"amount\", \"t\".\"duration\", \"t\".\"application_date\", \"t\".\"updated_at\", \"t0\".\"id\" AS \"id0\", \"t0\".\"name\", \"t0\".\"description\", \"t0\".\"interest_rate\", \"t0\".\"max_amount\", \"t0\".\"min_amount\", \"t0\".\"max_duration\", \"t0\".\"min_duration\", \"t0\".\"updated_at\" AS \"updated_at0\", \"t1\".\"id\" AS \"id1\"\nFROM (SELECT *\n  FROM ICEBERG_SCAN('/tmp/duckdb/default_database/_applications_3', ALLOW_MOVED_PATHS = TRUE)) AS \"t\"\n INNER JOIN (SELECT *\n  FROM ICEBERG_SCAN('/tmp/duckdb/default_database/_loantypes_3', ALLOW_MOVED_PATHS = TRUE)) AS \"t0\" ON \"t\".\"loan_type_id\" = \"t0\".\"id\"\n LEFT JOIN (SELECT *\n  FROM ICEBERG_SCAN('/tmp/duckdb/default_database/_loantypes_3', ALLOW_MOVED_PATHS = TRUE)) AS \"t1\" ON \"t\".\"customer_id\" = \"t1\".\"id\"\nORDER BY \"t\".\"id\"",
              "parameters" : [ ]
            }
          }
        ]
      },
      {
        "type" : "args",
        "parentType" : "Query",
        "fieldName" : "ApplicationStatus",
        "matchs" : [
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "event_time"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedDuckDbQuery",
              "type" : "PagedDuckDbQuery",
              "sql" : "SELECT *\nFROM (SELECT *\n  FROM ICEBERG_SCAN('/tmp/duckdb/default_database/applicationstatus_1', ALLOW_MOVED_PATHS = TRUE)) AS \"t\"\nWHERE \"event_time\" = $1\nORDER BY \"event_time\" DESC NULLS LAST, \"_loan_application_id\"",
              "parameters" : [
                {
                  "type" : "arg",
                  "type" : "arg",
                  "path" : "event_time"
                }
              ]
            }
          },
          {
            "arguments" : [
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "limit"
              },
              {
                "type" : "variable",
                "type" : "variable",
                "path" : "offset"
              }
            ],
            "query" : {
              "type" : "PagedDuckDbQuery",
              "type" : "PagedDuckDbQuery",
              "sql" : "SELECT *\nFROM ICEBERG_SCAN('/tmp/duckdb/default_database/applicationstatus_1', ALLOW_MOVED_PATHS = TRUE)\nORDER BY \"event_time\" DESC NULLS LAST, \"_loan_application_id\"",
              "parameters" : [ ]
            }
          }
        ]
      }
    ],
    "mutations" : [ ],
    "subscriptions" : [ ],
    "schema" : {
      "type" : "string",
      "type" : "string",
      "schema" : "type ApplicationInfo {\n  id: Float!\n  customer_id: Float!\n  loan_type_id: Float!\n  amount: Float!\n  duration: Float!\n  application_date: DateTime!\n  updated_at: DateTime!\n  id0: Float!\n  name: String!\n  description: String!\n  interest_rate: Float!\n  max_amount: Float!\n  min_amount: Float!\n  max_duration: Float!\n  min_duration: Float!\n  updated_at0: DateTime!\n  id1: Float\n}\n\ntype ApplicationStatus {\n  status: String!\n  message: String!\n  event_time: DateTime!\n  id: Float!\n  customer_id: Float!\n  loan_type_id: Float!\n  amount: Float!\n  duration: Float!\n  max_amount: Float!\n  min_amount: Float!\n}\n\n\"An RFC-3339 compliant Full Date Scalar\"\nscalar Date\n\n\"An RFC-3339 compliant DateTime Scalar\"\nscalar DateTime\n\ntype Query {\n  ApplicationInfo(id: Float, limit: Int = 10, offset: Int = 0): [ApplicationInfo!]\n  ApplicationStatus(event_time: DateTime, limit: Int = 10, offset: Int = 0): [ApplicationStatus!]\n}\n"
    }
  }
}
