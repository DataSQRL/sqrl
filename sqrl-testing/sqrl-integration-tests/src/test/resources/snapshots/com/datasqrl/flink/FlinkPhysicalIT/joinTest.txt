>>>customer$2-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6], TimestampHint options:[6]]
  LogicalTableScan(table=[[customer$1]])

>>>customerdedup$1-lp-stream
LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6]) hints[TimestampHint options:[6]]
  LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
    LogicalTableScan(table=[[customer$1]])

>>>ordercustomerdedup$1-lp-stream
LogicalProject(_uuid=[$0], id=[$2], name=[$11], customerid=[$3], _rowtime=[$6]) hints[TimestampHint options:[4]]
  LogicalJoin(condition=[=($3, $7)], joinType=[inner]) hints[TemporalJoinHint options:[6, 6, 0]]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], rowtime=[$4]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[orders$1]])
    LogicalFilter(condition=[=($7, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
        LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6])
          LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
            LogicalTableScan(table=[[customer$1]])

>>>ordercustomerinterval$1-lp-stream
LogicalProject(_uuid=[$0], _uuid0=[$7], id=[$2], name=[$11], customerid=[$3], _rowtime=[$6]) hints[TimestampHint options:[5]]
  LogicalJoin(condition=[AND(=($3, $9), >=($6, $13), <=($6, +($13, 31536000000:INTERVAL DAY(3))))], joinType=[inner]) hints[IntervalJoin]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], rowtime=[$4]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[orders$1]])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[epochToTimestamp($5)]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[customer$1]])

>>>orders$2-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], rowtime=[$4]) hints[WatermarkHint options:[6], TimestampHint options:[6]]
  LogicalTableScan(table=[[orders$1]])

>>>customerdedup-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], updateTime=[$6])
    LogicalTableScan(table=[[customerdedup$1]])

>>>ordercustomer-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
  LogicalProject(_uuid=[$0], _uuid0=[$1], id=[$2], name=[$3], customerid=[$4], __timestamp=[$5])
    LogicalProject(_uuid=[$0], _uuid0=[$7], id=[$2], name=[$11], customerid=[$3], __timestamp=[CASE(<($6, $13), $13, $6)])
      LogicalJoin(condition=[=($3, $9)], joinType=[inner]) hints[JoinCostHint options:[STREAM, STREAM, 1, NONE]]
        LogicalTableScan(table=[[orders$2]])
        LogicalTableScan(table=[[customer$2]])

>>>ordercustomerdedup-lp-database
LogicalSort(sort0=[$4], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(_uuid=[$0], id=[$1], name=[$2], customerid=[$3], _rowtime=[$4])
    LogicalTableScan(table=[[ordercustomerdedup$1]])

>>>ordercustomerinterval-lp-database
LogicalSort(sort0=[$5], sort1=[$0], sort2=[$1], dir0=[DESC-nulls-last], dir1=[ASC], dir2=[ASC])
  LogicalProject(_uuid=[$0], _uuid0=[$1], id=[$2], name=[$3], customerid=[$4], _rowtime=[$5])
    LogicalTableScan(table=[[ordercustomerinterval$1]])

>>>ordercustomer-data
10007140, Emily F. Ludies, 1000107
10007543, John Mekker, 1000101
10008231, Michelle Dagnes, 1000121
10008434, Emily F. Ludies, 1000107
>>>ordercustomerinterval-data

>>>customerdedup-data
1000101, john.mekker@gmail.com, John Mekker, 1645396849, 2022-02-20 22:40:49.0
1000107, emily.ludies@hotmail.com, Emily F. Ludies, 1650493189, 2022-04-20 22:19:49.0
1000121, lalelu@hottunes.org, Michelle Dagnes, 1650493449, 2022-04-20 22:24:09.0
1000131, hotbear753@yahoo.com, Mark Spielman, 1650494449, 2022-04-20 22:40:49.0
>>>ordercustomerdedup-data
10007140, Emily F. Ludies, 1000107, 2023-05-19 02:28:39.553
10007543, John Mekker, 1000101, 2023-05-19 01:29:39.553
10008231, Michelle Dagnes, 1000121, 2023-05-19 02:16:39.553
10008434, Emily F. Ludies, 1000107, 2023-05-19 01:45:39.553
