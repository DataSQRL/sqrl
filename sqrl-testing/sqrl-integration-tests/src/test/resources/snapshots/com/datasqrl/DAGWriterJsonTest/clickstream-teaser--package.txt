>>>pipeline_explain.json
[ {
  "id" : "access:Click",
  "name" : "Click",
  "type" : "query",
  "stage" : "postgres",
  "inputs" : [ "default_catalog.default_database.Click" ],
  "annotations" : [ {
    "name" : "stream-root",
    "description" : "Click__def"
  }, {
    "name" : "base-table",
    "description" : "Click"
  } ],
  "plan" : "LogicalProject(url=[$0], timestamp=[$1], userid=[$2])\n  LogicalTableScan(table=[[default_catalog, default_database, Click]])\n",
  "sql" : "SELECT *\nFROM `default_catalog`.`default_database`.`Click`"
}, {
  "id" : "access:Recommendation",
  "name" : "Recommendation",
  "type" : "query",
  "stage" : "postgres",
  "inputs" : [ "default_catalog.default_database.Recommendation" ],
  "annotations" : [ {
    "name" : "parameters",
    "description" : "url"
  }, {
    "name" : "base-table",
    "description" : "Recommendation"
  } ],
  "plan" : "LogicalProject(url=[$0], rec=[$1], frequency=[$2])\n  LogicalFilter(condition=[=($0, ?0)])\n    LogicalTableScan(table=[[default_catalog, default_database, Recommendation]])\n",
  "sql" : "SELECT *\nFROM `default_catalog`.`default_database`.`Recommendation`\nWHERE `url` = ?"
}, {
  "id" : "access:Trending",
  "name" : "Trending",
  "type" : "query",
  "stage" : "postgres",
  "inputs" : [ "default_catalog.default_database.Trending" ],
  "annotations" : [ {
    "name" : "base-table",
    "description" : "Trending"
  } ],
  "plan" : "LogicalProject(url=[$0], total=[$1])\n  LogicalTableScan(table=[[default_catalog, default_database, Trending]])\n",
  "sql" : "SELECT *\nFROM `default_catalog`.`default_database`.`Trending`"
}, {
  "id" : "access:VisitAfter",
  "name" : "VisitAfter",
  "type" : "query",
  "stage" : "postgres",
  "inputs" : [ "default_catalog.default_database.VisitAfter" ],
  "annotations" : [ {
    "name" : "base-table",
    "description" : "VisitAfter"
  } ],
  "plan" : "LogicalProject(beforeURL=[$0], afterURL=[$1], timestamp=[$2])\n  LogicalTableScan(table=[[default_catalog, default_database, VisitAfter]])\n",
  "sql" : "SELECT *\nFROM `default_catalog`.`default_database`.`VisitAfter`"
}, {
  "id" : "default_catalog.default_database.Click",
  "name" : "Click",
  "type" : "stream",
  "stage" : "flink",
  "inputs" : [ "default_catalog.default_database.Click__def" ],
  "annotations" : [ {
    "name" : "stream-root",
    "description" : "Click__def"
  } ],
  "plan" : "LogicalProject(url=[$0], timestamp=[$1], userid=[$2])\n  LogicalWatermarkAssigner(rowtime=[timestamp], watermark=[-($1, 1000:INTERVAL SECOND)])\n    LogicalTableScan(table=[[default_catalog, default_database, Click__def]])\n",
  "sql" : "CREATE VIEW `Click`\nAS\nSELECT *\nFROM `default_catalog`.`default_database`.`Click__def`",
  "primary_key" : [ "url", "userid", "timestamp" ],
  "timestamp" : "timestamp",
  "schema" : [ {
    "name" : "url",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "timestamp",
    "type" : "TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL"
  }, {
    "name" : "userid",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  } ]
}, {
  "id" : "default_catalog.default_database.Click__def",
  "name" : "Click__def",
  "type" : "import",
  "stage" : "flink",
  "inputs" : [ ],
  "connector" : {
    "format" : "flexible-json",
    "path" : "${DATA_PATH}/click.jsonl",
    "source.monitor-interval" : "10 sec",
    "connector" : "filesystem"
  }
}, {
  "id" : "default_catalog.default_database.Recommendation",
  "name" : "Recommendation",
  "type" : "state",
  "stage" : "flink",
  "inputs" : [ "default_catalog.default_database.VisitAfter" ],
  "annotations" : [ {
    "name" : "sort",
    "description" : "[0 ASC-nulls-first, 2 DESC-nulls-last]"
  } ],
  "plan" : "LogicalAggregate(group=[{0, 1}], frequency=[COUNT()])\n  LogicalProject(url=[$0], rec=[$1])\n    LogicalTableScan(table=[[default_catalog, default_database, VisitAfter]])\n",
  "sql" : "CREATE VIEW Recommendation AS  SELECT beforeURL AS url, afterURL AS rec,\n    count(1) AS frequency FROM VisitAfter\n    GROUP BY beforeURL, afterURL ORDER BY url ASC, frequency DESC;\n",
  "primary_key" : [ "url", "rec" ],
  "timestamp" : "-",
  "schema" : [ {
    "name" : "url",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "rec",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "frequency",
    "type" : "BIGINT NOT NULL"
  } ]
}, {
  "id" : "default_catalog.default_database.Trending",
  "name" : "Trending",
  "type" : "state",
  "stage" : "flink",
  "inputs" : [ "default_catalog.default_database.Click" ],
  "annotations" : [ {
    "name" : "sort",
    "description" : "[1 DESC-nulls-last, 0 ASC-nulls-first]"
  } ],
  "plan" : "LogicalAggregate(group=[{0}], total=[COUNT()])\n  LogicalProject(url=[$0])\n    LogicalTableScan(table=[[default_catalog, default_database, Click]])\n",
  "sql" : "CREATE VIEW Trending AS  SELECT url, count(1) AS total\n    FROM Click\n    GROUP BY url ORDER BY total DESC, url ASC;\n",
  "primary_key" : [ "url" ],
  "timestamp" : "-",
  "schema" : [ {
    "name" : "url",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "total",
    "type" : "BIGINT NOT NULL"
  } ]
}, {
  "id" : "default_catalog.default_database.VisitAfter",
  "name" : "VisitAfter",
  "type" : "stream",
  "stage" : "flink",
  "inputs" : [ "default_catalog.default_database.Click" ],
  "annotations" : [ ],
  "plan" : "LogicalProject(beforeURL=[$0], afterURL=[$3], timestamp=[$4])\n  LogicalJoin(condition=[AND(=($2, $5), <($1, $4), >=($1, -($4, *(10, 60000:INTERVAL MINUTE))))], joinType=[inner])\n    LogicalTableScan(table=[[default_catalog, default_database, Click]])\n    LogicalTableScan(table=[[default_catalog, default_database, Click]])\n",
  "sql" : "CREATE VIEW VisitAfter AS  SELECT b.url AS beforeURL, a.url AS afterURL,\n    a.`timestamp` AS `timestamp`\n    FROM Click b JOIN Click a ON b.userid=a.userid AND\n        b.`timestamp` < a.`timestamp` AND\n        b.`timestamp` >= a.`timestamp` - INTERVAL 10 MINUTE;\n",
  "timestamp" : "timestamp",
  "schema" : [ {
    "name" : "beforeURL",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "afterURL",
    "type" : "VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" NOT NULL"
  }, {
    "name" : "timestamp",
    "type" : "TIMESTAMP_LTZ(3) *ROWTIME* NOT NULL"
  } ]
} ]
