[ {
  "function" : {
    "name" : "character",
    "description" : "Get a specific character by ID",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        }
      },
      "required" : [ "id" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query character($id: ID!) {\ncharacter(id: $id) {\nid\nname\nstatus\nspecies\ntype\ngender\norigin {\nid\nname\ntype\ndimension\ncreated\n}\nlocation {\nid\nname\ntype\ndimension\ncreated\n}\nimage\nepisode {\nid\nname\nair_date\nepisode\ncreated\n}\ncreated\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "characters",
    "description" : "Get the list of all characters",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "gender" : {
          "type" : "string"
        },
        "species" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "page" : {
          "type" : "integer"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      },
      "required" : [ ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query characters($page: Int$name: String$status: String$species: String$type: String$gender: String) {\ncharacters(page: $page, filter: { name: $name, status: $status, species: $species, type: $type, gender: $gender }) {\ninfo {\ncount\npages\nnext\nprev\n}\nresults {\nid\nname\nstatus\nspecies\ntype\ngender\norigin {\nid\nname\ntype\ndimension\ncreated\n}\nlocation {\nid\nname\ntype\ndimension\ncreated\n}\nimage\nepisode {\nid\nname\nair_date\nepisode\ncreated\n}\ncreated\n}\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "charactersByIds",
    "description" : "Get a list of characters selected by ids",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "required" : [ "ids" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query charactersByIds($ids: [ID!]!) {\ncharactersByIds(ids: $ids) {\nid\nname\nstatus\nspecies\ntype\ngender\norigin {\nid\nname\ntype\ndimension\ncreated\n}\nlocation {\nid\nname\ntype\ndimension\ncreated\n}\nimage\nepisode {\nid\nname\nair_date\nepisode\ncreated\n}\ncreated\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "location",
    "description" : "Get a specific locations by ID",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        }
      },
      "required" : [ "id" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query location($id: ID!) {\nlocation(id: $id) {\nid\nname\ntype\ndimension\nresidents {\nid\nname\nstatus\nspecies\ntype\ngender\nimage\nepisode {\nid\nname\nair_date\nepisode\ncreated\n}\ncreated\n}\ncreated\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "locations",
    "description" : "Get the list of all locations",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "page" : {
          "type" : "integer"
        },
        "type" : {
          "type" : "string"
        },
        "dimension" : {
          "type" : "string"
        }
      },
      "required" : [ ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query locations($page: Int$name: String$type: String$dimension: String) {\nlocations(page: $page, filter: { name: $name, type: $type, dimension: $dimension }) {\ninfo {\ncount\npages\nnext\nprev\n}\nresults {\nid\nname\ntype\ndimension\nresidents {\nid\nname\nstatus\nspecies\ntype\ngender\nimage\ncreated\n}\ncreated\n}\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "locationsByIds",
    "description" : "Get a list of locations selected by ids",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "required" : [ "ids" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query locationsByIds($ids: [ID!]!) {\nlocationsByIds(ids: $ids) {\nid\nname\ntype\ndimension\nresidents {\nid\nname\nstatus\nspecies\ntype\ngender\nimage\nepisode {\nid\nname\nair_date\nepisode\ncreated\n}\ncreated\n}\ncreated\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "episode",
    "description" : "Get a specific episode by ID",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        }
      },
      "required" : [ "id" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query episode($id: ID!) {\nepisode(id: $id) {\nid\nname\nair_date\nepisode\ncharacters {\nid\nname\nstatus\nspecies\ntype\ngender\norigin {\nid\nname\ntype\ndimension\ncreated\n}\nlocation {\nid\nname\ntype\ndimension\ncreated\n}\nimage\ncreated\n}\ncreated\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "episodes",
    "description" : "Get the list of all episodes",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "episode" : {
          "type" : "string"
        },
        "page" : {
          "type" : "integer"
        }
      },
      "required" : [ ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query episodes($page: Int$name: String$episode: String) {\nepisodes(page: $page, filter: { name: $name, episode: $episode }) {\ninfo {\ncount\npages\nnext\nprev\n}\nresults {\nid\nname\nair_date\nepisode\ncharacters {\nid\nname\nstatus\nspecies\ntype\ngender\nimage\ncreated\n}\ncreated\n}\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "episodesByIds",
    "description" : "Get a list of episodes selected by ids",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "required" : [ "ids" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query episodesByIds($ids: [ID!]!) {\nepisodesByIds(ids: $ids) {\nid\nname\nair_date\nepisode\ncharacters {\nid\nname\nstatus\nspecies\ntype\ngender\norigin {\nid\nname\ntype\ndimension\ncreated\n}\nlocation {\nid\nname\ntype\ndimension\ncreated\n}\nimage\ncreated\n}\ncreated\n}\n\n}"
  }
} ]