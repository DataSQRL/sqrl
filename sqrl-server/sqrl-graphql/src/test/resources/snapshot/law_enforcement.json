[ {
  "function" : {
    "name" : "BoloDetails",
    "description" : "Fetches Bolo details with specified vehicle characteristics.",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer",
          "description" : "The number of results to skip before starting to return results. Defaults to 0."
        },
        "limit" : {
          "type" : "integer",
          "description" : "The maximum number of results to return. Defaults to 10."
        },
        "model" : {
          "type" : "string",
          "description" : "The model of the vehicle."
        },
        "make" : {
          "type" : "string",
          "description" : "The make of the vehicle (e.g., Ford, Toyota)."
        }
      },
      "required" : [ "make" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query BoloDetails($make: String!$model: String$limit: Int = 10$offset: Int = 0) {\nBoloDetails(make: $make, model: $model, limit: $limit, offset: $offset) {\nbolo_id\nvehicle_id\nissue_date\nstatus\nlast_updated\nmake\nmodel\nyear\nregistration_state\nregistration_number\nlicense_state\ndriver_id\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "Driver",
    "description" : "Retrieves driver information using their license number.",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "vehicles_tracking_limit" : {
          "type" : "integer"
        },
        "offset" : {
          "type" : "integer",
          "description" : "The number of results to skip before starting to return results. Defaults to 0."
        },
        "bolos_limit" : {
          "type" : "integer"
        },
        "bolos_offset" : {
          "type" : "integer"
        },
        "vehicles_limit" : {
          "type" : "integer"
        },
        "license_number" : {
          "type" : "string",
          "description" : "The license number of the driver."
        },
        "vehicles_bolos_limit" : {
          "type" : "integer"
        },
        "vehicles_bolos_offset" : {
          "type" : "integer"
        },
        "warrants_limit" : {
          "type" : "integer"
        },
        "vehicles_tracking_offset" : {
          "type" : "integer"
        },
        "limit" : {
          "type" : "integer",
          "description" : "The maximum number of results to return. Defaults to 10."
        },
        "vehicles_offset" : {
          "type" : "integer"
        },
        "warrants_offset" : {
          "type" : "integer"
        }
      },
      "required" : [ "license_number" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query Driver($license_number: String!$limit: Int = 10$offset: Int = 0$bolos_limit: Int = 10$bolos_offset: Int = 0$vehicles_limit: Int = 10$vehicles_offset: Int = 0$vehicles_bolos_limit: Int = 10$vehicles_bolos_offset: Int = 0$vehicles_tracking_limit: Int = 10$vehicles_tracking_offset: Int = 0$warrants_limit: Int = 10$warrants_offset: Int = 0) {\nDriver(license_number: $license_number, limit: $limit, offset: $offset) {\ndriver_id\nfirst_name\nlast_name\nlicense_number\nlicense_state\ndate_of_birth\nlicense_status\nlicense_expiry_date\nlast_updated\nbolos(limit: $bolos_limit, offset: $bolos_offset) {\nbolo_id\nvehicle_id\nissue_date\nstatus\nlast_updated\nmake\nmodel\nyear\nregistration_state\nregistration_number\nlicense_state\ndriver_id\n}\nvehicles(limit: $vehicles_limit, offset: $vehicles_offset) {\nvehicle_id\nregistration_number\nregistration_state\nregistration_expiry\nmake\nmodel\nyear\nowner_driver_id\nlast_updated\nbolos(limit: $vehicles_bolos_limit, offset: $vehicles_bolos_offset) {\nbolo_id\nvehicle_id\nissue_date\nstatus\nlast_updated\nmake\nmodel\nyear\nregistration_state\nregistration_number\nlicense_state\ndriver_id\n}\ntracking(limit: $vehicles_tracking_limit, offset: $vehicles_tracking_offset) {\nlatitude\nlongitude\nevent_time\n}\n}\nwarrants(limit: $warrants_limit, offset: $warrants_offset) {\nwarrant_id\nperson_id\nwarrant_status\ncrime_description\nstate_of_issuance\nissue_date\nlast_updated\n}\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "Vehicle",
    "description" : "Retrieves vehicle details using the registration number.",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer",
          "description" : "The number of results to skip before starting to return results. Defaults to 0."
        },
        "registration_number" : {
          "type" : "string",
          "description" : "The registration number of the vehicle, i.e. the license plate number."
        },
        "limit" : {
          "type" : "integer",
          "description" : "The maximum number of results to return. Defaults to 10."
        },
        "tracking_limit" : {
          "type" : "integer"
        },
        "bolos_limit" : {
          "type" : "integer"
        },
        "tracking_offset" : {
          "type" : "integer"
        },
        "bolos_offset" : {
          "type" : "integer"
        }
      },
      "required" : [ "registration_number" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query Vehicle($registration_number: String!$limit: Int = 10$offset: Int = 0$bolos_limit: Int = 10$bolos_offset: Int = 0$tracking_limit: Int = 10$tracking_offset: Int = 0) {\nVehicle(registration_number: $registration_number, limit: $limit, offset: $offset) {\nvehicle_id\nregistration_number\nregistration_state\nregistration_expiry\nmake\nmodel\nyear\nowner_driver_id\nlast_updated\nbolos(limit: $bolos_limit, offset: $bolos_offset) {\nbolo_id\nvehicle_id\nissue_date\nstatus\nlast_updated\nmake\nmodel\nyear\nregistration_state\nregistration_number\nlicense_state\ndriver_id\n}\ntracking(limit: $tracking_limit, offset: $tracking_offset) {\nlatitude\nlongitude\nevent_time\n}\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "WarrantsByCrime",
    "description" : "Fetches statistics on warrants filtered by the type of crime.",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer"
        },
        "limit" : {
          "type" : "integer"
        },
        "crime" : {
          "type" : "string",
          "description" : "The type of crime."
        }
      },
      "required" : [ ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query WarrantsByCrime($crime: String$limit: Int = 100$offset: Int = 0) {\nWarrantsByCrime(crime: $crime, limit: $limit, offset: $offset) {\ncrime\nnum_warrants\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "WarrantsByState",
    "description" : "Fetches statistics on warrants issued by state filtered by their status.",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer"
        },
        "limit" : {
          "type" : "integer"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the warrant (one of: active, urgent, closed, suspended)."
        }
      },
      "required" : [ ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query WarrantsByState($status: String$limit: Int = 100$offset: Int = 0) {\nWarrantsByState(status: $status, limit: $limit, offset: $offset) {\nstate\nstatus\nnum_warrants\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "BolosByWeekState",
    "description" : "Fetches Bolo (be on the lookout) statistics by week filtered by state. It returns the data ordered\nby week starting from the most recent and going backwards from there.",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer",
          "description" : "The number of results to skip before starting to return results. Defaults to 0."
        },
        "limit" : {
          "type" : "integer",
          "description" : "The maximum number of results to return. Defaults to 100. Set to the number of past weeks to return\nmultiplied by the number of states."
        },
        "state" : {
          "type" : "string",
          "description" : "The state for which Bolos are to be fetched abbreviated to two uppercase letters (e.g. WA, CA)."
        }
      },
      "required" : [ ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "query BolosByWeekState($state: String$limit: Int = 100$offset: Int = 0) {\nBolosByWeekState(state: $state, limit: $limit, offset: $offset) {\nweek\nstate\nnum_bolos\n}\n\n}"
  }
}, {
  "function" : {
    "name" : "Tracking",
    "parameters" : {
      "type" : "object",
      "properties" : {
        "latitude" : {
          "type" : "number"
        },
        "plate" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "number"
        }
      },
      "required" : [ "plate", "latitude", "longitude" ]
    }
  },
  "contextKeys" : [ ],
  "apiQuery" : {
    "query" : "mutation Tracking($plate: String!$latitude: Float!$longitude: Float!) {\nTracking(encounter: { plate: $plate, latitude: $latitude, longitude: $longitude }) {\n_uuid\nplate\n}\n\n}"
  }
} ]