[ {
  "apiQuery" : {
    "operationType" : "QUERY",
    "query" : "query SensorReading($sensorid: Int!, $limit: Int = 10, $offset: Int = 0) {\nSensorReading(sensorid: $sensorid, limit: $limit, offset: $offset) {\nsensorid\ntemperature\nevent_time\n}\n\n}",
    "queryName" : "SensorReading"
  },
  "function" : {
    "description" : "Returns the sensor temperature readings for each second by most recent for a given sensor id",
    "name" : "GetSensorReading",
    "parameters" : {
      "properties" : {
        "limit" : {
          "description" : "The number of readings (one per second) to return",
          "type" : "integer"
        },
        "offset" : {
          "type" : "integer"
        },
        "sensorid" : {
          "description" : "The id of the sensor",
          "type" : "integer"
        }
      },
      "required" : [ "sensorid" ],
      "type" : "object"
    }
  },
  "httpMethod" : "GET",
  "resource" : false,
  "restEndpoint" : true,
  "tool" : true,
  "uriTemplate" : "queries/SensorReading{?offset,limit,sensorid}"
}, {
  "apiQuery" : {
    "operationType" : "QUERY",
    "query" : "query ReadingsAboveTemp($temp: Float!, $limit: Int = 10) {\nReadingsAboveTemp(temp: $temp, limit: $limit) {\nsensorid\ntemperature\nevent_time\n}\n\n}",
    "queryName" : "ReadingsAboveTemp"
  },
  "function" : {
    "description" : "Returns all sensor temperature readings above the given temperature",
    "name" : "GetReadingsAboveTemp",
    "parameters" : {
      "properties" : {
        "limit" : {
          "type" : "integer"
        },
        "temp" : {
          "type" : "number"
        }
      },
      "required" : [ "temp" ],
      "type" : "object"
    }
  },
  "httpMethod" : "GET",
  "resource" : false,
  "restEndpoint" : true,
  "tool" : true,
  "uriTemplate" : "queries/ReadingsAboveTemp{?temp,limit}"
}, {
  "apiQuery" : {
    "operationType" : "QUERY",
    "query" : "query SensorMaxTempLastMinute($sensorid: Int, $limit: Int = 10, $offset: Int = 0) {\nSensorMaxTempLastMinute(sensorid: $sensorid, limit: $limit, offset: $offset) {\nsensorid\nmaxTemp\nlast_updated\n}\n\n}",
    "queryName" : "SensorMaxTempLastMinute"
  },
  "function" : {
    "description" : "Returns the maximum temperature recorded by each sensor in the last minute",
    "name" : "GetSensorMaxTempLastMinute",
    "parameters" : {
      "properties" : {
        "limit" : {
          "description" : "The number sensors to return max temperature for",
          "type" : "integer"
        },
        "offset" : {
          "type" : "integer"
        },
        "sensorid" : {
          "description" : "The id of the sensor. If left empty, returns max temperature for all sensors.",
          "type" : "integer"
        }
      },
      "required" : [ ],
      "type" : "object"
    }
  },
  "httpMethod" : "GET",
  "resource" : false,
  "restEndpoint" : true,
  "tool" : true,
  "uriTemplate" : "queries/SensorMaxTempLastMinute{?offset,limit,sensorid}"
}, {
  "apiQuery" : {
    "operationType" : "QUERY",
    "query" : "query SensorMaxTemp($sensorid: Int, $limit: Int = 10, $offset: Int = 0) {\nSensorMaxTemp(sensorid: $sensorid, limit: $limit, offset: $offset) {\nsensorid\nmaxTemp\nlast_updated\n}\n\n}",
    "queryName" : "SensorMaxTemp"
  },
  "function" : {
    "description" : "Returns the maximum temperature recorded by each sensor",
    "name" : "GetSensorMaxTemp",
    "parameters" : {
      "properties" : {
        "limit" : {
          "description" : "The number sensors to return max temperature for",
          "type" : "integer"
        },
        "offset" : {
          "type" : "integer"
        },
        "sensorid" : {
          "description" : "The id of the sensor. If left empty, returns max temperature for all sensors.",
          "type" : "integer"
        }
      },
      "required" : [ ],
      "type" : "object"
    }
  },
  "httpMethod" : "GET",
  "resource" : false,
  "restEndpoint" : true,
  "tool" : true,
  "uriTemplate" : "queries/SensorMaxTemp{?offset,limit,sensorid}"
}, {
  "apiQuery" : {
    "operationType" : "MUTATION",
    "query" : "mutation AddReading($sensorid: Int!, $temperature: Float!) {\nAddReading(metric: { sensorid: $sensorid, temperature: $temperature }) {\nsensorid\ntemperature\nevent_time\n}\n\n}",
    "queryName" : "AddReading"
  },
  "function" : {
    "name" : "AddAddReading",
    "parameters" : {
      "properties" : {
        "sensorid" : {
          "type" : "integer"
        },
        "temperature" : {
          "type" : "number"
        }
      },
      "required" : [ "sensorid", "temperature" ],
      "type" : "object"
    }
  },
  "httpMethod" : "POST",
  "resource" : false,
  "restEndpoint" : true,
  "tool" : true,
  "uriTemplate" : "mutations/AddReading"
}, {
  "apiQuery" : {
    "operationType" : "QUERY",
    "query" : "query HighTemps(\n    $temperature: Float!\n) {\n    ReadingsAboveTemp(temp: $temperature) {\n        sensorid\n        temperature\n    }\n}\n",
    "queryName" : "HighTemps"
  },
  "function" : {
    "description" : " Returns all readings with a temperature higher than the provided value",
    "name" : "HighTemps",
    "parameters" : {
      "properties" : {
        "temperature" : {
          "description" : " The temperature",
          "type" : "number"
        }
      },
      "required" : [ "temperature" ],
      "type" : "object"
    }
  },
  "httpMethod" : "GET",
  "resource" : false,
  "restEndpoint" : true,
  "tool" : true,
  "uriTemplate" : "queries/HighTemps{?temperature}"
}, {
  "apiQuery" : {
    "operationType" : "QUERY",
    "query" : "query HighTemps2(\n    $temp: Float!\n) {\n    ReadingsAboveTemp(temp: $temp) {\n        sensorid\n        temperature\n    }\n}\n",
    "queryName" : "HighTemps2"
  },
  "function" : {
    "description" : " high temperature readings",
    "name" : "HighTemps2",
    "parameters" : {
      "properties" : {
        "temp" : {
          "description" : "",
          "type" : "number"
        }
      },
      "required" : [ "temp" ],
      "type" : "object"
    }
  },
  "httpMethod" : "GET",
  "resource" : false,
  "restEndpoint" : true,
  "tool" : true,
  "uriTemplate" : "queries/HighTemps2{?temp}"
} ]
