>>>customer$2
LogicalTableScan(table=[[customer$1]])

>>>orders$2
LogicalTableScan(table=[[orders$1]])

>>>orders2$1
LogicalProject(_idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], _uuid=[$0], _time=[$4])
  LogicalCorrelate(correlation=[$cor1], joinType=[inner], requiredColumns=[{5}])
    LogicalTableScan(table=[[orders$2]])
    LogicalTableFunctionScan(invocation=[Orders.entries(?0)], rowType=[RecordType(INTEGER _idx, BIGINT productid, BIGINT quantity, DOUBLE unit_price, DOUBLE discount)], elementType=[class [Ljava.lang.Object;])

>>>orders3$1
LogicalProject(_idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10], _uuid=[$0], _time=[$4])
  LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{5}])
    LogicalTableScan(table=[[orders$2]])
    LogicalTableFunctionScan(invocation=[Orders.entries($cor0.entries)], rowType=[RecordType(INTEGER _idx, BIGINT productid, BIGINT quantity, DOUBLE unit_price, DOUBLE discount)], elementType=[class [Ljava.lang.Object;])

>>>product$2
LogicalTableScan(table=[[product$1]])

