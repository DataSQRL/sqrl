>>>customer$q$2
LogicalValues(tuples=[[]])

>>>orders$q$5
LogicalValues(tuples=[[]])

>>>product$q$9
LogicalValues(tuples=[[]])

>>>recent_products$q$11
LogicalProject(__pk_0=[$0], productid=[$1], category=[$2], quantity=[$3], num_orders=[$4])
  LogicalAggregate(group=[{0, 13, 22}], quantity=[SUM($14)], num_orders=[COUNT()])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], _uuid0=[$6], _ingest_time0=[$7], id=[$8], customerid0=[$9], time=[$10], _uuid00=[$11], _idx=[$12], productid=[$13], quantity=[$14], unit_price=[$15], discount=[$16], _uuid1=[$17], _ingest_time1=[$18], productid0=[$19], name0=[$20], description=[$21], category=[$22], _uuid2=[CAST($23):CHAR(36) CHARACTER SET "UTF-16LE"], _ingest_time2=[CAST($24):TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)], id0=[CAST($25):BIGINT], customerid1=[CAST($26):BIGINT], time0=[CAST($27):TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)], _uuid20=[$23])
      LogicalJoin(condition=[=($11, $23)], joinType=[inner])
        LogicalJoin(condition=[=($19, $13)], joinType=[left])
          LogicalJoin(condition=[=($9, $2)], joinType=[inner])
            LogicalTableScan(table=[[customer$3]])
            LogicalJoin(condition=[=($0, $5)], joinType=[inner])
              LogicalTableScan(table=[[orders$6]])
              LogicalTableScan(table=[[entries$7]])
          LogicalTableScan(table=[[product$10]])
        LogicalFilter(condition=[<(NOW(), +($4, 63158400000:INTERVAL SECOND))])
          LogicalTableScan(table=[[orders$6]])

>>>join-declaration-orders
JOIN PATH ON ("customer$3" AS "@") ON ("orders$6" AS "Orders") USING "Orders"."customerid" = "@"."customerid"
>>>join-declaration-product
JOIN PATH ON ("entries$7" AS "@") ON ("product$10" AS "Product") USING "Product"."productid" = "@"."productid" FETCH 1
