>>>orderagg1$q$14-lp-STREAM
LogicalProject(customerid=[$3], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
  LogicalTableScan(table=[[orders$q$5]])

>>>orderagg1$q$14-lp-DATABASE
LogicalProject(customerid=[$0], count=[$1], time=[$2])
  LogicalFilter(condition=[=($3, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], count=[$1], time=[$2], $f3=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$3], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
        LogicalTableScan(table=[[orders$6]])

>>>orderagg2$q$16-lp-STREAM
LogicalProject(customerid=[$3], timestamp=[MAX($4) IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)])
  LogicalTableScan(table=[[orders$q$5]])

>>>orderagg2$q$16-lp-DATABASE
LogicalProject(customerid=[$0], timestamp=[$1], count=[$2])
  LogicalFilter(condition=[=($3, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], timestamp=[$1], count=[$2], $f3=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS LAST)])
      LogicalProject(customerid=[$3], timestamp=[MAX($4) IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)])
        LogicalTableScan(table=[[orders$6]])

>>>orderagg3$q$18-lp-STREAM
LogicalProject(customerid=[$0], count=[$1], __timestamp=[$2])
  LogicalAggregate(group=[{3}], count=[COUNT()], __timestamp=[MAX($4)])
    LogicalTableScan(table=[[ordersstate$q$11]])

>>>orderagg3$q$18-lp-DATABASE
LogicalProject(customerid=[$0], count=[$1], __timestamp=[$2])
  LogicalAggregate(group=[{3}], count=[COUNT()], __timestamp=[MAX($4)])
    LogicalTableScan(table=[[ordersstate$12]])

>>>orderagg4$q$20-lp-STREAM
LogicalProject(customerid=[$0], timestamp=[$1], count=[$2])
  LogicalAggregate(group=[{3}], timestamp=[MAX($4)], count=[COUNT()])
    LogicalTableScan(table=[[ordersstate$q$11]])

>>>orderagg4$q$20-lp-DATABASE
LogicalProject(customerid=[$0], timestamp=[$1], count=[$2])
  LogicalAggregate(group=[{3}], timestamp=[MAX($4)], count=[COUNT()])
    LogicalTableScan(table=[[ordersstate$12]])

