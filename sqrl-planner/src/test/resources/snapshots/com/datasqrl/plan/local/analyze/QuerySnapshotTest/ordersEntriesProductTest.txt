>>>customer$q$2
LogicalValues(tuples=[[]])

>>>dproduct$q$11
LogicalProject(__pk_0=[$0], __pk_1=[$1], name=[$11])
  LogicalFilter(condition=[=($12, $13)])
    LogicalProject(_uuid=[$0], _idx=[$1], productid=[$2], quantity=[$3], unit_price=[$4], discount=[$5], _uuid0=[$6], _ingest_time=[$7], productid0=[$8], name=[$9], description=[$10], category=[$11], $f12=[ROW_NUMBER() OVER (PARTITION BY $0, $1 ORDER BY $11 NULLS LAST)], $f13=[RANK() OVER (PARTITION BY $0, $1 ORDER BY $11 NULLS LAST)])
      LogicalJoin(condition=[=($8, $2)], joinType=[inner])
        LogicalTableScan(table=[[entries$7]])
        LogicalTableScan(table=[[product$10]])

>>>orders$q$5
LogicalValues(tuples=[[]])

>>>product$q$9
LogicalValues(tuples=[[]])

>>>join-declaration-product
JOIN PATH ON ("entries$7" AS "@") ON ("product$10" AS "Product") USING "Product"."productid" = "@"."productid" FETCH 1
