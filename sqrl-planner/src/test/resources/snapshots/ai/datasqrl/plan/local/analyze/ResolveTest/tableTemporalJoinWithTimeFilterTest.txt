>>>totals-lp
LogicalProject(__pk_0=[$1], category=[$2], num=[$3], time=[$0])
  LogicalAggregate(group=[{4, 6, 23}], num=[SUM($15)]) hints[SlidingAggregationHint options:[4, 31536000000, 630720000]]
    LogicalJoin(condition=[=($18, $14)], joinType=[inner]) hints[TemporalJoinHint options:[4, 2, 0]]
      LogicalCorrelate(correlation=[$cor1], joinType=[inner], requiredColumns=[{5}])
        LogicalJoin(condition=[=($3, $6)], joinType=[inner]) hints[TemporalJoinHint options:[4, 2, 0]]
          LogicalTableScan(table=[[orders$q$5]])
          LogicalFilter(condition=[=($6, 1)])
            LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], $f6=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
              LogicalTableScan(table=[[customer$q$11]])
        Uncollect
          LogicalProject($f0=[$cor1.entries])
            LogicalValues(tuples=[[{ 0 }]])
      LogicalFilter(condition=[=($6, 1)])
        LogicalProject(productid=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], description=[$4], category=[$5], $f6=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
          LogicalTableScan(table=[[product$q$13]])

