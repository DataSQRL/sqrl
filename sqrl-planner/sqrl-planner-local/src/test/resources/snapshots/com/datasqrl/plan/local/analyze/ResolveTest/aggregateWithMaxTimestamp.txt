>>>orderagg1$q$19-lp-STREAM
LogicalProject(customerid=[$3], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time$0=[$4])
  LogicalTableScan(table=[[orders$q$6]])

>>>orderagg1$q$19-lp-DATABASE
LogicalProject(customerid=[$0], count=[$1], time$0=[$2])
  LogicalFilter(condition=[=($3, 1)]) hints[DedupHint]
    LogicalProject(customerid$0=[$0], count=[$1], time$0=[$2], $f3=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid$0=[$3], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time$0=[$4])
        LogicalTableScan(table=[[orders$7]])

>>>orderagg2$q$22-lp-STREAM
LogicalProject(customerid=[$3], timestamp=[MAX($4) IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)])
  LogicalTableScan(table=[[orders$q$6]])

>>>orderagg2$q$22-lp-DATABASE
LogicalProject(customerid=[$0], timestamp=[$1], count=[$2])
  LogicalFilter(condition=[=($3, 1)]) hints[DedupHint]
    LogicalProject(customerid$0=[$0], timestamp=[$1], count=[$2], $f3=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS LAST)])
      LogicalProject(customerid$0=[$3], timestamp=[MAX($4) IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)])
        LogicalTableScan(table=[[orders$7]])

>>>orderagg3$q$25-lp-STREAM
LogicalProject(customerid=[$0], count=[$1], __timestamp=[$2])
  LogicalAggregate(group=[{3}], count=[COUNT()], __timestamp=[MAX($4)])
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(id$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], customerid$0=[$3], time$0=[$4], $f5=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS LAST)])
        LogicalTableScan(table=[[ordersstate$q$16]])

>>>orderagg3$q$25-lp-DATABASE
LogicalProject(customerid=[$0], count=[$1], __timestamp=[$2])
  LogicalAggregate(group=[{3}], count=[COUNT()], __timestamp=[MAX($4)])
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(id$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], customerid$0=[$3], time$0=[$4], $f5=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS LAST)])
        LogicalTableScan(table=[[ordersstate$17]])

>>>orderagg4$q$28-lp-STREAM
LogicalProject(customerid=[$0], timestamp=[$1], count=[$2])
  LogicalAggregate(group=[{3}], timestamp=[MAX($4)], count=[COUNT()])
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(id$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], customerid$0=[$3], time$0=[$4], $f5=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS LAST)])
        LogicalTableScan(table=[[ordersstate$q$16]])

>>>orderagg4$q$28-lp-DATABASE
LogicalProject(customerid=[$0], timestamp=[$1], count=[$2])
  LogicalAggregate(group=[{3}], timestamp=[MAX($4)], count=[COUNT()])
    LogicalFilter(condition=[=($5, 1)]) hints[DedupHint]
      LogicalProject(id$0=[$0], _uuid$0=[$1], _ingest_time$0=[$2], customerid$0=[$3], time$0=[$4], $f5=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $4 DESC NULLS LAST)])
        LogicalTableScan(table=[[ordersstate$17]])

