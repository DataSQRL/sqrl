>>>orderagg1$q$15-lp-STREAM
LogicalProject(customer=[$3], order_count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
  LogicalTableScan(table=[[orders$q$5]])

>>>orderagg1$q$15-lp-DATABASE
LogicalProject(customer=[$0], order_count=[$1], time=[$2])
  LogicalFilter(condition=[=($3, 1)]) hints[DedupHint]
    LogicalProject(customerid=[$0], order_count=[$1], time=[$2], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
      LogicalProject(customerid=[$3], order_count=[COUNT() IGNORE NULLS OVER (PARTITION BY $3 ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
        LogicalTableScan(table=[[orders$q$5]])

>>>orderagg2$q$17-lp-STREAM
LogicalProject(_pk=[1], order_count=[COUNT() IGNORE NULLS OVER (ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
  LogicalTableScan(table=[[orders$q$5]])

>>>orderagg2$q$17-lp-DATABASE
LogicalProject(_pk=[1], order_count=[$0], time=[$1])
  LogicalFilter(condition=[=($2, 1)]) hints[DedupHint]
    LogicalProject(order_count=[$0], time=[$1], _rownum=[ROW_NUMBER() OVER (ORDER BY $1 DESC NULLS LAST)])
      LogicalProject(order_count=[COUNT() IGNORE NULLS OVER (ORDER BY $4 ROWS UNBOUNDED PRECEDING)], time=[$4])
        LogicalTableScan(table=[[orders$q$5]])

