>>>ordercustomer$1-lp-STREAM
LogicalProject(id=[$0], _uuid=[$1], name=[$10], customerid=[$3], __timestamp=[CASE(<($2, $8), $8, $2)])
  LogicalJoin(condition=[=($3, $6)], joinType=[inner]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
    LogicalTableScan(table=[[orders$3]])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])

>>>ordercustomer$1-lp-DATABASE
LogicalProject(id=[$0], _uuid=[$1], name=[$10], customerid=[$3], __timestamp=[CASE(<($2, $8), $8, $2)])
  LogicalJoin(condition=[=($3, $6)], joinType=[inner]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
    LogicalTableScan(table=[[orders$3]])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])

>>>ordercustomerleft$1-lp-STREAM
LogicalProject(id=[$0], _uuid=[$7], name=[$10], customerid=[$3], __timestamp=[CASE(<($2, $8), $8, $2)])
  LogicalJoin(condition=[=($3, $6)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
    LogicalTableScan(table=[[orders$3]])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])

>>>ordercustomerleft$1-lp-DATABASE
LogicalProject(id=[$0], _uuid=[$7], name=[$10], customerid=[$3], __timestamp=[CASE(<($2, $8), $8, $2)])
  LogicalJoin(condition=[=($3, $6)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
    LogicalTableScan(table=[[orders$3]])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])

>>>ordercustomerleftexcluded$1-lp-STREAM
LogicalProject(id=[$0], _uuid=[$1], customerid=[$3], __timestamp=[$13])
  LogicalFilter(condition=[IS NULL($7)])
    LogicalProject(id=[$0], _uuid=[$1], _ingest_time=[$2], customerid=[$3], time=[$4], entries=[$5], customerid0=[$6], _uuid0=[$7], _ingest_time0=[$8], email=[$9], name=[$10], lastUpdated=[$11], _rownum=[$12], __timestamp=[CASE(<($2, $8), $8, $2)])
      LogicalJoin(condition=[=($3, $6)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
        LogicalTableScan(table=[[orders$3]])
        LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
            LogicalTableScan(table=[[customer$3]])

>>>ordercustomerleftexcluded$1-lp-DATABASE
LogicalProject(id=[$0], _uuid=[$1], customerid=[$3], __timestamp=[$13])
  LogicalFilter(condition=[IS NULL($7)])
    LogicalProject(id=[$0], _uuid=[$1], _ingest_time=[$2], customerid=[$3], time=[$4], entries=[$5], customerid0=[$6], _uuid0=[$7], _ingest_time0=[$8], email=[$9], name=[$10], lastUpdated=[$11], _rownum=[$12], __timestamp=[CASE(<($2, $8), $8, $2)])
      LogicalJoin(condition=[=($3, $6)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, RIGHT]]
        LogicalTableScan(table=[[orders$3]])
        LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
            LogicalTableScan(table=[[customer$3]])

>>>ordercustomerright$1-lp-STREAM
LogicalProject(_customerid0=[$0], ouuid=[COALESCE($7, 0:BIGINT)], id=[$7], name=[$4], customerid=[$10], __timestamp=[CASE(<($2, $9), $9, $2)])
  LogicalJoin(condition=[=($10, $0)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, LEFT]]
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])
    LogicalTableScan(table=[[orders$3]])

>>>ordercustomerright$1-lp-DATABASE
LogicalProject(_customerid0=[$0], ouuid=[COALESCE($7, 0:BIGINT)], id=[$7], name=[$4], customerid=[$10], __timestamp=[CASE(<($2, $9), $9, $2)])
  LogicalJoin(condition=[=($10, $0)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, LEFT]]
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])
    LogicalTableScan(table=[[orders$3]])

>>>ordercustomerrightexcluded$1-lp-STREAM
LogicalProject(customerid=[$0], _uuid=[$1], name=[$4], __timestamp=[$13])
  LogicalFilter(condition=[IS NULL($7)])
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[$6], id=[$7], _uuid0=[$8], _ingest_time0=[$9], customerid0=[$10], time=[$11], entries=[$12], __timestamp=[CASE(<($2, $9), $9, $2)])
      LogicalJoin(condition=[=($10, $0)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, LEFT]]
        LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
            LogicalTableScan(table=[[customer$3]])
        LogicalTableScan(table=[[orders$3]])

>>>ordercustomerrightexcluded$1-lp-DATABASE
LogicalProject(customerid=[$0], _uuid=[$1], name=[$4], __timestamp=[$13])
  LogicalFilter(condition=[IS NULL($7)])
    LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[$6], id=[$7], _uuid0=[$8], _ingest_time0=[$9], customerid0=[$10], time=[$11], entries=[$12], __timestamp=[CASE(<($2, $9), $9, $2)])
      LogicalJoin(condition=[=($10, $0)], joinType=[left]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 1, LEFT]]
        LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
          LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
            LogicalTableScan(table=[[customer$3]])
        LogicalTableScan(table=[[orders$3]])

>>>ordercustomerconstant$1-lp-STREAM
LogicalProject(id=[$0], _uuid=[$1], name=[$10], customerid=[$3], __timestamp=[CASE(<($2, $8), $8, $2)])
  LogicalJoin(condition=[AND(=($3, $6), =($10, 'Robert'), >($0, 5))], joinType=[inner]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 2, RIGHT]]
    LogicalTableScan(table=[[orders$3]])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])

>>>ordercustomerconstant$1-lp-DATABASE
LogicalProject(id=[$0], _uuid=[$1], name=[$10], customerid=[$3], __timestamp=[CASE(<($2, $8), $8, $2)])
  LogicalJoin(condition=[AND(=($3, $6), =($10, 'Robert'), >($0, 5))], joinType=[inner]) hints[JoinCostHint options:[DEDUP_STREAM, DEDUP_STREAM, 2, RIGHT]]
    LogicalTableScan(table=[[orders$3]])
    LogicalFilter(condition=[=($6, 1)]) hints[DedupHint]
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastUpdated=[$5], _rownum=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[customer$3]])

