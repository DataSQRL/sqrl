>>>customer$2
LogicalTableScan(table=[[customer$1]])

>>>orders$2
LogicalTableScan(table=[[orders$1]])

>>>product$2
LogicalTableScan(table=[[product$1]])

>>>recent_products$1
LogicalProject(__pk1$_uuid=[$0], productid=[$1], category=[$2], quantity=[$3], num_orders=[$4], __timestamp=[$5])
  LogicalAggregate(group=[{0, 1, 2}], quantity=[SUM($3)], num_orders=[COUNT()], __timestamp=[MAX($7)])
    LogicalProject(__pk1$_uuid=[$0], productid=[$3], category=[COALESCE($22, '')], quantity=[$4], _idx=[$2], _uuid00=[$15], _uuid1=[$17], __timestamp23=[CASE(<($16, $18), $18, $16)])
      LogicalJoin(condition=[=($3, $19)], joinType=[left])
        LogicalProject(__pk1$_uuid=[$0], _uuid=[$13], _idx=[$19], productid=[$20], quantity=[$21], unit_price=[$22], discount=[$23], __timestamp=[$17], _uuid0=[CAST($25):CHAR(36) CHARACTER SET "UTF-16LE"], _ingest_time=[CAST($26):TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)], id=[CAST($27):BIGINT], customerid=[CAST($28):BIGINT], time=[CAST($29):TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)], entries=[CAST($30):RecordType(INTEGER NOT NULL _idx, BIGINT NOT NULL productid, BIGINT NOT NULL quantity, DOUBLE NOT NULL unit_price, DOUBLE discount) NOT NULL ARRAY], _uuid6=[CAST($25):CHAR(36) CHARACTER SET "UTF-16LE"], _uuid00=[$6], __timestamp31=[CASE(<($24, $29), $29, $24)])
          LogicalJoin(condition=[=($13, $25)], joinType=[inner])
            LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], _uuid0=[$6], _ingest_time0=[$7], id=[$8], customerid0=[$9], time=[$10], entries=[$11], __timestamp=[$12], _uuid1=[$13], _ingest_time1=[$14], id0=[$15], customerid1=[$16], time0=[$17], entries0=[$18], _idx=[$19], productid=[$20], quantity=[$21], unit_price=[$22], discount=[$23], __timestamp24=[CASE(<($12, $17), $17, $12)])
              LogicalJoin(condition=[=($6, $13)], joinType=[inner])
                LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastUpdated=[$5], _uuid0=[$6], _ingest_time0=[$7], id=[$8], customerid0=[$9], time=[$10], entries=[$11], __timestamp=[CASE(<($1, $10), $10, $1)])
                  LogicalJoin(condition=[=($2, $9)], joinType=[inner])
                    LogicalTableScan(table=[[customer$2]])
                    LogicalTableScan(table=[[orders$2]])
                LogicalCorrelate(correlation=[$cor5], joinType=[inner], requiredColumns=[{5}])
                  LogicalTableScan(table=[[orders$2]])
                  Uncollect
                    LogicalProject($f0=[$cor5.entries])
                      LogicalValues(tuples=[[{ 0 }]])
            LogicalFilter(condition=[<(NOW(), +($4, 31536000000:INTERVAL SECOND(11)))])
              LogicalTableScan(table=[[orders$2]])
        LogicalTableScan(table=[[product$2]])

