>>>product$q$2
LogicalTableScan(table=[[product$i$1]])

>>>product$q$4
LogicalProject(productid=[$2], _uuid=[$0], _ingest_time=[$1], name=[$3], description=[$4], category=[$5])
  LogicalTableScan(table=[[product$q$2]])

>>>product2$q$6
LogicalProject(productid0=[$0], productid=[$7], __timestamp=[CASE(<($2, $9), $9, $2)], $f7=[$14])
  LogicalJoin(condition=[=($0, $7)], joinType=[left])
    LogicalFilter(condition=[=($6, 1)])
      LogicalProject(productid=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], description=[$4], category=[$5], $f6=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
        LogicalTableScan(table=[[product$q$4]])
    LogicalFilter(condition=[=($7, 1)])
      LogicalProject(productid=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], description=[$4], category=[$5], $f6=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0)])
        LogicalFilter(condition=[=($6, 1)])
          LogicalProject(productid=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], description=[$4], category=[$5], $f6=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $2 DESC NULLS LAST)])
            LogicalTableScan(table=[[product$q$4]])

