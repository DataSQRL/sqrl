>>>recenttotal$1-lp-STREAM
LogicalProject(_pk=[1], total=[$1], quantity=[$2], _time=[$0])
  LogicalAggregate(group=[{4}], total=[SUM($0)], quantity=[SUM($1)]) hints[SlidingAggregationHint options:[4, 604800000, 12096000]]
    LogicalProject($f0=[*($9, $8)], quantity=[$8], _uuid=[$0], _idx=[$6], time=[$4])
      LogicalCorrelate(correlation=[$cor4], joinType=[inner], requiredColumns=[{5}])
        LogicalTableScan(table=[[orders$2]])
        Uncollect
          LogicalProject($f0=[$cor4.entries])
            LogicalValues(tuples=[[{ 0 }]])

>>>recenttotal$1-lp-DATABASE
LogicalProject(_pk=[1], total=[$0], quantity=[$1], __timestamp=[$2])
  LogicalAggregate(group=[{}], total=[SUM($0)], quantity=[SUM($1)], __timestamp=[MAX($4)])
    LogicalProject($f0=[*($10, $9)], quantity=[$9], _uuid=[$0], _idx=[$7], time=[$4])
      LogicalJoin(condition=[=($0, $6)], joinType=[inner])
        LogicalFilter(condition=[<(NOW(), +($4, 604800000:INTERVAL SECOND(9)))])
          LogicalTableScan(table=[[orders$2]])
        LogicalTableScan(table=[[entries$1]])

