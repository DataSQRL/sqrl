>>>orderfilter$1-lp-STREAM
LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5])
  LogicalTableScan(table=[[orders$2]])

>>>orderfilter$1-lp-DATABASE
LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5])
  LogicalFilter(condition=[<(NOW(), +($4, 86400000:INTERVAL SECOND(8)))])
    LogicalTableScan(table=[[orders$2]])

>>>orderagg1$1-lp-STREAM
LogicalProject(customer=[$0], bucket=[$1], order_count=[$2])
  LogicalAggregate(group=[{0, 1}], order_count=[COUNT()]) hints[TumbleAggregationHint options:[1, FUNCTION, 4, 1000, 0]]
    LogicalProject(customer=[$3], bucket=[endOfSecond($4)], _uuid=[$0])
      LogicalTableScan(table=[[orderfilter$1]])

>>>orderagg1$1-lp-DATABASE
Stage [database] does not support capabilities: [EXTENDED_FUNCTIONS]

>>>orderagg2$1-lp-STREAM
LogicalProject(customer=[$0], bucket=[$1], order_count=[$2])
  LogicalAggregate(group=[{0, 1}], order_count=[COUNT()]) hints[TumbleAggregationHint options:[1, FUNCTION, 4, 1000, 0]]
    LogicalProject(customer=[$3], bucket=[endOfSecond($4)], _uuid=[$0])
      LogicalTableScan(table=[[orders$2]])

>>>orderagg2$1-lp-DATABASE
Stage [database] does not support capabilities: [EXTENDED_FUNCTIONS]

