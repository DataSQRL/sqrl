<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.datasqrl</groupId>
    <artifactId>sqrl-root</artifactId>
    <packaging>pom</packaging>
    <version>0.4.1-SNAPSHOT</version>
    <modules>
        <module>sqrl-base</module>
        <module>sqrl-engines</module>
        <module>sqrl-examples</module>
        <module>sqrl-io</module>
        <module>sqrl-lib</module>
        <module>sqrl-planner</module>
        <module>sqrl-testing</module>
        <module>sqrl-tools</module>
        <module>sqrl-execute</module>
    </modules>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <mockito.version>4.8.0</mockito.version>
        <jackson.version>2.14.0</jackson.version>
        <vertx.version>4.4.6</vertx.version>
        <agroal.version>1.11</agroal.version>
        <kafka.version>3.4.0</kafka.version>
        <flink.version>1.16.1</flink.version>
        <slf4j.version>1.7.36</slf4j.version>
        <postgres.version>42.5.0</postgres.version>
        <log4j.version>2.19.0</log4j.version>
        <scala.version>2.12</scala.version>
        <guava.version>31.1-jre</guava.version>
        <lombok.version>1.18.24</lombok.version>
        <commonsio.version>2.11.0</commonsio.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-config.version>2.9.0</commons-config.version>
        <commons-bean.version>1.9.4</commons-bean.version>
        <h2.version>2.1.214</h2.version>
        <opencsv.version>5.7.1</opencsv.version>
        <javax.validation.version>2.0.1.Final</javax.validation.version>
        <glassfish.version>3.0.0</glassfish.version>
        <reactive-streams.version>1.0.4</reactive-streams.version>
        <testcontainers.version>1.18.0</testcontainers.version>
        <scram.version>2.1</scram.version>
        <protobuf.version>3.21.1</protobuf.version>
        <picocli.version>4.7.4</picocli.version>
        <commonscodec.version>1.15</commonscodec.version>
        <zip4j.version>2.11.2</zip4j.version>
        <guice.version>5.1.0</guice.version>
        <autoservice.version>1.0.1</autoservice.version>
        <antlr.version>4.9.2</antlr.version>
        <log4j.version>2.19.0</log4j.version>
        <guava.version>31.1-jre</guava.version>
        <lombok.version>1.18.24</lombok.version>
        <junit.jupiter.version>5.8.2</junit.jupiter.version>
        <calcite.version>1.27.0</calcite.version>
        <graphql-java.version>19.2</graphql-java.version>
        <projectreactor.version>3.5.6</projectreactor.version>
        <avro.version>1.11.3</avro.version>

        <!-- params -->
        <snapshots.update>false</snapshots.update>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    </properties>
    <profiles>
        <profile>
            <id>update-snapshots</id>
            <properties>
                <snapshots.update>true</snapshots.update>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- common test infra-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <!-- SQRL deps, please keep this in order -->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-base</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- engines-->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-engine-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-engine-flink</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-engine-jdbc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-engine-kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-engine-server</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- examples-->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-examples</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- execute flink connectors-->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-file</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-h2</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-inmem</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-jdbc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-postgres</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-print</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-sqlite</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- execute flink -->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-function</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-flink-jar</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- execute http -->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-http-aws-lambda</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-http-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-execute-http-vertx</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- io -->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-file</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-mem</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-jdbc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-print</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- planner -->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-planner-local</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-format-csv</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-format-json</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-planner-schema-flexible</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-schema-flexible</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-schema-avro</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-planner-schema-avro</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-json-execute</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-json-planner</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-vector-execute</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-vector-planner</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- tests -->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-integration-tests</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- tools -->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-cli</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-discovery</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-packager</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- sqrl test jars-->
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-common</artifactId>
                <type>test-jar</type>
                <scope>test</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-cli</artifactId>
                <type>test-jar</type>
                <scope>test</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-io-file</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.datasqrl</groupId>
                <artifactId>sqrl-planner-local</artifactId>
                <type>test-jar</type>
                <scope>test</scope>
                <version>${project.version}</version>
            </dependency>

            <!-- Test utils -->
            <dependency>
                <groupId>com.theokanning.openai-gpt3-java</groupId>
                <artifactId>service</artifactId>
                <version>0.11.0</version>
                <scope>test</scope>
            </dependency>

            <!-- General utils -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>${antlr.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.google.auto.service</groupId>
                <artifactId>auto-service</artifactId>
                <version>${autoservice.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commonsio.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commonscodec.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-config.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-bean.version}</version>
            </dependency>
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli</artifactId>
                <version>${picocli.version}</version>
            </dependency>
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>${zip4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esotericsoftware.kryo</groupId>
                <artifactId>kryo</artifactId>
                <version>2.24.0</version>
            </dependency>

            <dependency>
                <groupId>com.graphql-java</groupId>
                <artifactId>graphql-java</artifactId>
                <version>${graphql-java.version}</version>
            </dependency>

            <!-- Vertx -->
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-kafka-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-graphql</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-sql-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-pg-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-config</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-openapi</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-junit5</artifactId>
                <version>${vertx.version}</version>
                <scope>test</scope>
                <!-- JUnit 4 is no longer necessary, so we exclude it -->
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-client</artifactId>
                <version>${vertx.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-jdbc-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <!-- required for vertx subscriptions -->
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${projectreactor.version}</version>
            </dependency>

            <!-- required for vertx jdbc -->
            <dependency>
                <groupId>io.agroal</groupId>
                <artifactId>agroal-pool</artifactId>
                <version>${agroal.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reactivestreams</groupId>
                <artifactId>reactive-streams</artifactId>
                <version>${reactive-streams.version}</version>
            </dependency>

            <!-- validation -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${glassfish.version}</version>
            </dependency>

            <!-- aws specific -->
            <dependency>
                <groupId>software.amazon.msk</groupId>
                <artifactId>aws-msk-iam-auth</artifactId>
                <version>1.1.7</version>
            </dependency>

            <!-- Flink -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-core</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-common</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-runtime-web</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-csv</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-avro</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-avro-confluent-registry</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-runtime</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner_2.12</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-file-sink-common</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-s3-fs-hadoop</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-files</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-jdbc</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- stream: csv -->
            <dependency>
                <groupId>com.opencsv</groupId>
                <artifactId>opencsv</artifactId>
                <version>${opencsv.version}</version>
            </dependency>

            <!-- stream: sources -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
                <classifier>test</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.version}</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.version}</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
                <classifier>test</classifier>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
                <classifier>test</classifier>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams-test-utils</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- formats -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>

            <!-- database: postgres -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>4.1.92.Final</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>
            <!-- postgres required libs -->
            <dependency>
                <groupId>com.ongres.scram</groupId>
                <artifactId>common</artifactId>
                <version>${scram.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ongres.scram</groupId>
                <artifactId>client</artifactId>
                <version>${scram.version}</version>
            </dependency>

            <!-- database: h2 -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-blackbird</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- testing -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
                <!-- JUnit 4 is no longer necessary, so we exclude it -->
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!-- build -->
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-test-utils</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <scm>
        <url>https://github.com/DataSQRL/sqrl.git</url>
        <connection>scm:git:git@github.com:DataSQRL/sqrl.git</connection>
        <developerConnection>scm:git:git@github.com:DataSQRL/sqrl.git</developerConnection>
      <tag>HEAD</tag>
  </scm>
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version> <!-- Use the latest version -->
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <pushChanges>true</pushChanges>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- do not build an empty jar if the project is
                         e.g. a pom project -->
                    <skipIfEmpty>true</skipIfEmpty>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>false</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <systemPropertyVariables>
                        <snapshots.update>${snapshots.update}</snapshots.update>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Test*.java</include>
                        <include>**/*IT.java</include>
                        <include>**/*IT*.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>4.1</version>
                <configuration>
                    <inlineHeader><![CDATA[
Copyright (c) 2021, DataSQRL. All rights reserved. Use is subject to license terms.]]></inlineHeader>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/src/main/java/org/**</exclude>
                    </excludes>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>