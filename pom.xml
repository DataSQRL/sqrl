<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ai.datasqrl</groupId>
    <artifactId>sqrl-root</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>sqrl-common</module>
        <module>sqrl-parser</module>
        <module>sqrl-compiler</module>
        <module>sqrl-packager</module>
        <module>sqrl-spi</module>
        <module>sqrl-io-kafka</module>
        <module>sqrl-io-file</module>
        <module>sqrl-transpiler</module>
        <module>sqrl-engine-core</module>
        <module>sqrl-engine-flink</module>
        <module>sqrl-engine-jdbc</module>
        <module>sqrl-discovery</module>
        <module>sqrl-planner</module>
        <module>sqrl-server-core</module>
        <module>sqrl-server-vertx</module>
        <module>sqrl-e2e</module>
        <module>sqrl-loader-function</module>
        <module>sqrl-loader-file</module>
        <module>sqrl-engine-inmem</module>
    </modules>


    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <mockito.version>4.8.0</mockito.version>
        <jackson.version>2.14.0</jackson.version>
        <vertx.version>4.3.4</vertx.version>
        <agroal.version>1.11</agroal.version>
        <kafka.version>3.3.1</kafka.version>
        <flink.version>1.15.2</flink.version>
        <slf4j.version>2.0.3</slf4j.version>
        <postgres.version>42.5.0</postgres.version>
        <log4j.version>2.19.0</log4j.version>
        <scala.version>2.12</scala.version>
        <guava.version>31.1-jre</guava.version>
        <lombok.version>1.18.24</lombok.version>
        <commonsio.version>2.11.0</commonsio.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <h2.version>2.1.214</h2.version>
        <opencsv.version>5.7.1</opencsv.version>
        <hibernate.version>6.2.5.Final</hibernate.version>
        <javax.validation.version>2.0.1.Final</javax.validation.version>
        <glassfish.version>3.0.0</glassfish.version>
        <graphql-java.version>16.2</graphql-java.version>
        <reactive-streams.version>1.0.4</reactive-streams.version>
        <testcontainers.version>1.17.4</testcontainers.version>
        <junit.jupiter.version>5.8.2</junit.jupiter.version>
        <scram.version>2.1</scram.version>
        <protobuf.version>3.21.1</protobuf.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <!-- SQRL deps -->
            <dependency>
                <artifactId>sqrl-parser</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-compiler</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-spi</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-common</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-common</artifactId>
                <groupId>ai.datasqrl</groupId>
                <type>test-jar</type>
                <scope>test</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-io-kafka</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-io-file</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-transpiler</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-engine-core</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-engine-flink</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-engine-jdbc</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-discovery</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-planner</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-server-core</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-server-vertx</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-e2e</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-loader-function</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <artifactId>sqrl-loader-file</artifactId>
                <groupId>ai.datasqrl</groupId>
                <version>${project.version}</version>
            </dependency>


            <dependency>
                <groupId>com.ongres.scram</groupId>
                <artifactId>common</artifactId>
                <version>${scram.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ongres.scram</groupId>
                <artifactId>client</artifactId>
                <version>${scram.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>


            <!-- vertx -->
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-graphql</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-pg-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-config</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-openapi</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-junit5</artifactId>
                <version>${vertx.version}</version>
                <scope>test</scope>
                <!-- JUnit 4 is no longer necessary, so we exclude it -->
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-client</artifactId>
                <version>${vertx.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-jdbc-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web</artifactId>
                <version>${vertx.version}</version>
            </dependency>

            <!-- required for vertx jdbc -->
            <dependency>
                <groupId>io.agroal</groupId>
                <artifactId>agroal-pool</artifactId>
                <version>${agroal.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reactivestreams</groupId>
                <artifactId>reactive-streams</artifactId>
                <version>${reactive-streams.version}</version>
            </dependency>

            <!-- servlet -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${glassfish.version}</version>
            </dependency>

            <!-- stream: Flink -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-runtime</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner_2.12</artifactId>
                <version>${flink.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-file-sink-common</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-files</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-jdbc</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!-- stream: csv -->
            <dependency>
                <groupId>com.opencsv</groupId>
                <artifactId>opencsv</artifactId>
                <version>${opencsv.version}</version>
            </dependency>
            <!-- stream: sources -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
                <classifier>test</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.version}</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.version}</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
                <classifier>test</classifier>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
                <classifier>test</classifier>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams-test-utils</artifactId>
                <version>${kafka.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- database: postgres -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>

            <!-- database: h2 -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>

            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-blackbird</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- testing -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <!--      <scope>test</scope>-->
                <!-- JUnit 4 is no longer necessary, so we exclude it -->
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <!--      <scope>test</scope>-->
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <!--      <scope>test</scope>-->
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!-- other -->
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commonsio.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- do not build an empty jar if the project is
                         e.g. a pom project -->
                    <skipIfEmpty>true</skipIfEmpty>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>false</addClasspath>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <excludes>
                        <exclude>**/*IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/*IT*.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>