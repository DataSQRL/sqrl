{
  "week" : "This SQL function returns  the week number of the year for a given date. For example, WEEK('2020-02-14') returns 7, as February 14th is the 7th week of the year 2020.",
  "hour" : "This SQL function returns  the hour of a given time value. For example, HOUR('12:30:15') returns 12.",
  "month" : "This SQL function returns  the month of a given date. For example, MONTH('2020-07-01') returns 7.",
  "year" : "This SQL function returns  the year from a given date. For example, YEAR('2020-01-01') would return 2020.",
  "dayofweek" : "This SQL function returns  an integer representing the day of the week for a given date. For example, DAYOFWEEK('2020-07-01') returns 3, indicating that July 1, 2020 is a Wednesday.",
  "dayofmonth" : "This SQL function returns  the day of the month for a given date. For example, DAYOFMONTH('2020-07-15') would return 15.",
  "dayofyear" : "This SQL function returns  the day of the year for a given date. For example, DAYOFYEAR('2020-02-14') returns 45.",
  "minute" : "This SQL function returns  the minute of a given time value. For example, MINUTE('12:45:30') returns 45.",
  "quarter" : "This SQL function returns  an integer value representing the quarter of the year for a given date. For example, QUARTER('2020-07-15') returns 3, representing the third quarter of the year.",
  "second" : "This SQL function returns  the second item in a list of items. For example, SECOND('apple', 'banana', 'cherry') would return 'banana'.",
  "ascii" : "This SQL function returns  the ASCII code of the leftmost character of a given string. For example, ASCII('A') would return 65.",
  "chr" : "This SQL function returns  the character based on the number code in its argument. For example, CHR(65) returns the character 'A'.",
  "concat_function" : "This SQL function returns  a concatenated string of two or more strings. For example, CONCAT_FUNCTION('Hello', 'World') returns the string 'HelloWorld'.",
  "concat_ws" : "This SQL function returns  a string that is the result of concatenating a series of strings separated by a specified separator. For example, CONCAT_WS('-', 'Hello', 'World') returns 'Hello-World'.",
  "decode" : "This SQL function returns  a value based on a comparison of an expression to one or more search values. For example, DECODE(1, 1, 'One', 2, 'Two', 'Other') would return 'One' as the result.",
  "encode" : "This SQL function returns  an encoded string of the input string using the specified algorithm. For example, ENCODE('Hello World', 'SHA1') returns '2aae6c35c94fcfb415dbe95f408b9ce91ee",
  "from_base64" : "This SQL function returns  a string decoded from its base64 representation. For example, FROM_BASE64('SGVsbG8gV29ybGQ=') returns 'Hello World'.",
  "initcap" : "This SQL function returns  a string with the first letter of each word capitalized. For example, invoking the function with the string \"hello world\" would return \"Hello World\".",
  "instr" : "This SQL function returns  the position of a substring within a string. For example, INSTR('Hello World', 'World') returns 7, indicating that the substring 'World' starts at the 7th character in the string 'Hello World'.",
  "left" : "This SQL function returns  a specified number of characters from the left side of a string. For example, LEFT('Hello World', 5) would return 'Hello' as the result.",
  "char_length" : "This SQL function returns  the number of characters in a given string. For example, CHAR_LENGTH('Hello World') returns 11.",
  "locate" : "This SQL function returns  the position of a substring within a string. For example, LOCATE('world', 'Hello world') returns 7, indicating that the substring 'world' begins at the 7th character in the string 'Hello world'.",
  "lpad" : "This SQL function returns  a string padded on the left with a specified set of characters to a certain length. For example, LPAD('Hello', 10, '*') would return '**Hello***'.",
  "ltrim" : "This SQL function returns  a string with all leading spaces removed. For example, LTRIM('  Hello World') would return 'Hello World'.",
  "overlay" : "This SQL function returns  a string with a substring replaced by a new substring. For example, OVERLAY('ABCDE' PLACING 'XYZ' FROM 3 FOR 3) returns 'ABXYZE'.",
  "parse_url" : "This SQL function returns  the components of a URL as separate fields. For example, PARSE_URL('https://www.example.com/path/to/page?query=string') would return the protocol ('https'), host ('www.example.com'),",
  "position" : "This SQL function returns  the position of a substring within a string. For example, POSITION('world' IN 'hello world') returns 7, indicating that the substring 'world' begins at the 7th character in the string 'hello world'.",
  "regexp" : "This SQL function returns  a boolean value (true or false) indicating whether a given string matches a given regular expression. For example, REGEXP('Hello World', '^Hello') returns true.",
  "regexp_extract" : "This SQL function returns  a specific part of a string that matches a regular expression pattern. For example, REGEXP_EXTRACT('Hello World', '[a-zA-Z]+', 0) returns 'Hello'.",
  "regexp_replace" : "This SQL function returns  a string with all substrings that match a regular expression pattern replaced by a specified replacement string. For example, REGEXP_REPLACE('Hello World', 'l', 'z') would return 'Hezzo Worzd'.",
  "repeat" : "This SQL function returns  a string consisting of the specified string repeated a specified number of times. For example, REPEAT('Hello', 3) would return 'HelloHelloHello'.",
  "replace" : "This SQL function returns  a new string with some or all occurrences of a specified string replaced with another specified string. For example, REPLACE('Hello World', 'World', 'Universe') would return 'Hello Universe'.",
  "reverse" : "This SQL function returns  a character string in reverse order. For example, REVERSE('Hello World') would return 'dlroW olleH'.",
  "right" : "This SQL function returns  a specified number of characters from the right side of a given string. For example, RIGHT('Hello World', 5) would return \"World\".",
  "rpad" : "This SQL function returns  a string that is right-padded with a specific set of characters to a specified length. For example, RPAD('Hello', 10, '*') would return 'Hello*****'.",
  "rtrim" : "This SQL function returns  a character string with the specified characters removed from the right side of the string. For example, RTRIM('Hello World  ', ' ') would return 'Hello World'.",
  "split_index" : "This SQL function returns  a substring from a given string based on a delimiter and index. For example, SPLIT_INDEX('Hello,World', ',', 1) would return 'Hello' as the result.",
  "str_to_map" : "This SQL function returns  a map from a string of key-value pairs. For example, STR_TO_MAP('a=1,b=2,c=3') returns a map with keys 'a', 'b', and 'c' and values '",
  "substr" : "This SQL function returns  a substring from a given string, starting at a specified position and including a specified number of characters. For example, SUBSTR('Hello World', 6, 5) would return 'World'.",
  "substring" : "This SQL function returns  a portion of a string, starting at a specified position and including a specified number of characters. For example, SUBSTRING('Hello World', 6, 5) would return 'World'.",
  "to_base64" : "This SQL function returns  a base64-encoded string from a given input string. For example, TO_BASE64('Hello World') returns 'SGVsbG8gV29ybGQ=' which is the base64-encoded version of",
  "trim" : "This SQL function returns  a string with leading and trailing whitespace removed. For example, TRIM('  Hello World  ') would return 'Hello World'.",
  "upper" : "This SQL function returns  a string with all characters converted to uppercase. For example, UPPER('hello world') would return 'HELLO WORLD'."
}