IMPORT adr-data.*;

IMPORT FUNCTION vec;

Prescriptions.x := 1;
Prescriptions.dosage := 1;
Prescriptions.order_no := 1;
Prescriptions.`end` := 1;
DrugIngredients.x := 1;
DrugIngredients.ingredient := 1;
DrugIngredients.fraction := 1;
ADRTemplate.x := 1;
ADRTemplate.reference := 1;
ADRTemplate.name := 1;
ADRTemplate.severity := 1;
Patient.id := 1;
Patient.diagnosis.x := 1;
Patient.diagnosis.code := 1;
Patient.diagnosis.date := 1;
Patient.diagnosis.identifier := 1;
Patient.diagnosis.diagnosis := 1;
MedicalHistory.patient_ssn := 1;

Patient.prescriptions := JOIN Prescriptions on @.prescriptions.parent.id = Prescriptions.patient_id INVERSE patient;

Patient.activeIngredients := SELECT p.order_no as prescription_no, di.ingredient as ingredient,
                                    p.dosage * di.fraction as dosage
                             FROM @.prescriptions p JOIN DrugIngredients di on p.drug_id = di.drug_ref
                             WHERE p.`end` > now() - time.days(14) and p.start < now + time.days(2);

Patient.history := JOIN MedicalHistory on @.ssn=MedicalHistory.patient_ssn;

Patient.conditions := SELECT code, date, diagnosis AS `source`, identifier AS reference FROM @.diagnosis
                      UNION ALL
                      SELECT code, occured_on as date, history as `source`, record_id as reference FROM @.history;


ADRDetection := SELECT p.id as patient_id, adr.reference as adr_ref, adr.name as name, adr.severity as severity
                FROM Patient p, ADRTemplate adr
                WHERE (SELECT COUNT(adri.ingredient) FROM adr.ingredients adri
                                                     JOIN patient.activeIngredients pai ON adri.ingredient=pai.ingredient
                       GROUP BY adri.ingredient HAVING sum(pai.dosage) >= adri.min_dosage) = COUNT(adr.ingredients)
                AND (SELECT COUNT(adrc.diagnosis) FROM adr.preconditions adrc JOIN patient.conditions pc ON adrc.diagnosis=pc.code
                       GROUP BY adrc.diagnosis HAVING vec.any(vec.is_null(pc.date)) OR time.latest(pc.date) >= now()-max_duration) = COUNT(adr.conditions);

CREATE SUBSCRIPTION adr_alert  ON ADD AS
SELECT uid() as id, now() as timestamp, * FROM ADRDetection;
