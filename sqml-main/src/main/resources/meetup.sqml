Auction.id := casts.toInteger(id);
Auction.category_id := casts.toInteger(category_id);
Auction.seller_id := casts.toInteger(seller_id);
Auction.start_time := casts.toInteger(start_time);
Auction.end_time := casts.toInteger(end_time);
Auction.item_name := casts.toString(item_name);
Auction.item_description := casts.toString(item_description);

Bid.id := casts.toUuid(id);
Bid.auction_id := casts.toInteger(auction_id);
Bid.bidder_id := casts.toInteger(bidder_id);
Bid.timestamp := casts.toTimestamp(bidder_id);
Bid.bid_price := casts.toFloat(bid_price);

Category.id := casts.toInteger(id);
Category.name := casts.toString(name);
Category.description := casts.toString(description);

User.id := casts.toInteger(id);
User.name := casts.toString(name);
User.email := casts.toString(email);
User.registrationTime := casts.toInteger(registrationTime);
User.address.state := casts.toString(state);
User.address.city := casts.toString(city);

-- Let's establish the relationships in the data

Auction.bids := JOIN Bid ON Bid.auction_id = @.id INVERSE auction;
Auction.category := JOIN Category ON Category.id = @.category_id INVERSE auctions;
Auction.seller := JOIN User ON User.id = @.seller_id INVERSE auctions;

User.bids := JOIN Bid ON Bid.bidder_id = @.id INVERSE bidder;

-- Annotate Auction with additional data

Auction.highest_bid := SELECT auction_id, bid_price FROM @.bids ORDER BY bid_price DESC LIMIT 1;
--Auction.highest_bidder := highest_bid.bidder;
Auction.highest_bid_price := highest_bid.bid_price;

Auction.num_bids := (SELECT COUNT(*) as cnt FROM @.bids LIMIT 1).cnt;
Auction.duration := end_time - start_time;

Auction.location := seller.address.state;

-- Identify "HOT" Auctions

Auction.num_recent_bids := SELECT COUNT(*) as cnt FROM @.bids
                           WHERE timestamp > now() - INTERVAL 1 HOUR;

-- Annotate Seller with additional data

User.num_auctions := (SELECT COUNT(*) as cnt FROM @.auctions LIMIT 1).cnt;
User.num_bids := (SELECT COUNT(*) as cnt FROM @.bids LIMIT 1).cnt;
