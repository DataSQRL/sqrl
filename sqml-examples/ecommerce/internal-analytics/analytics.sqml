IMPORT public-api.*;

IMPORT FUNCTION time.*;

-- Seller Analytics

Seller := SELECT * FROM User WHERE num_auctions > 0;

Seller.avg_num_bids := SELECT AVG(num_bids) FROM @.auctions
                   WHERE end_time < now() LIMIT 1;
Seller.avg_price := SELECT AVG(highest_bid_price) FROM @.auctions
                  WHERE end_time < now() LIMIT 1;
Seller.total_sales := SELECT SUM(highest_bid_price) FROM @.auctions
                            WHERE end_time < now() LIMIT 1;
Seller.sales_by_category := SELECT category.name AS category, SUM(highest_bid_price) AS total_sales
                            FROM @.auctions
                            WHERE end_time < now()
                            GROUP BY category ORDER BY total_sales DESC;

Seller.sales_by_month := SELECT time.roundToMonth(end_time) AS month, SUM(highest_bid_price) AS total_sales
                            FROM @.auctions
                            WHERE end_time < now()
                            GROUP BY month ORDER BY month DESC;

Seller.num_open_auctions := SELECT COUNT(*) FROM @.auctions
                            WHERE end_time >= now() LIMIT 1;
Seller.open_auctions_total := SELECT SUM(highest_bid_price) FROM @.auctions
                            WHERE end_time >= now() LIMIT 1;

-- Daily Stats

AuctionsByDay := SELECT time.roundToDay(end_time) AS day, COUNT(*) AS num_auctions,
                        MAX(highest_bid_price) AS max_price, AVG(highest_bid_price) AS avg_price,
                        AVG(num_bids) AS avg_num_bids, SUM(num_bids) AS total_bids, AVG(duration) AS avg_duration
                 WHERE end_time > now()
                 GROUP BY day ORDER BY day DESC;

-- Special Auctions and Seller we want to look out for

CREATE SUBSCRIPTION HighPriceAuctions ON ADD AS
SELECT * FROM Auction WHERE highest_bid_price >= 1000;

Seller._new_seller := SELECT COUNT(*)>0 FROM @ JOIN @.auctions a
                            WHERE a.start_time < @.registrationTime + INTERVAL 12 HOUR

CREATE SUBSCRIPTION NewUserMonitoring ON ADD AS
SELECT * FROM Seller s
WHERE s._new_seller IS TRUE;
