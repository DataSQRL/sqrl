type Query {
  Machine(machineid: Int): [Machine!]
  Sensors(id: Int!): Sensors!
}

type Machine {
  machineid: Int!
  maxTemp: Float!
  avgTemp: Float!
  sensors: [Sensors!]
}

type SecReading {
  timeSec: String!
  temp: Float!
}

type Sensors {
  id: Int!
  machineid: Int!
  placed: String!
  readings: [SecReading!]
  lastHour: lastHour!
}

type lastHour {
  maxTemp: Float!
  avgTemp: Float!
}


type Mutation {
  AddReading(createReading: SensorReading!): CreateReading
}

input SensorReading {
  sensorid: Int!
  temperature: Float!
}

type CreateReading {
  _source_time: String!
  sensorid: Int!
}