type Query {
  CustomerTransactions(customerid: Int!, fromTime: String!, toTime: String!, limit: Int = 10, offset: Int = 0): [CustomerTransactions!]
  CustomerSpendingByWeek(customerid: Int!, limit: Int = 10, offset: Int = 0): [CustomerSpendingByWeek!]
  CustomerSpendingByDay(customerid: Int!, limit: Int = 10, offset: Int = 0): [CustomerSpendingByDay!]
}

type CustomerTransactions {
  transactionId: Float!
  cardNo: String!
  time: String!
  amount: Float!
  merchantName: String!
  category: String!
}

interface CustomerSpending {
  category: String!
  spending: Float!
}

type CustomerSpendingByDay implements CustomerSpending {
  timeDay: String!
  category: String!
  spending: Float!
}

type CustomerSpendingByWeek implements CustomerSpending {
  timeWeek: String!
  category: String!
  spending: Float!
}
