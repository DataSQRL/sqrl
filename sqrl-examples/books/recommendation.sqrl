IMPORT mysourcepackage.Authors;
IMPORT mysourcepackage.Books;
IMPORT time.parseTimestamp;
IMPORT mysourcepackage.Reviews TIMESTAMP parseTimestamp(date_updated, 'EEE MMM dd HH:mm:ss ZZZZZ YYYY') AS timestamp;


Authors := DISTINCT Authors ON author_id ORDER BY _ingest_time DESC;
Books := DISTINCT Books ON book_id ORDER BY _ingest_time DESC;

Books.author := JOIN @.authors n JOIN Authors a ON n.author_id = a.author_id;
Authors.books := JOIN Books.authors n ON n.author_id = @.author_id JOIN n.parent b;

PositiveReviews := SELECT * FROM Reviews WHERE rating >= 4;

CoReviews := SELECT b.book_id AS previousBook_id, a.book_id AS nextBook_id,
                     a.timestamp AS timestamp, abs(a.rating - b.rating) as rating_diff
              FROM PositiveReviews b INTERVAL JOIN PositiveReviews a ON b.user_id=a.user_id AND
                  b.timestamp < a.timestamp AND
                  b.timestamp >= a.timestamp - INTERVAL 800 DAY;

CoReviewsUndirected := SELECT previousBook_id AS book_id, nextBook_id AS otherBook_id,
                               rating_diff, timestamp FROM CoReviews
                        UNION ALL
                       SELECT nextBook_id AS book_id, previousBook_id AS otherBook_id,
                               rating_diff, timestamp FROM CoReviews

Books.coReviewed := SELECT c.otherBook_id, SUM(c.rating_diff) as rating_diff, COUNT(*) as num_reviews
                    FROM CoReviewsUndirected c WHERE c.book_id = @.book_id GROUP BY c.otherBook_id
                    ORDER BY num_reviews;

BookRatingCount := SELECT r.book_id, COUNT(*) as num_reviews
                 FROM PositiveReviews r GROUP BY r.book_id;

Books.similar := SELECT c.otherBook_id, (2 - c.rating_diff / c.num_reviews) * (c.num_reviews / b.num_reviews) as similarity
                 FROM @.coReviewed c JOIN BookRatingCount b ON c.otherBook_id = b.book_id
                 ORDER BY similarity DESC;

Books.similar.book := JOIN Books b ON @.otherBook_id = b.book_id;