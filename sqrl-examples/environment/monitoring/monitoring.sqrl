IMPORT sensor-data.Sensor;
IMPORT sensor-data.Sensor-reading AS SensorReading;

Sensor.readings := JOIN SensorReading ON SensorReading.sensorid = @.sensorid;
SensorReading.sensor := JOIN Sensor ON @.sensorid = Sensor.sensorid;
-- Link sensors to neighboring sensors that are less than 20km away
Sensor.neighbors := JOIN Sensor s2 ON geo.distance(@.location, s2.location) < 20000;

-- Compute temperature or co2 deviations for readings compared to previous 2 hour averages
SensorReading._recent_avgs := SELECT AVG(r.temperature) AS temperature, AVG(r.co2) AS co2
                      FROM @ JOIN @.sensor.readings r
                      WHERE r.timestamp < @.timestamp AND r.timestamp > @.timestamp - INTERVAL 2 HOUR;

SensorReading.temp_deviation := math.abs(conv.tempC2K(temperature) - conv.tempC2K(_recent_avgs.temperature));
SensorReading.co2_deviation := math.abs(co2 - _recent_avgs.co2);

-- There is a potential wildfire if we have 2 significant deviations in the last hour (1 could be fluke)

Sensor.num_deviations_last_hour := SELECT COUNT(*) FROM @.readings
                                      WHERE timestamp > now() - INTERVAL 1 HOUR AND
                                      (temp_deviation > 5 OR co2_deviation > 30);

WildfireAlert := STREAM ON ADD AS
SELECT * FROM Sensor
WHERE num_deviations_last_hour >= 2;

-- Sensor reading anomalies are normal, but if they happen too often the sensor is probably broken

Sensor.num_deviations_last_month := SELECT COUNT(*) FROM @.readings
      WHERE timestamp > now() - INTERVAL 1 MONTH AND
      (temp_deviation > 7 OR co2_deviation > 70)

BrokenSensorAlert := STREAM ON ADD AS
SELECT * FROM Sensor
WHERE num_deviations_last_month >= 10;
