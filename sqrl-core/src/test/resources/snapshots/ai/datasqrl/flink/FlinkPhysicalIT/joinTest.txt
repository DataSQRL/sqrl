>>>orders$6-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], rowtime=[$6])
  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], rowtime=[$4]) hints[WatermarkHint options:[6]]
    LogicalTableScan(table=[[orders$i$4]])

>>>ordercustomerdedup$15-lp-stream
LogicalProject(_uuid=[$0], id=[$2], name=[$11], customerid=[$3], rowtime=[$6])
  LogicalJoin(condition=[=($3, $7)], joinType=[inner]) hints[TemporalJoinHint options:[6, 6, 0]]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], rowtime=[$4]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[orders$i$4]])
    LogicalFilter(condition=[=($7, 1)])
      LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
        LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
          LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epoch_to_timestamp($5)]) hints[WatermarkHint options:[6]]
            LogicalTableScan(table=[[customer$i$1]])

>>>customer$3-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epoch_to_timestamp($5)]) hints[WatermarkHint options:[6]]
  LogicalTableScan(table=[[customer$i$1]])

>>>ordercustomerinterval$11-lp-stream
LogicalProject(_uuid=[$0], _uuid0=[$7], id=[$2], name=[$11], customerid=[$3], rowtime=[$6])
  LogicalJoin(condition=[AND(=($3, $9), >=($6, $13), <=($6, +($13, 12:INTERVAL MONTH)))], joinType=[inner]) hints[IntervalJoin]
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5], rowtime=[$4]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[orders$i$4]])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epoch_to_timestamp($5)]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[customer$i$1]])

>>>customerdedup$13-lp-stream
LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
  LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[epoch_to_timestamp($5)]) hints[WatermarkHint options:[6]]
    LogicalTableScan(table=[[customer$i$1]])

>>>ordercustomer-lp-database
LogicalProject(_uuid=[$0], _uuid0=[$6], id=[$2], name=[$10], customerid=[$3])
  LogicalJoin(condition=[=($3, $8)], joinType=[inner]) hints[JoinCostHint options:[STREAM, STREAM, 1]]
    LogicalTableScan(table=[[orders$6]])
    LogicalTableScan(table=[[customer$3]])

>>>ordercustomerinterval-lp-database
LogicalTableScan(table=[[ordercustomerinterval$11]])

>>>customerdedup-lp-database
LogicalTableScan(table=[[customerdedup$13]])

>>>ordercustomerdedup-lp-database
LogicalTableScan(table=[[ordercustomerdedup$15]])

>>>ordercustomer-data
10007140, Emily F. Ludies, 1000107
10007543, John B. Mekker, 1000101
10007543, John Mekker, 1000101
10008231, Michelle Dagnes, 1000121
10008434, Emily F. Ludies, 1000107
>>>ordercustomerinterval-data
10007140, Emily F. Ludies, 1000107, 2022-05-19 02:28:39.553
10007543, John B. Mekker, 1000101, 2022-05-19 01:29:39.553
10007543, John Mekker, 1000101, 2022-05-19 01:29:39.553
10008231, Michelle Dagnes, 1000121, 2022-05-19 02:16:39.553
10008434, Emily F. Ludies, 1000107, 2022-05-19 01:45:39.553
>>>customerdedup-data
1000101, john.mekker@gmail.com, John B. Mekker, 1650498257, 2022-04-20 23:44:17.0
1000107, emily.ludies@hotmail.com, Emily F. Ludies, 1650493189, 2022-04-20 22:19:49.0
1000121, lalelu@hottunes.org, Michelle Dagnes, 1650493449, 2022-04-20 22:24:09.0
1000131, hotbear753@yahoo.com, Mark Spielman, 1650494449, 2022-04-20 22:40:49.0
>>>ordercustomerdedup-data
10007140, Emily F. Ludies, 1000107, 2022-05-19 02:28:39.553
10007543, John B. Mekker, 1000101, 2022-05-19 01:29:39.553
10008231, Michelle Dagnes, 1000121, 2022-05-19 02:16:39.553
10008434, Emily F. Ludies, 1000107, 2022-05-19 01:45:39.553
