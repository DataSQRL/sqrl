>>>orders_by_hour$15-lp-stream
LogicalProject(customerid=[$0], hour=[$1], total_price=[$2], total_num=[$3])
  LogicalProject(customerid=[$0], hour=[$1], total_price=[$2], total_num=[$3])
    LogicalAggregate(group=[{0, 1}], total_price=[SUM($2)], total_num=[SUM($3)]) hints[TumbleAggregationHint options:[1, FUNCTION]]
      LogicalProject(customerid=[$6], hour=[round_to_hour($3)], price=[$4], num=[$5], _uuid=[$0])
        LogicalJoin(condition=[=($2, $6)], joinType=[inner]) hints[TemporalJoinHint options:[3, 6, 0]]
          LogicalProject(_uuid=[$0], id=[$2], customerid=[$3], time=[$4], price=[$7], num=[$8])
            LogicalJoin(condition=[AND(=($0, $6), =($10, $4))], joinType=[inner]) hints[IntervalJoin]
              LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5])
                LogicalTableScan(table=[[orders$i$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
              LogicalProject(_uuid=[$0], price=[$2], num=[$3], discount=[$4], time=[$1])
                LogicalAggregate(group=[{0, 5}], price=[SUM($1)], num=[COUNT()], discount=[SUM($2)]) hints[TumbleAggregationHint options:[5, INSTANT]]
                  LogicalProject(_uuid=[$0], $f1=[-(*($8, $9), $10)], discount=[$10], _idx=[$6], _ingest_time=[$1], time=[$4])
                    LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{5}])
                      LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5])
                        LogicalTableScan(table=[[orders$i$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
                      Uncollect
                        LogicalProject($f0=[$cor0.entries])
                          LogicalValues(tuples=[[{ 0 }]])
          LogicalFilter(condition=[=($7, 1)])
            LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6], $f7=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $6 DESC NULLS LAST)])
              LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
                LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[EPOCH_TO_TIMESTAMP($5)]) hints[WatermarkHint options:[6]]
                  LogicalTableScan(table=[[customer$i$5]])

>>>orders$3-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4])
  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5])
    LogicalTableScan(table=[[orders$i$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]

>>>ordersinline$13-lp-stream
LogicalProject(_uuid=[$0], id=[$1], customerid=[$2], time=[$3], price=[$4], num=[$5])
  LogicalProject(_uuid=[$0], id=[$2], customerid=[$3], time=[$4], price=[$7], num=[$8])
    LogicalJoin(condition=[AND(=($0, $6), =($10, $4))], joinType=[inner]) hints[IntervalJoin]
      LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5])
        LogicalTableScan(table=[[orders$i$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
      LogicalProject(_uuid=[$0], price=[$2], num=[$3], discount=[$4], time=[$1])
        LogicalAggregate(group=[{0, 5}], price=[SUM($1)], num=[COUNT()], discount=[SUM($2)]) hints[TumbleAggregationHint options:[5, INSTANT]]
          LogicalProject(_uuid=[$0], $f1=[-(*($8, $9), $10)], discount=[$10], _idx=[$6], _ingest_time=[$1], time=[$4])
            LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{5}])
              LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], entries=[$5])
                LogicalTableScan(table=[[orders$i$1]], hints=[[[WatermarkHint inheritPath:[] options:[4]]]]) hints[WatermarkHint options:[4]]
              Uncollect
                LogicalProject($f0=[$cor0.entries])
                  LogicalValues(tuples=[[{ 0 }]])

>>>customer$9-lp-stream
LogicalProject(customerid=[$0], _uuid=[$1], _ingest_time=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
  LogicalProject(customerid=[$2], _uuid=[$0], _ingest_time=[$1], email=[$3], name=[$4], lastupdated=[$5], updatetime=[$6])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], customerid=[$2], email=[$3], name=[$4], lastupdated=[$5], updatetime=[EPOCH_TO_TIMESTAMP($5)]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[customer$i$5]])

>>>customer-lp-database
LogicalTableScan(table=[[customer$9]])

>>>orders-lp-database
LogicalTableScan(table=[[orders$3]])

>>>ordersinline-lp-database
LogicalTableScan(table=[[ordersinline$13]])

>>>orders_by_hour-lp-database
LogicalTableScan(table=[[orders_by_hour$15]])

>>>customer-data
1000101, john.mekker@gmail.com, John B. Mekker, 1650498257, 2022-04-20 23:44:17.0
1000107, emily.ludies@hotmail.com, Emily F. Ludies, 1650493189, 2022-04-20 22:19:49.0
1000121, lalelu@hottunes.org, Michelle Dagnes, 1650493449, 2022-04-20 22:24:09.0
1000131, hotbear753@yahoo.com, Mark Spielman, 1650494449, 2022-04-20 22:40:49.0
>>>orders-data
10007140, 1000107, 2022-05-19 02:28:39.553244
10007543, 1000101, 2022-05-19 01:29:39.553244
10008231, 1000121, 2022-05-19 02:16:39.553244
10008434, 1000107, 2022-05-19 01:45:39.553244
>>>ordersinline-data
10007140, 1000107, 2022-05-19 02:28:39.553, 36.95, 2
10007543, 1000101, 2022-05-19 01:29:39.553, 120.85, 2
10008231, 1000121, 2022-05-19 02:16:39.553, 166.5, 2
10008434, 1000107, 2022-05-19 01:45:39.553, 41.95, 1
>>>orders_by_hour-data
1000101, 2022-05-19 01:59:59.999, 120.85, 2
1000107, 2022-05-19 01:59:59.999, 41.95, 1
1000107, 2022-05-19 02:59:59.999, 36.95, 2
1000121, 2022-05-19 02:59:59.999, 166.5, 2
