>>>orders$6-lp-stream
LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], timestamp=[$6])
  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epoch_to_timestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
    LogicalTableScan(table=[[orders$i$4]])

>>>customers$9-lp-stream
LogicalProject(id=[$0], timestamp=[$1])
  LogicalProject(id=[$3], timestamp=[$6])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epoch_to_timestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[orders$i$4]])

>>>totals$13-lp-stream
LogicalProject(_uuid=[$0], price=[$1], savings=[$2], timestamp=[$3])
  LogicalProject(_uuid=[$0], price=[$2], savings=[$3], timestamp=[$1])
    LogicalAggregate(group=[{0, 6}], price=[SUM($13)], savings=[SUM($12)]) hints[TumbleAggregationHint options:[6, INSTANT]]
      LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[$6], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], $f12=[coalesce($11, 0E0:DOUBLE)], $f13=[-(*($9, $10), coalesce($11, 0E0:DOUBLE))])
        LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{5}])
          LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epoch_to_timestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
            LogicalTableScan(table=[[orders$i$4]])
          Uncollect
            LogicalProject($f0=[$cor0.items])
              LogicalValues(tuples=[[{ 0 }]])

>>>spending_by_month$15-lp-stream
LogicalProject(id=[$0], month=[$1], total_spend=[$2], total_savings=[$3])
  LogicalProject(id=[$0], month=[$1], total_spend=[$2], total_savings=[$3])
    LogicalAggregate(group=[{0, 1}], total_spend=[SUM($2)], total_savings=[SUM($3)]) hints[TumbleAggregationHint options:[1, FUNCTION]]
      LogicalProject(id=[$7], month=[round_to_month($6)], price=[$11], savings=[$12], _uuid=[$0])
        LogicalJoin(condition=[AND(=($0, $10), =($13, $6))], joinType=[inner]) hints[IntervalJoin]
          LogicalJoin(condition=[=($3, $7)], joinType=[inner]) hints[TemporalJoinHint options:[6, 1, 0]]
            LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epoch_to_timestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
              LogicalTableScan(table=[[orders$i$4]])
            LogicalFilter(condition=[=($2, 1)])
              LogicalProject(id=[$0], timestamp=[$1], $f2=[ROW_NUMBER() OVER (PARTITION BY $0 ORDER BY $1 DESC NULLS LAST)])
                LogicalProject(id=[$3], timestamp=[$6])
                  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epoch_to_timestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
                    LogicalTableScan(table=[[orders$i$4]])
          LogicalProject(_uuid=[$0], price=[$2], savings=[$3], timestamp=[$1])
            LogicalAggregate(group=[{0, 6}], price=[SUM($13)], savings=[SUM($12)]) hints[TumbleAggregationHint options:[6, INSTANT]]
              LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[$6], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], $f12=[coalesce($11, 0E0:DOUBLE)], $f13=[-(*($9, $10), coalesce($11, 0E0:DOUBLE))])
                LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{5}])
                  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epoch_to_timestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
                    LogicalTableScan(table=[[orders$i$4]])
                  Uncollect
                    LogicalProject($f0=[$cor0.items])
                      LogicalValues(tuples=[[{ 0 }]])

>>>items$7-lp-stream
LogicalProject(_uuid=[$0], _idx=[$7], productid=[$8], quantity=[$9], unit_price=[$10], discount=[$11], discount$0=[coalesce($11, 0E0:DOUBLE)], total=[-(*($9, $10), coalesce($11, 0E0:DOUBLE))], timestamp=[$6])
  LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{5}])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], items=[$5], timestamp=[epoch_to_timestamp(/($4, 1000))]) hints[WatermarkHint options:[6]]
      LogicalTableScan(table=[[orders$i$4]])
    Uncollect
      LogicalProject($f0=[$cor0.items])
        LogicalValues(tuples=[[{ 0 }]])

>>>products$11-lp-stream
LogicalProject(id=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9])
  LogicalProject(id=[$2], _uuid=[$0], _ingest_time=[$1], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9])
    LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9])
      LogicalTableScan(table=[[products$i$1]], hints=[[[WatermarkHint inheritPath:[] options:[9]]]]) hints[WatermarkHint options:[9]]

>>>orders-lp-database
LogicalSort(sort0=[$5], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(_uuid=[$0], _ingest_time=[$1], id=[$2], customerid=[$3], time=[$4], timestamp=[$5])
    LogicalTableScan(table=[[orders$6]])

>>>items-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
  LogicalProject(_uuid=[$0], _idx=[$1], productid=[$2], quantity=[$3], unit_price=[$4], discount=[$5], discount$0=[$6], total=[$7])
    LogicalTableScan(table=[[items$7]])

>>>totals-lp-database
LogicalSort(sort0=[$3], sort1=[$0], dir0=[DESC-nulls-last], dir1=[ASC])
  LogicalProject(_uuid=[$0], price=[$1], savings=[$2], timestamp=[$3])
    LogicalTableScan(table=[[totals$13]])

>>>customers-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(id=[$0], timestamp=[$1])
    LogicalTableScan(table=[[customers$9]])

>>>products-lp-database
LogicalSort(sort0=[$0], dir0=[ASC])
  LogicalProject(id=[$0], _uuid=[$1], _ingest_time=[$2], name=[$3], sizing=[$4], weight_in_gram=[$5], type=[$6], category=[$7], usda_id=[$8], updated=[$9])
    LogicalTableScan(table=[[products$11]])

>>>spending_by_month-lp-database
LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])
  LogicalProject(id=[$0], month=[$1], total_spend=[$2], total_savings=[$3])
    LogicalTableScan(table=[[spending_by_month$15]])

