Orders._stats := SELECT SUM(quantity * unit_price - discount) AS total, sum(discount) AS total_savings,                  COUNT(1) AS total_entries                  FROM _.entries e


LogicalAggregate(group=[{0}], total=[SUM($1)], total_savings=[SUM($2)], total_entries=[COUNT()])
  LogicalProject(_id$0=[$0], $f1=[-(*($8, $9), $10)], discount=[$10])
    LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      LogicalTableScan(table=[[orders$12]])
      LogicalTableScan(table=[[entries$13]])


SELECT "orders$12"."id" AS "_id$0", SUM("entries$13"."quantity" * "entries$13"."unit_price" - "entries$13"."discount") AS "total", SUM("entries$13"."discount") AS "total_savings", COUNT(*) AS "total_entries"
FROM "orders$12"
 INNER JOIN "entries$13" ON "orders$12"."id" = "entries$13"."id"
GROUP BY "orders$12"."id"