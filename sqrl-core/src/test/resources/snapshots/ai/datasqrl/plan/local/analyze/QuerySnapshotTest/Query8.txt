X := SELECT g.discount FROM Orders.entries AS e INNER JOIN Orders.entries AS f ON true INNER JOIN Orders.entries AS g ON true;

LogicalProject(discount=[$17])
  LogicalJoin(condition=[true], joinType=[inner])
    LogicalJoin(condition=[true], joinType=[inner])
      LogicalProject(id=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10])
        LogicalJoin(condition=[=($0, $5)], joinType=[inner])
          LogicalTableScan(table=[[orders$12]])
          LogicalTableScan(table=[[entries$13]])
      LogicalProject(id=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10])
        LogicalJoin(condition=[=($0, $5)], joinType=[inner])
          LogicalTableScan(table=[[orders$12]])
          LogicalTableScan(table=[[entries$13]])
    LogicalProject(id=[$5], _idx=[$6], productid=[$7], quantity=[$8], unit_price=[$9], discount=[$10])
      LogicalJoin(condition=[=($0, $5)], joinType=[inner])
        LogicalTableScan(table=[[orders$12]])
        LogicalTableScan(table=[[entries$13]])


SELECT "t1"."discount"
FROM (SELECT "entries$13"."id", "entries$13"."_idx", "entries$13"."productid", "entries$13"."quantity", "entries$13"."unit_price", "entries$13"."discount"
  FROM "orders$12"
   INNER JOIN "entries$13" ON "orders$12"."id" = "entries$13"."id") AS "t",
  (SELECT "entries$130"."id", "entries$130"."_idx", "entries$130"."productid", "entries$130"."quantity", "entries$130"."unit_price", "entries$130"."discount"
  FROM "orders$12" AS "orders$120"
   INNER JOIN "entries$13" AS "entries$130" ON "orders$120"."id" = "entries$130"."id") AS "t0",
  (SELECT "entries$131"."id", "entries$131"."_idx", "entries$131"."productid", "entries$131"."quantity", "entries$131"."unit_price", "entries$131"."discount"
  FROM "orders$12" AS "orders$121"
   INNER JOIN "entries$13" AS "entries$131" ON "orders$121"."id" = "entries$131"."id") AS "t1"