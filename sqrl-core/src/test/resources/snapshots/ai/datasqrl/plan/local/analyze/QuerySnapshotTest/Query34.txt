Orders.entries.product := JOIN Product ON Product.productid = _.productid LIMIT 1;
Orders.entries.dProduct := SELECT DISTINCT category AS name FROM _.product LIMIT 1;


LogicalProject(_id$0=[$0], __idx$1=[$1], name=[$2])
  LogicalSort(fetch=[1])
    LogicalProject(_id$0=[$0], __idx$1=[$1], name=[$11])
      LogicalJoin(condition=[=($0, $6)], joinType=[inner])
        LogicalTableScan(table=[[entries$13]])
        LogicalProject(_uuid=[$2], _ingest_time=[$3], productid=[$4], name=[$5], description=[$6], category=[$7])
          LogicalSort(fetch=[1])
            LogicalProject(_pk_id$0=[$0], _pk__idx$1=[$1], _uuid=[$6], _ingest_time=[$7], productid=[$8], name=[$9], description=[$10], category=[$11])
              LogicalJoin(condition=[=($2, $8)], joinType=[inner])
                LogicalTableScan(table=[[entries$13]])
                LogicalTableScan(table=[[product$10]])


SELECT *
FROM (SELECT "entries$13"."id" AS "_id$0", "entries$13"."_idx" AS "__idx$1", "t1"."category" AS "name"
  FROM "entries$13"
   INNER JOIN (SELECT "t0"."_uuid", "t0"."_ingest_time", "t0"."productid", "t0"."name", "t0"."description", "t0"."category"
    FROM (SELECT "entries$130"."id" AS "_pk_id$0", "entries$130"."_idx" AS "_pk__idx$1", "product$10"."_uuid", "product$10"."_ingest_time", "product$10"."productid", "product$10"."name", "product$10"."description", "product$10"."category"
      FROM "entries$13" AS "entries$130"
       INNER JOIN "product$10" ON "entries$130"."productid" = "product$10"."productid"
      FETCH NEXT 1 ROWS ONLY) AS "t0") AS "t1" ON "entries$13"."id" = "t1"."_uuid"
  FETCH NEXT 1 ROWS ONLY) AS "t3"