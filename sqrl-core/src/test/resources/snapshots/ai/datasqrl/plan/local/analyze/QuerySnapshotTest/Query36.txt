Orders.entries.product := JOIN Product ON Product.productid = _.productid LIMIT 1;
Orders.entries.dProduct := SELECT unit_price, product.category, product.name FROM _;


LogicalProject(_id$0=[$0], __idx$1=[$1], unit_price=[$4], category=[$11], name=[$9])
  LogicalJoin(condition=[=($0, $6)], joinType=[left])
    LogicalTableScan(table=[[entries$13]])
    LogicalProject(_uuid=[$2], _ingest_time=[$3], productid=[$4], name=[$5], description=[$6], category=[$7])
      LogicalSort(fetch=[1])
        LogicalProject(_pk_id$0=[$0], _pk__idx$1=[$1], _uuid=[$6], _ingest_time=[$7], productid=[$8], name=[$9], description=[$10], category=[$11])
          LogicalJoin(condition=[=($2, $8)], joinType=[default])
            LogicalTableScan(table=[[entries$13]])
            LogicalTableScan(table=[[product$10]])


SELECT "entries$13"."id" AS "_id$0", "entries$13"."_idx" AS "__idx$1", "entries$13"."unit_price", "t1"."category", "t1"."name"
FROM "entries$13"
 LEFT JOIN (SELECT "t0"."_uuid", "t0"."_ingest_time", "t0"."productid", "t0"."name", "t0"."description", "t0"."category"
  FROM (SELECT "entries$130"."id" AS "_pk_id$0", "entries$130"."_idx" AS "_pk__idx$1", "product$10"."_uuid", "product$10"."_ingest_time", "product$10"."productid", "product$10"."name", "product$10"."description", "product$10"."category"
    FROM "entries$13" AS "entries$130"
     DEFAULT JOIN "product$10" ON "entries$130"."productid" = "product$10"."productid"
    FETCH NEXT 1 ROWS ONLY) AS "t0") AS "t1" ON "entries$13"."id" = "t1"."_uuid"