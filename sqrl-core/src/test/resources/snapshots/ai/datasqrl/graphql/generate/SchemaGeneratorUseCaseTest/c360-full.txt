type Category {
  name: String
  products(productid: Int, name: String, description: String, category: String, updatetime: String): [Product]
}

type Customer {
  customerid: Int
  email: String
  name: String
  lastupdated: Int
  updatetime: String
  orders(id: Int, customerid: Int, time: String): [orders]
  order_again(customerid: Int, productid: Int, quantity: Int, num_orders: Int, most_recent: String): [order_again]
  _spending_by_month_category(customerid: Int, month: String, category: String, total: Float, savings: Float): [_spending_by_month_category]
  favorite_categories(customerid: Int, category_name: String, total: Float): [favorite_categories]
  order_stats(customerid: Int, total_spend: Float, num_orders: Int): [order_stats]
}

type NewCustomerPromotion {
  customerid: Int
  email: String
  name: String
  total_spend: Float
  num_orders: Int
}

type Product {
  productid: Int
  name: String
  description: String
  category: String
  updatetime: String
}

type Query {
  Category(name: String): [Category]
  Customer(customerid: Int, email: String, name: String, lastupdated: Int, updatetime: String): [Customer]
  NewCustomerPromotion(customerid: Int, email: String, name: String, total_spend: Float, num_orders: Int): [NewCustomerPromotion]
  orders(id: Int, customerid: Int, time: String): [orders]
  Product(productid: Int, name: String, description: String, category: String, updatetime: String): [Product]
}

type _spending_by_month_category {
  customerid: Int
  month: String
  category: String
  total: Float
  savings: Float
  parent(customerid: Int, email: String, name: String, lastupdated: Int, updatetime: String): Customer!
}

type entries {
  productid: Int
  quantity: Int
  unit_price: Float
  parent(id: Int, customerid: Int, time: String): orders!
  discount: Float
  total: Float
  product(productid: Int, name: String, description: String, category: String, updatetime: String): [Product]
}

type favorite_categories {
  customerid: Int
  category_name: String
  total: Float
  parent(customerid: Int, email: String, name: String, lastupdated: Int, updatetime: String): Customer!
  category(name: String): [Category]
}

type order_again {
  customerid: Int
  productid: Int
  quantity: Int
  num_orders: Int
  most_recent: String
  parent(customerid: Int, email: String, name: String, lastupdated: Int, updatetime: String): Customer!
}

type order_stats {
  customerid: Int
  total_spend: Float
  num_orders: Int
  parent(customerid: Int, email: String, name: String, lastupdated: Int, updatetime: String): Customer!
}

type orders {
  id: Int
  customerid: Int
  time: String
  entries(productid: Int, quantity: Int, unit_price: Float, discount: Float, total: Float): [entries]
  total(price: Float, discount: Float, num: Int): [total]
}

type total {
  price: Float
  discount: Float
  num: Int
  parent(id: Int, customerid: Int, time: String): orders!
}

